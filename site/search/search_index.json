{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stemmer","stopWordFilter","trimmer"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#unity-claude-automation","title":"Unity-Claude-Automation","text":""},{"location":"#welcome-to-unity-claude-automation-documentation","title":"Welcome to Unity-Claude-Automation Documentation","text":"<p>Unity-Claude-Automation is a comprehensive automation framework that bridges Unity development with Claude AI capabilities, providing intelligent automation, monitoring, and integration features for Unity projects.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Unity Automation: Automated compilation, error detection, and project management</li> <li>Claude AI Integration: Intelligent response generation and autonomous monitoring</li> <li>System Status Monitoring: Real-time tracking of subsystems and processes</li> <li>Multi-Agent Architecture: Distributed processing with specialized agents</li> <li>GitHub Integration: Automated issue management and PR workflows</li> <li>Event-Driven Notifications: Email and webhook notifications for critical events</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Get started with Unity-Claude-Automation in just a few steps:</p> <ol> <li>Installation Guide - Set up the framework</li> <li>Quick Start Tutorial - Run your first automation</li> <li>Configuration - Customize for your project</li> </ol>"},{"location":"#architecture-overview","title":"Architecture Overview","text":"<pre><code>graph TB\n    A[Unity Project] --&gt; B[Unity-Claude-Automation]\n    B --&gt; C[System Status Module]\n    B --&gt; D[Claude Integration]\n    B --&gt; E[GitHub Module]\n    C --&gt; F[Dashboard]\n    D --&gt; G[Autonomous Agent]\n    E --&gt; H[Issue Management]</code></pre>"},{"location":"#documentation-structure","title":"Documentation Structure","text":""},{"location":"#for-users","title":"For Users","text":"<ul> <li>User Guide - Complete guide for using the framework</li> <li>Modules - Detailed documentation for each module</li> <li>Resources - Troubleshooting and FAQ</li> </ul>"},{"location":"#for-developers","title":"For Developers","text":"<ul> <li>API Reference - Complete API documentation</li> <li>Development Guide - Contributing guidelines</li> <li>Advanced Topics - Advanced architecture patterns</li> </ul>"},{"location":"#implementation-status","title":"Implementation Status","text":""},{"location":"#phase-1-complete-repository-structure-module-architecture","title":"Phase 1 Complete: Repository Structure &amp; Module Architecture","text":"<ul> <li>Directory Structure: Complete multi-agent architecture foundation</li> <li>PowerShell Module: 25+ functions with 100% test success rate</li> <li>Code Analysis Pipeline: Ripgrep, ctags, AST parsing, code graphs</li> <li>PowerShell 5.1 Compatibility: Full compatibility confirmed</li> </ul>"},{"location":"#phase-2-complete-static-analysis-integration","title":"Phase 2 Complete: Static Analysis Integration","text":"<ul> <li>Advanced Pattern Recognition: Enhanced regex and semantic analysis</li> <li>Security Scanning: Integration with static analysis tools</li> <li>Code Quality Metrics: Comprehensive quality assessment</li> </ul>"},{"location":"#phase-3-in-progress-documentation-generation-pipeline","title":"Phase 3 In Progress: Documentation Generation Pipeline","text":"<ul> <li>Day 1-2: Documentation parsers - COMPLETED</li> <li>Day 3-4: Quality tools (Vale, markdownlint) - COMPLETED</li> <li>Day 5: MkDocs Material Setup - IN PROGRESS</li> </ul>"},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>PowerShell 5.1 or later (PowerShell 7.5+ recommended)</li> <li>Python 3.10+ (for documentation generation)</li> <li>ripgrep (rg) installed and in PATH</li> <li>universal-ctags installed (optional)</li> <li>Git repository access</li> </ul>"},{"location":"#basic-usage","title":"Basic Usage","text":"<pre><code># Import the repo analyst module\nImport-Module .\\Modules\\Unity-Claude-RepoAnalyst\\Unity-Claude-RepoAnalyst.psd1\n\n# Start autonomous monitoring\n.\\Start-UnityClaudeAutomation.ps1\n\n# Generate code graph\n$graph = New-CodeGraph -ProjectPath $pwd\n\n# Search for patterns\n$results = Invoke-RipgrepSearch -Pattern \"function.*\\{\" -FileType powershell\n</code></pre>"},{"location":"#latest-updates","title":"Latest Updates","text":"<p>Version 2.0.0 Released</p> <p>Major update with enhanced GitHub integration, event logging, and performance improvements. View Changelog</p>"},{"location":"#getting-help","title":"Getting Help","text":"<ul> <li>FAQ - Frequently asked questions</li> <li>Troubleshooting - Common issues and solutions</li> <li>GitHub Issues - Report bugs or request features</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions! Please see our Contributing Guide for details on how to get started.</p>"},{"location":"#license","title":"License","text":"<p>Unity-Claude-Automation is licensed under the MIT License. See License for details.</p> <p>Last Updated: 2025-08-23 Version: 2.0.0 Module Status: Production Ready</p>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/","title":"LEARNINGS AUTONOMOUS AGENTS","text":""},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#autonomous-agents-unity-claude-automation","title":"Autonomous Agents - Unity-Claude Automation","text":"<p>Phase 3 autonomous agent implementation, state management, and intelligent automation Last Updated: 2025-08-19</p>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#phase-3-autonomous-state-management-learnings-2025-08-19","title":"\ud83d\udd04 Phase 3: Autonomous State Management Learnings (2025-08-19)","text":""},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#134-autonomous-agent-state-management-challenges-critical","title":"134. Autonomous Agent State Management Challenges (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: Current autonomous agents in 2025 still face significant state management and persistence challenges Discovery: Research reveals fully autonomous agents frequently get stuck in redundant task loops and drift off track Evidence: AutoGPT-style agents lack persistence across alerts/decisions, leading to memory loss Resolution: Implement scoped memory tied to specific contexts with JSON persistence and checkpoint systems Critical Learning: Autonomous agents need careful architectural consideration for state persistence, not just functionality</p>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#135-powershell-state-machine-json-persistence-best-practices-documented","title":"135. PowerShell State Machine JSON Persistence Best Practices (\ud83d\udcdd DOCUMENTED)","text":"<p>Issue: State machines in PowerShell require careful design for JSON persistence and recovery Discovery: .NET Stateless library compatible with PowerShell provides Deactivate/Activate methods for state storage Evidence: Spring Framework patterns adaptable to PowerShell with StateMachinePersister interface Resolution: Use JSON-configured state machines with incremental checkpointing to minimize storage cost Critical Learning: Implement state transitions as JSON documents with backup/restore mechanisms for reliability</p>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#136-human-intervention-threshold-design-for-2025-critical","title":"136. Human Intervention Threshold Design for 2025 (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: Autonomous systems require human approval for high-impact actions to prevent security risks Discovery: Research shows attackers can exploit poor observability in autonomous systems to hide malicious behavior Evidence: 2025 best practices emphasize threshold-based alerts and predefined intervention triggers Resolution: Implement multi-level intervention: automated responses for low-risk, human approval for high-impact operations Critical Learning: Balance automation efficiency with human oversight - require human confirmation for actions like mass emails or financial operations</p>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#137-performance-counter-integration-for-real-time-monitoring-resolved","title":"137. Performance Counter Integration for Real-time Monitoring (\u2705 RESOLVED)","text":"<p>Issue: Autonomous agents need real-time system health monitoring to prevent resource exhaustion Discovery: PowerShell Get-Counter cmdlet provides comprehensive performance monitoring for local/remote systems Evidence: CPU, memory, disk I/O, network activity monitoring with threshold-based alerting proven effective Resolution: Implement Get-Counter-based monitoring with configurable thresholds and automated intervention triggers Critical Learning: Real-time performance monitoring essential for autonomous operation - monitor CPU, memory, disk, and network activity</p>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#138-circuit-breaker-pattern-for-autonomous-systems-resolved","title":"138. Circuit Breaker Pattern for Autonomous Systems (\u2705 RESOLVED)","text":"<p>Issue: Autonomous systems need protection against cascading failures and infinite error loops Discovery: Research shows circuit breaker patterns essential for persistent failure protection Evidence: Exponential backoff and selective retry logic proven effective for different error types Resolution: Implement circuit breaker with failure threshold, timeout periods, and recovery attempt limits Critical Learning: Circuit breakers prevent autonomous systems from causing system-wide issues during failures</p>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#139-checkpoint-system-design-for-state-recovery-documented","title":"139. Checkpoint System Design for State Recovery (\ud83d\udcdd DOCUMENTED)","text":"<p>Issue: Long-running autonomous operations need recovery points to handle interruptions and failures Discovery: Incremental checkpointing minimizes time and storage cost for frequent state saves Evidence: Research shows system state snapshots with save/restore executive state most reliable approach Resolution: Implement checkpoint system with incremental state saves, restoration capabilities, and 24-hour backup retention Critical Learning: Checkpoint systems should balance frequency (every 5 minutes) with storage efficiency (incremental saves)</p>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#140-enhanced-state-machine-architecture-resolved","title":"140. Enhanced State Machine Architecture (\u2705 RESOLVED)","text":"<p>Issue: Simple state machines insufficient for complex autonomous operation requirements Discovery: Enhanced state machines need 11+ states including human intervention, circuit breaker, and recovery states Evidence: Research shows state persistence across PowerShell session restarts requires JSON-based storage Resolution: Implement enhanced state machine with HumanApprovalRequired, CircuitBreakerOpen, Recovering states Critical Learning: State machines for autonomous systems need explicit human intervention and error recovery states</p>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#141-performance-monitoring-integration-best-practices-documented","title":"141. Performance Monitoring Integration Best Practices (\ud83d\udcdd DOCUMENTED)","text":"<p>Issue: Autonomous systems need comprehensive health monitoring beyond basic operational status Discovery: Multiple notification methods (Console, File, Event) increase reliability of intervention alerts Evidence: Integration with monitoring platforms like Nagios/Zabbix provides centralized visibility Resolution: Implement multi-method alerting with file-based intervention queues and event log integration Critical Learning: Health monitoring should use multiple channels - console alerts may be missed during autonomous operation</p>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#142-json-based-state-storage-architecture-resolved","title":"142. JSON-Based State Storage Architecture (\u2705 RESOLVED)","text":"<p>Issue: Complex autonomous state requires structured storage with backup and restoration capabilities Discovery: JSON provides flexibility for state machine configuration changes without deployment Evidence: Backup rotation with 7-day retention proven effective for state recovery scenarios Resolution: Implement JSON storage with automatic backup rotation, compression, and integrity validation Critical Learning: JSON state storage should include metadata (timestamps, reasons, checksums) for debugging and audit trails</p>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#143-autonomous-operation-security-considerations-critical","title":"143. Autonomous Operation Security Considerations (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: Autonomous systems create security risks if they can execute arbitrary commands without oversight Discovery: Research emphasizes reliable logging essential to prevent blind spots that attackers can exploit Evidence: Defense-in-depth strategy requires prompt hardening, input validation, and robust runtime monitoring Resolution: Implement constrained execution with whitelisted commands, audit trails, and human override capabilities Critical Learning: Never compromise security for autonomy - maintain comprehensive logging and human intervention capabilities</p>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#144-phase-3-day-15-ashashtable-compatibility-implementation-resolved","title":"144. Phase 3 Day 15 AsHashtable Compatibility Implementation (\u2705 RESOLVED)","text":"<p>Issue: Phase 3 Day 15 autonomous state management failing with 67% test failure rate due to AsHashtable parameter incompatibility Discovery: AsHashtable parameter introduced in PowerShell 6.0 causes \"parameter cannot be found\" errors in PowerShell 5.1 Evidence: 4 instances of ConvertFrom-Json -AsHashtable causing complete state management system failure Resolution: Implemented ConvertTo-HashTable function with PSObject.Properties iteration for PowerShell 5.1 compatibility Critical Learning: Always implement PowerShell 5.1 compatible alternatives for newer cmdlet parameters in cross-version code Implementation: Added ConvertTo-HashTable function and Get-AgentState to Export-ModuleMember list Performance: Research shows PSObject.Properties conversion method is fastest PowerShell 5.1 compatible approach</p>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#autonomous-agent-architecture-patterns","title":"\ud83c\udfd7\ufe0f Autonomous Agent Architecture Patterns","text":""},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#enhanced-state-machine-design","title":"Enhanced State Machine Design","text":"<pre><code># 12-state autonomous operation state machine\n$EnhancedAutonomousStates = @{\n    \"Idle\" = @{\n        Description = \"Agent is idle, awaiting triggers or initialization\"\n        AllowedTransitions = @(\"Initializing\", \"Stopped\", \"Error\")\n        IsOperational = $false\n        RequiresMonitoring = $false\n        HumanInterventionRequired = $false\n        HealthCheckLevel = \"Minimal\"\n    }\n    \"Active\" = @{\n        Description = \"Agent is actively managing autonomous feedback loops\"\n        AllowedTransitions = @(\"Monitoring\", \"Processing\", \"Paused\", \"Error\", \"Stopped\")\n        IsOperational = $true\n        RequiresMonitoring = $true\n        HumanInterventionRequired = $false\n        HealthCheckLevel = \"Comprehensive\"\n    }\n    \"HumanApprovalRequired\" = @{\n        Description = \"Agent requires human approval for high-impact operations\"\n        AllowedTransitions = @(\"Processing\", \"Active\", \"Paused\", \"Error\", \"Stopped\")\n        IsOperational = $false\n        RequiresMonitoring = $true\n        HumanInterventionRequired = $true\n        HealthCheckLevel = \"Standard\"\n    }\n    \"CircuitBreakerOpen\" = @{\n        Description = \"Circuit breaker activated due to repeated failures\"\n        AllowedTransitions = @(\"Recovering\", \"Stopped\", \"HumanApprovalRequired\")\n        IsOperational = $false\n        RequiresMonitoring = $true\n        HumanInterventionRequired = $true\n        HealthCheckLevel = \"Diagnostic\"\n    }\n}\n</code></pre>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#human-intervention-system","title":"Human Intervention System","text":"<pre><code>function Request-HumanIntervention {\n    param(\n        [string]$AgentId,\n        [string]$Reason,\n        [ValidateSet(\"Low\", \"Medium\", \"High\", \"Critical\")]\n        [string]$Priority = \"Medium\",\n        [hashtable]$Context = @{}\n    )\n\n    $interventionId = New-Guid\n    $intervention = @{\n        InterventionId = $interventionId\n        AgentId = $AgentId\n        Timestamp = Get-Date\n        Reason = $Reason\n        Priority = $Priority\n        Context = $Context\n        Status = \"Requested\"\n        ResponseDeadline = (Get-Date).AddSeconds(300) # 5 minute timeout\n    }\n\n    # Multiple notification methods for reliability\n    Send-ConsoleAlert -Intervention $intervention\n    Write-FileNotification -Intervention $intervention\n    Write-EventLogEntry -Intervention $intervention\n\n    return $interventionId\n}\n</code></pre>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#circuit-breaker-implementation","title":"Circuit Breaker Implementation","text":"<pre><code>function Test-CircuitBreaker {\n    param(\n        [hashtable]$AgentState,\n        [int]$FailureThreshold = 3,\n        [int]$TimeoutMinutes = 5\n    )\n\n    if ($AgentState.ConsecutiveFailures -ge $FailureThreshold -and \n        $AgentState.CircuitBreakerState -eq \"Closed\") {\n\n        Write-Log \"Circuit breaker opened due to consecutive failures: $($AgentState.ConsecutiveFailures)\"\n        $AgentState.CircuitBreakerState = \"Open\"\n        $AgentState.CircuitBreakerOpenTime = Get-Date\n\n        # Request immediate human intervention\n        Request-HumanIntervention -AgentId $AgentState.AgentId -Reason \"Circuit breaker activated\" -Priority \"High\"\n\n        return $true\n    }\n\n    # Check for recovery attempt\n    if ($AgentState.CircuitBreakerState -eq \"Open\") {\n        $timeSinceOpen = (Get-Date) - $AgentState.CircuitBreakerOpenTime\n        if ($timeSinceOpen.TotalMinutes -ge $TimeoutMinutes) {\n            $AgentState.CircuitBreakerState = \"HalfOpen\"\n            Write-Log \"Circuit breaker attempting recovery after $TimeoutMinutes minutes\"\n        }\n    }\n\n    return $false\n}\n</code></pre>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#performance-monitoring-integration","title":"Performance Monitoring Integration","text":"<pre><code>function Get-SystemPerformanceMetrics {\n    $metrics = @{}\n\n    # CPU, Memory, Disk monitoring using Get-Counter\n    $counterPaths = @(\n        \"\\Processor(_Total)\\% Processor Time\",\n        \"\\Memory\\% Committed Bytes In Use\",\n        \"\\LogicalDisk(C:)\\% Free Space\"\n    )\n\n    $counterData = Get-Counter -Counter $counterPaths -ErrorAction SilentlyContinue\n\n    foreach ($counter in $counterData.CounterSamples) {\n        $metricName = $counter.Path.Split('\\')[-1]\n        $value = [math]::Round($counter.CookedValue, 2)\n\n        $metrics[$metricName] = @{\n            Value = $value\n            Timestamp = Get-Date\n            Status = if ($value -gt 80) { \"Critical\" } elseif ($value -gt 60) { \"Warning\" } else { \"Normal\" }\n        }\n    }\n\n    return $metrics\n}\n</code></pre>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#security-and-safety-patterns","title":"\ud83d\udd12 Security and Safety Patterns","text":""},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#constrained-execution-environment","title":"Constrained Execution Environment","text":"<pre><code>function Invoke-SafeAutonomousCommand {\n    param(\n        [string]$Command,\n        [hashtable]$Parameters,\n        [string[]]$AllowedCommands = @(\"Get-*\", \"Test-*\", \"Write-Host\", \"Export-*\")\n    )\n\n    # Validate command against whitelist\n    $isAllowed = $false\n    foreach ($pattern in $AllowedCommands) {\n        if ($Command -like $pattern) {\n            $isAllowed = $true\n            break\n        }\n    }\n\n    if (-not $isAllowed) {\n        Write-Warning \"Command not allowed in autonomous mode: $Command\"\n        Request-HumanIntervention -Reason \"Attempted execution of restricted command: $Command\" -Priority \"High\"\n        return $false\n    }\n\n    # Create constrained runspace\n    $sessionState = [System.Management.Automation.Runspaces.InitialSessionState]::CreateDefault()\n    $sessionState.LanguageMode = [System.Management.Automation.PSLanguageMode]::ConstrainedLanguage\n\n    $runspace = [runspacefactory]::CreateRunspace($sessionState)\n    $runspace.Open()\n\n    try {\n        $powershell = [powershell]::Create()\n        $powershell.Runspace = $runspace\n        $powershell.AddCommand($Command)\n\n        foreach ($param in $Parameters.GetEnumerator()) {\n            $powershell.AddParameter($param.Key, $param.Value)\n        }\n\n        $result = $powershell.Invoke()\n        return $result\n    }\n    finally {\n        $runspace.Close()\n        $runspace.Dispose()\n    }\n}\n</code></pre>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#comprehensive-audit-trail","title":"Comprehensive Audit Trail","text":"<pre><code>function Write-AutonomousOperationLog {\n    param(\n        [string]$AgentId,\n        [string]$Operation,\n        [string]$Result,\n        [hashtable]$Context = @{}\n    )\n\n    $logEntry = @{\n        Timestamp = Get-Date -Format \"yyyy-MM-dd HH:mm:ss.fff\"\n        AgentId = $AgentId\n        Operation = $Operation\n        Result = $Result\n        Context = $Context\n        ProcessId = $PID\n        UserContext = [Environment]::UserName\n        MachineContext = [Environment]::MachineName\n    }\n\n    # Write to centralized log\n    $logJson = $logEntry | ConvertTo-Json -Compress\n    Add-Content -Path \"autonomous_operations.log\" -Value $logJson\n\n    # Write to agent-specific log\n    $agentLogPath = \"SessionData\\Logs\\$AgentId.log\"\n    Add-Content -Path $agentLogPath -Value $logJson\n}\n</code></pre>"},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#autonomous-agent-success-patterns","title":"\ud83d\udcca Autonomous Agent Success Patterns","text":""},{"location":"LEARNINGS_AUTONOMOUS_AGENTS/#pattern-based-decision-making","title":"Pattern-Based Decision Making","text":"<pre><code>function Get-AutonomousActionRecommendation {\n    param(\n        [string]$ErrorPattern,\n        [hashtable]$Context,\n        [hashtable]$HistoricalData\n    )\n\n    # Check historical success rates for similar patterns\n    $similarCases = $HistoricalData.Cases | Where-Object { \n        $_.ErrorPattern -eq $ErrorPattern -and \n        $_.Context.UnityVersion -eq $Context.UnityVersion \n    }\n\n    if ($similarCases.Count -gt 0) {\n        $successRate = ($similarCases | Where-Object { $_.Result -eq \"Success\" }).Count / $similarCases.Count\n\n        if ($successRate -gt 0.8) {\n            return @{\n                Action = \"AutoFix\"\n                Confidence = $successRate\n                Recommendation = \"High confidence automatic fix based on historical data\"\n            }\n        } elseif ($successRate -gt 0.5) {\n            return @{\n                Action = \"HumanApproval\"\n                Confidence = $successRate\n                Recommendation = \"Medium confidence - request human approval\"\n            }\n        }\n    }\n\n    return @{\n        Action = \"Manual\"\n        Confidence = 0.0\n        Recommendation = \"Insufficient data for autonomous action\"\n    }\n}\n</code></pre> <p>This document covers autonomous agent implementation specifics. For performance and security patterns, see LEARNINGS_PERFORMANCE_SECURITY.md</p>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/","title":"LEARNINGS CLAUDE INTEGRATION","text":""},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#claude-integration-unity-claude-automation","title":"Claude Integration - Unity-Claude Automation","text":"<p>Claude CLI and API integration specifics, SendKeys automation, and response processing Last Updated: 2025-08-19</p>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#api-integration-learnings","title":"\ud83d\udd27 API Integration Learnings","text":""},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#7-api-key-management-resolved","title":"7. API Key Management (\u2705 RESOLVED)","text":"<p>Issue: Secure storage of Anthropic API key Discovery: Environment variables sufficient for development Evidence: $env:ANTHROPIC_API_KEY standard practice Resolution: Use env var for dev, consider Credential Manager for production Critical Learning: Never hardcode keys; always check for key existence</p>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#8-token-usage-and-costs-documented","title":"8. Token Usage and Costs (\ud83d\udcdd DOCUMENTED)","text":"<p>Issue: Understanding API costs Discovery: Detailed token usage in responses Evidence: Input tokens ~\\(3/million, output ~\\)15/million Resolution: Calculate and display costs; implement limits if needed Critical Learning: Always show token usage to users for transparency</p>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#9-response-parsing-resolved","title":"9. Response Parsing (\u2705 RESOLVED)","text":"<p>Issue: Extracting code from Claude responses Discovery: Responses contain markdown code blocks Evidence: Regex pattern <code>\\</code>``powershell([\\s\\S]?)```` works reliably **Resolution*: Parse markdown blocks; validate before execution Critical Learning: Never execute extracted code without validation</p>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#sendkeys-automation-learnings","title":"\ud83c\udfaf SendKeys Automation Learnings","text":""},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#10-window-focus-management-critical","title":"10. Window Focus Management (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: SendKeys requires correct window focus Discovery: Alt+Tab ordering critical for success Evidence: Scripts fail if Claude window not next in Alt+Tab order Resolution: Document window setup; add delay for user positioning Critical Learning: Always give user time to arrange windows</p>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#11-typing-speed-vs-reliability-resolved","title":"11. Typing Speed vs Reliability (\u2705 RESOLVED)","text":"<p>Issue: Fast typing causes character drops Discovery: Terminal input buffers can overflow Evidence: 10ms delay reliable; 0ms causes issues Resolution: Default 10ms delay; make configurable Critical Learning: Reliability over speed for SendKeys</p>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#12-special-character-handling-documented","title":"12. Special Character Handling (\ud83d\udcdd DOCUMENTED)","text":"<p>Issue: Special chars break SendKeys Discovery: Brackets, quotes need escaping Evidence: <code>{</code>, <code>}</code>, <code>[</code>, <code>]</code> have special meaning in SendKeys Resolution: Escape special characters before sending Critical Learning: Always sanitize text for SendKeys</p>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#131-sendkeys-window-detection-specificity-day-13-resolved","title":"131. SendKeys Window Detection Specificity (Day 13 - \u2705 RESOLVED)","text":"<p>Issue: SendKeys targeting wrong PowerShell window causing random command execution Discovery: Window title matching too broad - captures PowerShell ISE, VS Code terminals, etc. Evidence: \"claude\" search matched PowerShell processes with \"claude\" in path/arguments Location: CLIAutomation.psm1 Submit-InputToClaudeViaKeys function Root Cause: Generic process name search includes unrelated PowerShell processes Technical Details: - Get-Process searches all processes by name pattern - PowerShell ISE often has \"claude\" in recent file paths - VS Code terminals may contain \"claude\" in working directory - SendKeys execution in wrong window can cause destructive commands Resolution: Remove PowerShell processes from search list and require explicit Claude title match: <pre><code># Only search Claude-specific processes first\n$claudeProcesses = Get-Process -Name \"claude\" -ErrorAction SilentlyContinue\n# For terminals, require explicit \"claude\" in title\nif ($title -match \"claude|Claude\") { ... }\n</code></pre> Critical Learning: Be very specific with window detection to avoid SendKeys targeting wrong applications</p>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#claude-cli-integration-patterns","title":"\ud83d\udce1 Claude CLI Integration Patterns","text":""},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#cli-setup-and-verification","title":"CLI Setup and Verification","text":"<pre><code># Check Claude CLI installation\nif (-not (Get-Command claude -ErrorAction SilentlyContinue)) {\n    Write-Error \"Claude CLI not found. Install from: https://github.com/anthropics/claude-cli\"\n    return\n}\n\n# Verify Claude CLI version\n$claudeVersion = claude --version\nWrite-Host \"Claude CLI Version: $claudeVersion\"\n</code></pre>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#sendkeys-window-setup-requirements","title":"SendKeys Window Setup Requirements","text":"<p>Manual Setup Process: 1. Open Claude Code CLI with <code>claude chat</code> 2. Position Claude window as next in Alt+Tab order after PowerShell 3. Ensure Claude window is ready to receive input 4. Run automation script with proper delay</p> <p>Window Detection Pattern: <pre><code>function Find-ClaudeWindow {\n    # Primary: Look for Claude-specific processes\n    $claudeProcesses = Get-Process -Name \"claude\" -ErrorAction SilentlyContinue\n\n    if ($claudeProcesses) {\n        foreach ($process in $claudeProcesses) {\n            $windowTitle = $process.MainWindowTitle\n            if ($windowTitle -and $windowTitle -match \"claude|Claude\") {\n                return $process\n            }\n        }\n    }\n\n    # Fallback: Terminal windows with Claude in title\n    $allProcesses = Get-Process | Where-Object { $_.MainWindowTitle }\n    foreach ($process in $allProcesses) {\n        if ($process.MainWindowTitle -match \"claude|Claude\" -and \n            $process.ProcessName -notin @(\"powershell\", \"powershell_ise\", \"Code\")) {\n            return $process\n        }\n    }\n\n    return $null\n}\n</code></pre></p>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#sendkeys-input-reliability","title":"SendKeys Input Reliability","text":"<pre><code>function Send-TextToClaudeReliably {\n    param(\n        [string]$Text,\n        [int]$DelayBetweenCharacters = 10\n    )\n\n    # Escape SendKeys special characters\n    $escapedText = $Text -replace '([{}()\\[\\]%~^+])', '{$1}'\n\n    # Send with character delay for reliability\n    foreach ($char in $escapedText.ToCharArray()) {\n        [System.Windows.Forms.SendKeys]::SendWait($char)\n        Start-Sleep -Milliseconds $DelayBetweenCharacters\n    }\n\n    # Send Enter to submit\n    [System.Windows.Forms.SendKeys]::SendWait(\"{ENTER}\")\n}\n</code></pre>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#response-processing-patterns","title":"\ud83d\udd0d Response Processing Patterns","text":""},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#claude-response-structure-recognition","title":"Claude Response Structure Recognition","text":"<p>Standard Patterns: <pre><code># RECOMMENDED patterns\n$recommendedPattern = 'RECOMMENDED:\\s*([A-Z]+)\\s*-\\s*(.+)'\n\n# Code blocks\n$codeBlockPattern = '```(?:powershell|ps1)?\\s*([\\s\\S]*?)```'\n\n# Action-oriented responses\n$actionPattern = '(?:Please|Try|Run|Execute|Use)\\s+(.+)'\n</code></pre></p>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#response-classification-engine","title":"Response Classification Engine","text":"<pre><code>function Classify-ClaudeResponse {\n    param([string]$Response)\n\n    $classification = @{\n        Type = \"Information\"\n        Confidence = 0.0\n        RecommendedAction = $null\n        CodeBlocks = @()\n        RequiresHumanInput = $false\n    }\n\n    # Check for RECOMMENDED pattern (highest priority)\n    if ($Response -match 'RECOMMENDED:\\s*([A-Z]+)\\s*-\\s*(.+)') {\n        $classification.Type = \"Recommendation\"\n        $classification.RecommendedAction = $Matches[2]\n        $classification.Confidence = 0.95\n        return $classification\n    }\n\n    # Check for code blocks\n    $codeMatches = [regex]::Matches($Response, '```(?:powershell|ps1)?\\s*([\\s\\S]*?)```')\n    if ($codeMatches.Count -gt 0) {\n        $classification.CodeBlocks = $codeMatches | ForEach-Object { $_.Groups[1].Value.Trim() }\n        $classification.Type = \"Instruction\"\n        $classification.Confidence = 0.8\n    }\n\n    return $classification\n}\n</code></pre>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#context-extraction-for-follow-up","title":"Context Extraction for Follow-up","text":"<pre><code>function Extract-ContextFromResponse {\n    param([string]$Response)\n\n    $context = @{\n        ErrorCodes = @()\n        FilePaths = @()\n        UnityTerms = @()\n        ConversationCues = @()\n        NextActions = @()\n    }\n\n    # Extract Unity error codes\n    $errorMatches = [regex]::Matches($Response, 'CS\\d{4}')\n    $context.ErrorCodes = $errorMatches | ForEach-Object { $_.Value }\n\n    # Extract file paths\n    $pathMatches = [regex]::Matches($Response, '[A-Za-z]:\\\\[^\"\"\\s]+|[./][^\"\"\\s]+\\.(?:cs|js|ts|json|md)')\n    $context.FilePaths = $pathMatches | ForEach-Object { $_.Value }\n\n    # Extract Unity-specific terms\n    $unityTerms = @('MonoBehaviour', 'GameObject', 'Transform', 'ScriptableObject', 'Unity', 'Asset')\n    foreach ($term in $unityTerms) {\n        if ($Response -match $term) {\n            $context.UnityTerms += $term\n        }\n    }\n\n    return $context\n}\n</code></pre>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#safety-and-validation-patterns","title":"\ud83d\udee1\ufe0f Safety and Validation Patterns","text":""},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#response-validation-before-execution","title":"Response Validation Before Execution","text":"<pre><code>function Test-ResponseSafety {\n    param([string]$Response)\n\n    # Dangerous patterns to avoid\n    $dangerousPatterns = @(\n        'Remove-Item.*-Recurse',\n        'Format-Volume',\n        'Stop-Process.*-Force',\n        'Invoke-Expression',\n        'powershell.*-EncodedCommand'\n    )\n\n    foreach ($pattern in $dangerousPatterns) {\n        if ($Response -match $pattern) {\n            Write-Warning \"Potentially dangerous command detected: $pattern\"\n            return $false\n        }\n    }\n\n    return $true\n}\n</code></pre>"},{"location":"LEARNINGS_CLAUDE_INTEGRATION/#command-extraction-and-validation","title":"Command Extraction and Validation","text":"<pre><code>function Extract-SafeCommands {\n    param([string]$Response)\n\n    $commands = @()\n    $codeBlocks = [regex]::Matches($Response, '```(?:powershell|ps1)?\\s*([\\s\\S]*?)```')\n\n    foreach ($match in $codeBlocks) {\n        $code = $match.Groups[1].Value.Trim()\n\n        # Validate safety\n        if (Test-ResponseSafety -Response $code) {\n            $commands += @{\n                Code = $code\n                Type = \"PowerShell\"\n                SafetyChecked = $true\n            }\n        } else {\n            Write-Warning \"Skipping unsafe command block\"\n        }\n    }\n\n    return $commands\n}\n</code></pre> <p>This document covers Claude-specific integration patterns. For broader automation patterns, see LEARNINGS_UNITY_AUTOMATION.md</p>"},{"location":"LEARNINGS_CRITICAL_REQUIREMENTS/","title":"LEARNINGS CRITICAL REQUIREMENTS","text":""},{"location":"LEARNINGS_CRITICAL_REQUIREMENTS/#critical-requirements-unity-claude-automation","title":"Critical Requirements - Unity-Claude Automation","text":"<p>Essential knowledge that must be understood before starting any work Last Updated: 2025-08-19</p>"},{"location":"LEARNINGS_CRITICAL_REQUIREMENTS/#critical-must-know-before-starting","title":"\ud83d\udea8 CRITICAL: Must Know Before Starting","text":""},{"location":"LEARNINGS_CRITICAL_REQUIREMENTS/#1-claude-cli-limitations-critical","title":"1. Claude CLI Limitations (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: Claude Code CLI v1.0.53 does NOT support piped input or headless mode Discovery: Extensive testing confirmed CLI uses Ink (React for terminals) requiring interactive terminal Evidence:  - <code>echo \"test\" | claude chat</code> fails with \"raw mode\" error - <code>claude chat &lt; input.txt</code> hangs indefinitely - No --headless or --batch flags available Resolution: SendKeys automation is the ONLY reliable method for CLI automation Critical Learning: Do not waste time trying to pipe input to Claude CLI - it fundamentally cannot work with current version</p>"},{"location":"LEARNINGS_CRITICAL_REQUIREMENTS/#2-powershell-version-compatibility-critical","title":"2. PowerShell Version Compatibility (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: Script must maintain PowerShell 5.1 compatibility Discovery: Many organizations still on PS5.1; PS7 features break compatibility Evidence: - No <code>??</code> null coalescing operator in PS5.1 - No <code>ForEach-Object -Parallel</code> in PS5.1 - Different module loading behavior Resolution: Avoid PS7-only syntax; use ThreadJob module for parallelization Critical Learning: Always test on PS5.1 before deployment</p>"},{"location":"LEARNINGS_CRITICAL_REQUIREMENTS/#3-unity-batch-mode-compilation-resolved","title":"3. Unity Batch Mode Compilation (\u2705 RESOLVED)","text":"<p>Issue: EditorApplication.isCompiling always returns true in batch mode Discovery: Unity's compilation detection APIs don't work properly in batch mode Evidence: CompilationPipeline.compilationFinished is reliable; EditorApplication.isCompiling is not Resolution: Use CompilationPipeline events and SessionState for domain reload survival Critical Learning: Don't trust EditorApplication properties in batch mode</p>"},{"location":"LEARNINGS_CRITICAL_REQUIREMENTS/#4-powershell-script-encoding-requirements-critical","title":"4. PowerShell Script Encoding Requirements (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: UTF-8 BOM Requirement for Windows PowerShell 5.1 Discovery: Scripts created with UTF-8 without BOM cause \"unexpected token\" errors Evidence: Start-UnityClaudeAutomation.ps1 failed with multiple syntax errors Resolution: Convert files to UTF-8 with BOM using Fix-ScriptEncoding.ps1 Critical Learning: Always save PowerShell scripts as UTF-8 with BOM for compatibility Error Pattern: - Unexpected token '}' errors - String missing terminator errors - Missing closing brace errors at wrong lines</p>"},{"location":"LEARNINGS_CRITICAL_REQUIREMENTS/#5-powershell-error-location-reporting-critical","title":"5. PowerShell Error Location Reporting (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: Syntax errors reported at different lines than actual problem Discovery: Missing braces and syntax errors often detected later in code Evidence: Errors at lines 82, 84, 91, 149 but actual issue was encoding Resolution: Check lines before reported errors and verify file encoding Critical Learning: Always expand analysis range beyond reported error lines</p>"},{"location":"LEARNINGS_CRITICAL_REQUIREMENTS/#6-development-environment-setup-requirements","title":"6. Development Environment Setup Requirements","text":"<p>Required Software: - PowerShell: 5.1+ (PS5.1 compatibility required) - Unity: 2021.1.14f1 (.NET Standard 2.0) - Claude CLI: v1.0.53+ or API key - Memory: 4GB minimum - Storage: 1GB for logs/database</p> <p>Required Modules: <pre><code># For advanced features (optional)\nInstall-Module PSSQLite -Scope CurrentUser\nInstall-Module ThreadJob -Scope CurrentUser  # For PS5.1 parallelization\n</code></pre></p> <p>Environment Variables: <pre><code>$env:ANTHROPIC_API_KEY = \"sk-ant-...\"  # For API mode\n$env:PSModulePath = \"$PWD\\Modules;$env:PSModulePath\"\n</code></pre></p>"},{"location":"LEARNINGS_CRITICAL_REQUIREMENTS/#7-file-and-directory-structure-requirements","title":"7. File and Directory Structure Requirements","text":"<p>Critical Paths: - Unity Editor.log location: <code>C:\\Users\\georg\\AppData\\Local\\Unity\\Editor\\Editor.log</code> - Centralized Logging: All logs must write to <code>unity_claude_automation.log</code> at project root - Module Directory: <code>.\\Modules\\</code> with proper PowerShell module structure - Session Data: <code>.\\SessionData\\</code> for state persistence and checkpoints</p>"},{"location":"LEARNINGS_CRITICAL_REQUIREMENTS/#8-security-and-safety-requirements-critical","title":"8. Security and Safety Requirements (\u26a0\ufe0f CRITICAL)","text":"<p>Never Use in Autonomous Operation: - <code>--dangerously-skip-permissions</code> flag in Claude Code CLI - Direct code execution without validation - Automated file modifications without backup - Network operations without timeout/retry limits</p> <p>Always Required: - Constrained runspace for command execution - Parameter validation and sanitization - Path safety validation within project boundaries - Comprehensive logging for all operations</p> <p>This document contains only the most critical information needed before starting development. For detailed implementation specifics, see the other LEARNINGS_.md documents.*</p>"},{"location":"LEARNINGS_MODULE_SYSTEM/","title":"LEARNINGS MODULE SYSTEM","text":""},{"location":"LEARNINGS_MODULE_SYSTEM/#powershell-module-system-unity-claude-automation","title":"PowerShell Module System - Unity-Claude Automation","text":"<p>Module architecture, manifests, exports, and PowerShell module best practices Last Updated: 2025-08-19</p>"},{"location":"LEARNINGS_MODULE_SYSTEM/#module-system-learnings","title":"\ud83d\udccb Module System Learnings","text":""},{"location":"LEARNINGS_MODULE_SYSTEM/#4-module-manifest-requirements-documented","title":"4. Module Manifest Requirements (\ud83d\udcdd DOCUMENTED)","text":"<p>Issue: Confusion about required manifest fields Discovery: Only ModuleVersion is truly required in .psd1 Evidence: Modules load without other fields but Gallery publishing needs more Resolution: Include ModuleVersion, GUID, Author, and FunctionsToExport minimum Critical Learning: Start minimal, add fields as needed</p>"},{"location":"LEARNINGS_MODULE_SYSTEM/#5-module-state-management-resolved","title":"5. Module State Management (\u2705 RESOLVED)","text":"<p>Issue: Sharing state between modules Discovery: Each module has isolated SessionState Evidence: Global variables don't work; script scope limited to module Resolution: Use module-scoped variables with explicit exports Critical Learning: Design for isolation; use return values not shared state</p>"},{"location":"LEARNINGS_MODULE_SYSTEM/#6-module-reloading-limitations-critical","title":"6. Module Reloading Limitations (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: No true hot reload in PowerShell Discovery: Import-Module -Force requires manual intervention Evidence: Remove-Module needed before reload; references may persist Resolution: Design for restart; use watchdog pattern for auto-updates Critical Learning: Plan for full restart cycles, not hot swapping</p>"},{"location":"LEARNINGS_MODULE_SYSTEM/#19-powershell-module-manifest-requirements-for-nested-modules-critical","title":"19. PowerShell Module Manifest Requirements for Nested Modules (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: \"The specified module...was not loaded because no valid module file was found\" when importing modular architecture Discovery: Must create .psd1 manifest file with NestedModules configuration for multi-module architecture Evidence: Test-EnhancedResponseProcessing-Day11.ps1 failed with 0% success rate, all functions missing Resolution: Create .psd1 manifest with NestedModules array listing all sub-modules and FunctionsToExport Critical Learning: PowerShell requires .psd1 manifest for proper nested module loading and function export Error Pattern: Missing manifest causes \"module not found\" errors even when .psm1 files exist</p>"},{"location":"LEARNINGS_MODULE_SYSTEM/#22-powershell-module-import-path-resolution-documented","title":"22. PowerShell Module Import Path Resolution (\ud83d\udcdd DOCUMENTED)","text":"<p>Issue: \"The specified module...was not loaded because no valid module file was found\" for relative paths Discovery: Module import paths are relative to current module location, not project root Evidence: ContextExtraction.psm1 importing \"Intelligence\\ContextOptimization.psm1\" but file in root Resolution: Use correct relative path based on actual file location: \"ContextOptimization.psm1\" Critical Learning: Always verify actual file locations when using relative paths in Import-Module statements Error Pattern: FileNotFoundException for modules that exist but are in different directories</p>"},{"location":"LEARNINGS_MODULE_SYSTEM/#module-architecture-best-practices","title":"\ud83c\udfd7\ufe0f Module Architecture Best Practices","text":""},{"location":"LEARNINGS_MODULE_SYSTEM/#modular-architecture-patterns","title":"Modular Architecture Patterns","text":"<p>Successful Pattern: Category-based organization <pre><code>Modules/\n\u251c\u2500\u2500 Core/               # Basic functionality\n\u251c\u2500\u2500 Monitoring/         # File watching, logging\n\u251c\u2500\u2500 Parsing/           # Response processing\n\u251c\u2500\u2500 Execution/         # Safe command execution\n\u251c\u2500\u2500 Commands/          # Unity operations\n\u251c\u2500\u2500 Intelligence/      # AI and analytics\n\u2514\u2500\u2500 Integration/       # External system integration\n</code></pre></p>"},{"location":"LEARNINGS_MODULE_SYSTEM/#module-manifest-template-psd1","title":"Module Manifest Template (.psd1)","text":"<pre><code>@{\n    # Required fields\n    ModuleVersion = '1.0.0'\n    GUID = 'unique-guid-here'\n    Author = 'Your Name'\n\n    # Module structure\n    RootModule = 'MainModule.psm1'  # For single modules\n    NestedModules = @(              # For multi-module architecture\n        'Core\\AgentCore.psm1',\n        'Monitoring\\FileSystemMonitoring.psm1',\n        'Parsing\\ResponseParsing.psm1'\n    )\n\n    # Exports\n    FunctionsToExport = @(\n        'Get-AgentState',\n        'Set-AgentState',\n        'ConvertTo-HashTable'\n    )\n\n    # Dependencies\n    RequiredModules = @()\n    RequiredAssemblies = @()\n\n    # Compatibility\n    PowerShellVersion = '5.1'\n    CompatiblePSEditions = @('Desktop')\n}\n</code></pre>"},{"location":"LEARNINGS_MODULE_SYSTEM/#function-export-best-practices","title":"Function Export Best Practices","text":"<p>Always Export Required Functions: <pre><code># At end of .psm1 file\nExport-ModuleMember -Function @(\n    'Initialize-EnhancedAutonomousStateTracking',\n    'Set-EnhancedAutonomousState', \n    'Get-EnhancedAutonomousState',\n    'Get-AgentState',\n    'ConvertTo-HashTable'\n)\n</code></pre></p> <p>Validation Pattern: <pre><code># Test function exports\n$module = Get-Module ModuleName\n$expectedFunctions = @('Function1', 'Function2', 'Function3')\n$actualFunctions = $module.ExportedCommands.Keys\n$missingFunctions = $expectedFunctions | Where-Object { $_ -notin $actualFunctions }\nif ($missingFunctions) {\n    Write-Error \"Missing functions: $($missingFunctions -join ', ')\"\n}\n</code></pre></p>"},{"location":"LEARNINGS_MODULE_SYSTEM/#module-loading-and-import-patterns","title":"Module Loading and Import Patterns","text":"<p>Proper Module Path Setup: <pre><code># Add modules to path\n$env:PSModulePath = \"$PWD\\Modules;$env:PSModulePath\"\n\n# Import with error handling\ntry {\n    Import-Module Unity-Claude-AutonomousAgent-Refactored -Force\n    Write-Host \"Module loaded successfully\"\n} catch {\n    Write-Error \"Failed to load module: $($_.Exception.Message)\"\n}\n</code></pre></p> <p>Individual Module Testing: <pre><code># Test each module separately before integration\nImport-Module .\\Modules\\Core\\AgentCore.psm1 -Force\n$coreTest = Test-ModuleFunctions -ModuleName \"AgentCore\"\n\nImport-Module .\\Modules\\Monitoring\\FileSystemMonitoring.psm1 -Force  \n$monitoringTest = Test-ModuleFunctions -ModuleName \"FileSystemMonitoring\"\n</code></pre></p>"},{"location":"LEARNINGS_MODULE_SYSTEM/#module-development-workflow","title":"\ud83d\udd27 Module Development Workflow","text":""},{"location":"LEARNINGS_MODULE_SYSTEM/#module-creation-checklist","title":"Module Creation Checklist","text":"<ol> <li>Create .psm1 file with functions and proper Export-ModuleMember</li> <li>Create .psd1 manifest with required fields and exports</li> <li>Test module individually before integration</li> <li>Validate function exports using Get-Module</li> <li>Test module reload with Remove-Module/Import-Module cycle</li> <li>Integration testing with dependent modules</li> </ol>"},{"location":"LEARNINGS_MODULE_SYSTEM/#module-debugging-patterns","title":"Module Debugging Patterns","text":"<p>Function Export Debugging: <pre><code># Check what's actually exported\n$module = Get-Module ModuleName\n$module.ExportedCommands.Keys | Sort-Object\n\n# Check module file path\n$module.ModuleBase\n$module.Path\n\n# Check nested modules\n$module.NestedModules\n</code></pre></p> <p>Module Loading Debugging: <pre><code># Verbose import to see loading process\nImport-Module ModuleName -Verbose\n\n# Check module search paths\n$env:PSModulePath -split ';'\n\n# Manual path verification\nTest-Path \".\\Modules\\ModuleName\\ModuleName.psm1\"\nTest-Path \".\\Modules\\ModuleName\\ModuleName.psd1\"\n</code></pre></p>"},{"location":"LEARNINGS_MODULE_SYSTEM/#common-module-pitfalls","title":"Common Module Pitfalls","text":"<ol> <li>Missing Export-ModuleMember - Functions defined but not exported</li> <li>Wrong Manifest Path - RootModule/NestedModules pointing to wrong files</li> <li>Relative Path Issues - Import-Module paths relative to wrong location</li> <li>Function Name Conflicts - Same function name in multiple modules</li> <li>State Persistence - Expecting global variables to work across modules</li> </ol>"},{"location":"LEARNINGS_MODULE_SYSTEM/#module-performance-considerations","title":"Module Performance Considerations","text":"<p>Lazy Loading Pattern: <pre><code># Only import when needed\nif (-not (Get-Module ModuleName)) {\n    Import-Module ModuleName\n}\n</code></pre></p> <p>Function Scope Optimization: <pre><code># Use script scope for shared variables within module\n$script:SharedConfig = @{}\n\n# Export only public interface\nExport-ModuleMember -Function @('Public-Function1', 'Public-Function2')\n</code></pre></p> <p>This document covers PowerShell module system specifics. For broader architecture patterns, see IMPLEMENTATION_GUIDE.md</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/","title":"LEARNINGS PERFORMANCE SECURITY","text":""},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#performance-and-security-unity-claude-automation","title":"Performance and Security - Unity-Claude Automation","text":"<p>Performance optimization, security patterns, and common pitfalls with solutions Last Updated: 2025-08-19</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#performance-learnings","title":"\ud83d\ude80 Performance Learnings","text":""},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#19-runspace-vs-psjob-performance-documented","title":"19. Runspace vs PSJob Performance (\ud83d\udcdd DOCUMENTED)","text":"<p>Issue: Start-Job very slow Discovery: ThreadJob 3x faster than Start-Job Evidence: Startup: ThreadJob 36ms vs PSJob 148ms Resolution: Use ThreadJob module for parallelization Critical Learning: Choose right tool for parallel execution</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#20-parallel-overhead-critical","title":"20. Parallel Overhead (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: Parallel slower for simple operations Discovery: Overhead can be 500x for trivial tasks Evidence: Simple loop: 1ms serial vs 500ms parallel Resolution: Only parallelize substantial work Critical Learning: Measure before parallelizing</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#http-server-implementation-learnings","title":"\ud83d\udd27 HTTP Server Implementation Learnings","text":""},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#36-httplistener-async-handling-issues-critical","title":"36. HttpListener Async Handling Issues (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: Async HttpListener methods don't work properly in PowerShell Discovery: BeginGetContext/EndGetContext with WaitOne fails to process requests Evidence: Requests hang indefinitely despite port being open Resolution: Use synchronous GetContext() blocking calls instead Critical Learning: For PowerShell HTTP servers, always use synchronous approach Working Example: Start-SimpleServer.ps1 using GetContext() directly</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#37-port-conflicts-with-httpsys-documented","title":"37. Port Conflicts with HTTP.sys (\ud83d\udcdd DOCUMENTED)","text":"<p>Issue: Ports remain reserved in HTTP.sys after improper cleanup Discovery: Ports 5556-5557 stuck even after stopping listeners Evidence: \"existing registration on the machine\" errors Resolution: Use different ports or restart PowerShell/system Critical Learning: Always properly dispose HttpListener objects</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#common-pitfalls-to-avoid","title":"\ud83d\udc1b Common Pitfalls to Avoid","text":""},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#21-assuming-api-methods-exist","title":"21. Assuming API Methods Exist","text":"<p>Issue: Calling non-existent Unity API methods Prevention: Always verify API exists in Unity version Example: EditorApplication.ExecuteMenuItem may not have all menu items</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#22-forgetting-execution-policy","title":"22. Forgetting Execution Policy","text":"<p>Issue: Scripts blocked by execution policy Prevention: Set policy or use -ExecutionPolicy Bypass Example: <code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</code></p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#23-not-checking-claude-cli-installation","title":"23. Not Checking Claude CLI Installation","text":"<p>Issue: Scripts fail if Claude CLI not installed Prevention: Add existence check with graceful fallback Example: <code>if (Get-Command claude -ErrorAction SilentlyContinue)</code></p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#24-ignoring-unity-project-state","title":"24. Ignoring Unity Project State","text":"<p>Issue: Automation fails on uncommitted changes Prevention: Check git status; warn about uncommitted changes Example: Save/commit before running automation</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#25-module-path-issues","title":"25. Module Path Issues","text":"<p>Issue: Modules not found despite being present Prevention: Explicitly add to PSModulePath Example: <code>$env:PSModulePath = \"$PWD\\Modules;$env:PSModulePath\"</code></p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#success-patterns","title":"\ud83d\udcc8 Success Patterns","text":""},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#26-incremental-testing","title":"26. Incremental Testing","text":"<p>Pattern: Test each component in isolation first Success Rate: 95% fewer integration issues Implementation: Run module tests before full automation</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#27-defensive-coding","title":"27. Defensive Coding","text":"<p>Pattern: Check every external dependency Success Rate: 80% reduction in runtime failures Implementation: Validate Unity path, Claude CLI, API key</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#28-comprehensive-logging","title":"28. Comprehensive Logging","text":"<p>Pattern: Log before and after every significant operation Success Rate: 90% faster debugging Implementation: Timestamp, operation, result, errors</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#29-graceful-degradation","title":"29. Graceful Degradation","text":"<p>Pattern: Fallback options for every external dependency Success Rate: System remains partially functional Implementation: API -&gt; CLI -&gt; Manual modes</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#30-user-feedback","title":"30. User Feedback","text":"<p>Pattern: Clear progress indicators and error messages Success Rate: 75% reduction in user confusion Implementation: Progress bars, status messages, clear errors</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#performance-optimization-patterns","title":"\u26a1 Performance Optimization Patterns","text":""},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#powershell-performance-best-practices","title":"PowerShell Performance Best Practices","text":"<pre><code># Use StringBuilder for large string operations\n$sb = New-Object System.Text.StringBuilder\nforeach ($item in $largeArray) {\n    $sb.AppendLine($item) | Out-Null\n}\n$result = $sb.ToString()\n\n# Avoid pipeline when not needed\n# Slow\n$filtered = $array | Where-Object { $_.Status -eq \"Active\" }\n\n# Fast\n$filtered = foreach ($item in $array) {\n    if ($item.Status -eq \"Active\") { $item }\n}\n\n# Use ArrayList for dynamic arrays\n$arrayList = New-Object System.Collections.ArrayList\n$arrayList.Add($item) | Out-Null  # Much faster than array +=\n</code></pre>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#parallel-processing-guidelines","title":"Parallel Processing Guidelines","text":"<pre><code># Only parallelize substantial work (&gt;100ms per item)\nif ($EstimatedTimePerItem -gt 100 -and $ItemCount -gt 10) {\n    # Use ThreadJob for PowerShell 5.1\n    $jobs = foreach ($item in $items) {\n        Start-ThreadJob -ScriptBlock {\n            param($item)\n            # Substantial work here\n            Process-Item $item\n        } -ArgumentList $item\n    }\n\n    $results = $jobs | Wait-Job | Receive-Job\n    $jobs | Remove-Job\n} else {\n    # Use serial processing\n    $results = foreach ($item in $items) {\n        Process-Item $item\n    }\n}\n</code></pre>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#memory-management-patterns","title":"Memory Management Patterns","text":"<pre><code># Force garbage collection for large operations\nfunction Invoke-LargeOperation {\n    try {\n        # Large memory operation\n        $largeData = Process-LargeDataSet\n        return $largeData\n    }\n    finally {\n        # Force cleanup\n        [System.GC]::Collect()\n        [System.GC]::WaitForPendingFinalizers()\n    }\n}\n\n# Dispose resources properly\nfunction Use-DatabaseConnection {\n    $connection = New-Object System.Data.SqlClient.SqlConnection($connectionString)\n    try {\n        $connection.Open()\n        # Use connection\n    }\n    finally {\n        if ($connection.State -eq \"Open\") {\n            $connection.Close()\n        }\n        $connection.Dispose()\n    }\n}\n</code></pre>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#security-patterns","title":"\ud83d\udd12 Security Patterns","text":""},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#input-validation-and-sanitization","title":"Input Validation and Sanitization","text":"<pre><code>function Test-SafePath {\n    param([string]$Path)\n\n    # Check for path traversal attacks\n    if ($Path -match '\\.\\.' -or $Path -match '[&lt;&gt;\"|*?]') {\n        return $false\n    }\n\n    # Ensure path is within project directory\n    $resolvedPath = Resolve-Path $Path -ErrorAction SilentlyContinue\n    $projectRoot = Resolve-Path $PWD\n\n    if (-not $resolvedPath -or -not $resolvedPath.Path.StartsWith($projectRoot.Path)) {\n        return $false\n    }\n\n    return $true\n}\n\nfunction Invoke-SafeCommand {\n    param(\n        [string]$Command,\n        [hashtable]$Parameters\n    )\n\n    # Whitelist allowed commands\n    $allowedCommands = @(\n        \"Get-*\", \"Test-*\", \"Write-Host\", \"Export-*\", \n        \"ConvertTo-*\", \"ConvertFrom-*\", \"Import-Module\"\n    )\n\n    $isAllowed = $false\n    foreach ($pattern in $allowedCommands) {\n        if ($Command -like $pattern) {\n            $isAllowed = $true\n            break\n        }\n    }\n\n    if (-not $isAllowed) {\n        throw \"Command not allowed: $Command\"\n    }\n\n    # Validate parameters\n    foreach ($param in $Parameters.GetEnumerator()) {\n        if ($param.Key -eq \"Path\" -and -not (Test-SafePath $param.Value)) {\n            throw \"Unsafe path parameter: $($param.Value)\"\n        }\n    }\n\n    # Execute in constrained context\n    &amp; $Command @Parameters\n}\n</code></pre>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#credential-management","title":"Credential Management","text":"<pre><code>function Get-SecureApiKey {\n    # Try environment variable first\n    $apiKey = $env:ANTHROPIC_API_KEY\n    if ($apiKey) {\n        return $apiKey\n    }\n\n    # Try Windows Credential Manager\n    try {\n        $credential = Get-StoredCredential -Target \"AnthropicAPI\"\n        if ($credential) {\n            return $credential.GetNetworkCredential().Password\n        }\n    } catch {\n        Write-Warning \"Could not access credential manager\"\n    }\n\n    # Prompt user as last resort\n    $secureString = Read-Host \"Enter Anthropic API Key\" -AsSecureString\n    $credential = New-Object System.Management.Automation.PSCredential(\"api\", $secureString)\n    return $credential.GetNetworkCredential().Password\n}\n\nfunction Set-SecureApiKey {\n    param([string]$ApiKey)\n\n    # Store in credential manager\n    try {\n        $secureKey = ConvertTo-SecureString $ApiKey -AsPlainText -Force\n        $credential = New-Object System.Management.Automation.PSCredential(\"api\", $secureKey)\n        New-StoredCredential -Target \"AnthropicAPI\" -Credential $credential\n        Write-Host \"API key stored securely\"\n    } catch {\n        Write-Warning \"Could not store in credential manager, using environment variable\"\n        $env:ANTHROPIC_API_KEY = $ApiKey\n    }\n}\n</code></pre>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#logging-security","title":"Logging Security","text":"<pre><code>function Write-SecureLog {\n    param(\n        [string]$Message,\n        [hashtable]$Data = @{}\n    )\n\n    # Scrub sensitive data\n    $sanitizedData = @{}\n    foreach ($key in $Data.Keys) {\n        $value = $Data[$key]\n\n        # Redact sensitive fields\n        if ($key -match \"(password|key|token|secret)\" -or \n            ($value -is [string] -and $value.Length -gt 20 -and $value -match \"^[A-Za-z0-9+/=]+$\")) {\n            $sanitizedData[$key] = \"*REDACTED*\"\n        } else {\n            $sanitizedData[$key] = $value\n        }\n    }\n\n    $logEntry = @{\n        Timestamp = Get-Date -Format \"yyyy-MM-dd HH:mm:ss.fff\"\n        Message = $Message\n        Data = $sanitizedData\n        User = [Environment]::UserName\n        Machine = [Environment]::MachineName\n    }\n\n    $logJson = $logEntry | ConvertTo-Json -Compress\n    Add-Content -Path \"secure_operations.log\" -Value $logJson\n}\n</code></pre>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#future-considerations","title":"\ud83d\udd2e Future Considerations","text":""},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#31-claude-cli-updates","title":"31. Claude CLI Updates","text":"<p>Watch For: Piped input support in future versions Impact: Could eliminate SendKeys requirement Preparation: Abstract input method for easy switching</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#32-unity-version-changes","title":"32. Unity Version Changes","text":"<p>Watch For: API changes in newer Unity versions Impact: May break compilation detection Preparation: Version detection and adaptation layer</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#33-powershell-7-migration","title":"33. PowerShell 7 Migration","text":"<p>Watch For: Organization adoption of PS7 Impact: Can use modern features Preparation: Conditional code paths for PS version</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#34-api-model-evolution","title":"34. API Model Evolution","text":"<p>Watch For: New Claude models with different capabilities Impact: Better error analysis and fixes Preparation: Model selection configuration</p>"},{"location":"LEARNINGS_PERFORMANCE_SECURITY/#35-security-requirements","title":"35. Security Requirements","text":"<p>Watch For: Increased security requirements Impact: May need signed scripts, encrypted storage Preparation: Plan for code signing, credential vaults</p> <p>This document covers performance optimization and security patterns. For complete system overview, see IMPLEMENTATION_GUIDE.md</p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/","title":"LEARNINGS POWERSHELL COMPATIBILITY","text":""},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#powershell-compatibility-unity-claude-automation","title":"PowerShell Compatibility - Unity-Claude Automation","text":"<p>PowerShell 5.1 compatibility issues, syntax errors, and version-specific workarounds Last Updated: 2025-08-19</p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#powershell-51-syntax-and-compatibility-issues","title":"\ud83d\udd27 PowerShell 5.1 Syntax and Compatibility Issues","text":""},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#13-powershell-string-interpolation-modulo-operator-critical","title":"13. PowerShell String Interpolation Modulo Operator (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: <code>($variable%)</code> in strings causes \"You must provide a value expression following the '%' operator\" Discovery: PowerShell interprets <code>%</code> as modulo operator even in string interpolation context Evidence: Test-ModuleRefactoring-Enhanced.ps1 failed with parser errors on <code>($percentage%)</code> Resolution: Move <code>%</code> outside parentheses: <code>$percentage%</code> or use format operator <code>\"{0}%\" -f $percentage</code> Critical Learning: Avoid <code>($var%)</code> pattern in PowerShell strings; use <code>$var%</code> or format operators instead Error Pattern: Parser reports cascading brace errors when modulo operator syntax is invalid</p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#14-powershell-backtick-escape-sequence-errors-critical","title":"14. PowerShell Backtick Escape Sequence Errors (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: <code>$variable\\</code>:<code>in strings causes \"Missing closing '}'\" brace matching errors **Discovery**: Backtick (\\</code>) before colon creates invalid escape sequence, breaking parser Evidence: Test-ModuleRefactoring-Enhanced.ps1 failed with brace errors on foreach loops Resolution: Remove unnecessary backticks: <code>$variable:</code> instead of <code>$variable\\</code>:<code>**Critical Learning**: Only use backtick for valid escape sequences (</code>\\n<code>,</code>\\t<code>,</code>\\\"`, etc.) Error Pattern: Invalid escape sequences cause parser failure and cascading brace mismatch errors</p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#15-powershell-variable-drive-reference-ambiguity-critical","title":"15. PowerShell Variable Drive Reference Ambiguity (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: <code>$variable:</code> causes \"Variable reference is not valid. ':' was not followed by a valid variable name character\" Discovery: PowerShell interprets <code>$variable:</code> as drive reference syntax (like C:, D:), not variable + colon Evidence: Test-ModuleRefactoring-Enhanced.ps1 failed with InvalidVariableReferenceWithDrive errors Resolution: Use variable delimiting: <code>${variable}:</code> instead of <code>$variable:</code> Critical Learning: Always delimit variables with <code>${variable}</code> when followed by colon to avoid drive reference confusion Error Pattern: Drive reference ambiguity causes cascading parser errors in surrounding code</p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#16-powershell-unicode-character-contamination-critical","title":"16. PowerShell Unicode Character Contamination (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: Persistent \"Missing closing '}'\" errors on foreach loops despite multiple syntax fixes Discovery: Copy-paste from rich text sources introduces Unicode dashes (U+2013, U+2014) instead of ASCII hyphens (U+002D) Evidence: 5 debugging attempts with same error location indicates Unicode character contamination Resolution: Create ASCII-only scripts, use Unicode detection tools, avoid copy-paste from Word/web Critical Learning: PowerShell 5.1 cannot distinguish Unicode dashes from ASCII hyphens, causing parser failures Error Pattern: Unicode characters cause misleading error locations and persistent syntax failures</p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#17-powershell-split-path-parameter-binding-errors-critical","title":"17. PowerShell Split-Path Parameter Binding Errors (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: \"Cannot bind parameter because parameter 'Parent' is specified more than once\" Discovery: Cannot specify same parameter multiple times in Split-Path command Evidence: <code>Split-Path $PSScriptRoot -Parent -Parent</code> syntax is invalid Resolution: Use nested calls: <code>Split-Path (Split-Path $PSScriptRoot -Parent) -Parent</code> Critical Learning: Split-Path location parameters (-Parent, -Leaf, -Extension) are mutually exclusive Error Pattern: Parameter binding errors when trying to use same parameter twice</p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#18-powershell-array-index-expression-errors-in-strings-critical","title":"18. PowerShell Array Index Expression Errors in Strings (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: \"Array index expression is missing or not valid\" when using [ERROR] or [DEBUG] in Write-Host Discovery: PowerShell interprets square brackets as array indexing syntax even in strings Evidence: <code>Write-Host \"[ERROR] Message\"</code> breaks with array index errors Resolution: Use alternative format: <code>Write-Host \"ERROR: Message\"</code> or escape brackets Critical Learning: Avoid square brackets in PowerShell strings unless escaped or using single quotes Error Pattern: Square brackets in strings cause array indexing interpretation errors</p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#20-powershell-automatic-variable-collision-critical","title":"20. PowerShell Automatic Variable Collision (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: \"The '++' operator works only on numbers. The operand is a 'System.Collections.Hashtable'\" Discovery: Custom variable <code>$matches</code> conflicts with PowerShell automatic <code>$Matches</code> variable (hashtable) Evidence: Classification.psm1 using <code>$matches++</code> but automatic variable overwrites integer with hashtable Resolution: Rename variables to avoid collision: <code>$matches</code> \u2192 <code>$patternMatches</code>, avoid <code>$error</code>, <code>$input</code> Critical Learning: Never use PowerShell automatic variable names for custom variables Error Pattern: Automatic variable collision causes type conversion errors in arithmetic operations</p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#21-powershell-hashtable-property-access-with-measure-object-critical","title":"21. PowerShell Hashtable Property Access with Measure-Object (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: \"The property 'Confidence' cannot be found in the input for any objects\" Discovery: Measure-Object cannot access hashtable keys as properties, requires PSCustomObject Evidence: ResponseParsing.psm1:194 and 400 using Measure-Object on array of hashtables Resolution: Use manual iteration: <code>foreach ($item in $array) { $sum += $item.Property }</code> Critical Learning: Hashtables don't expose keys as properties for Measure-Object; use manual loops or convert to PSCustomObject Error Pattern: Property access errors when using Measure-Object with hashtable collections - CHECK ALL INSTANCES</p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#134-powershell-51-datetime-ets-properties-json-serialization-critical","title":"134. PowerShell 5.1 DateTime ETS Properties JSON Serialization (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: \"Cannot create object of type System.DateTime. The DisplayHint property was not found for the System.DateTime object\" Discovery: PowerShell Extended Type System (ETS) adds DisplayHint and DateTime properties to DateTime objects that break JSON serialization Evidence: Get-Date creates DateTime objects with ETS properties that serialize incorrectly and fail during ConvertFrom-Json reconstruction Location: ConvertTo-HashTable function and Get-EnhancedAutonomousState UptimeMinutes calculation Root Cause: PowerShell 5.1's ETS automatically adds extra properties to DateTime objects: - DisplayHint Property: NoteProperty added by Get-Date cmdlet - DateTime Property: ScriptProperty attached by ETS to all DateTime objects - JSON Serialization: These properties get included in JSON but fail during reconstruction Technical Details: - PowerShell 5.1 uses JavaScriptSerializer with problematic DateTime handling - PowerShell 7.2+ fixed this by excluding ETS properties from DateTime serialization - ConvertFrom-Json tries to recreate objects with missing ETS properties causing errors Resolution: Special DateTime handling in ConvertTo-HashTable function: <pre><code># Detect DateTime objects\nif ($propertyValue -is [DateTime] -or ($propertyValue -and $propertyValue.GetType().Name -eq \"DateTime\")) {\n    # Use BaseObject to get underlying .NET DateTime without ETS properties\n    $baseDateTime = if ($propertyValue.PSObject.BaseObject) { $propertyValue.PSObject.BaseObject } else { $propertyValue }\n    # Convert to ISO string format for clean JSON serialization\n    $hashtable[$propertyName] = $baseDateTime.ToString(\"yyyy-MM-ddTHH:mm:ss.fffK\")\n}\n</code></pre> DateTime Parsing Fix: Update calculations to parse DateTime strings: <pre><code># Before (fails with ETS properties)\nUptimeMinutes = [math]::Round(((Get-Date) - [DateTime]$agentState.StartTime).TotalMinutes, 2)\n\n# After (parses ISO string correctly)\nUptimeMinutes = [math]::Round(((Get-Date) - [DateTime]::Parse($agentState.StartTime)).TotalMinutes, 2)\n</code></pre> Alternative Solutions: 1. Use .PSObject.BaseObject to get underlying DateTime 2. Type casting with [DateTime]$object to unwrap PSObject 3. Use ToString() method for string representation 4. Remove-TypeData to eliminate ETS properties globally Critical Learning: PowerShell 5.1 requires special DateTime handling for JSON serialization due to ETS property contamination. Always convert DateTime objects to ISO strings for persistence and parse back for calculations.</p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#135-powershell-ets-datetime-object-access-complex-structure-phase-3-day-15-resolved","title":"135. PowerShell ETS DateTime Object Access Complex Structure (Phase 3 Day 15 - \u2705 RESOLVED)","text":"<p>Issue: \"Exception calling 'Parse' with '1' argument(s): 'The string was not recognized as a valid DateTime. There is an unknown word starting at index 0.'\" Discovery: DateTime objects from Get-Date retain ETS properties (DisplayHint, DateTime, value) even after JSON round-trip, causing parsing failures Evidence: Agent state shows <code>StartTime {DisplayHint, DateTime, value}</code> structure instead of simple DateTime or string values Location: Get-EnhancedAutonomousState function UptimeMinutes calculation attempting DateTime.Parse() on complex object Root Cause: In-memory DateTime objects retain PSObject wrapper with ETS properties independently of JSON serialization fixes Technical Details: - Get-Date creates DateTime objects wrapped in PSObject with ETS properties - ConvertTo-HashTable correctly handles serialization to JSON as ISO strings - In-memory agent state objects still contain original PSObject complex structure - DateTime.Parse() receives complex object {DisplayHint, DateTime, value} instead of string - \"Unknown word starting at index 0\" indicates Parse() cannot interpret the object type Resolution: Implemented Get-SafeDateTime helper function with comprehensive object type handling: <pre><code>function Get-SafeDateTime {\n    param($DateTimeObject)\n\n    # Handle various object types: DateTime, String, PSObject with ETS properties\n    if ($DateTimeObject -is [DateTime]) { return $DateTimeObject }\n    if ($DateTimeObject -is [string]) { return [DateTime]::Parse($DateTimeObject) }\n\n    # Handle PSObject with ETS properties\n    if ($DateTimeObject.PSObject) {\n        # Try BaseObject first\n        if ($DateTimeObject.PSObject.BaseObject -is [DateTime]) {\n            return $DateTimeObject.PSObject.BaseObject\n        }\n        # Try 'value' property for complex ETS objects  \n        if ($DateTimeObject.value -is [DateTime]) {\n            return $DateTimeObject.value\n        }\n        # Try casting entire object\n        try { return [DateTime]$DateTimeObject } catch { }\n    }\n\n    # Last resort: ToString() and parse\n    return [DateTime]::Parse($DateTimeObject.ToString())\n}\n</code></pre> Updated Implementation:  <pre><code># Before (fails with ETS objects)\nUptimeMinutes = [math]::Round(((Get-Date) - [DateTime]::Parse($agentState.StartTime)).TotalMinutes, 2)\n\n# After (handles all DateTime object types)\nUptimeMinutes = [math]::Round(((Get-Date) - (Get-SafeDateTime -DateTimeObject $agentState.StartTime)).TotalMinutes, 2)\n</code></pre> Alternative Solutions: 1. Use [DateTime] casting with error handling 2. Access .PSObject.BaseObject directly 3. Check object type before parsing 4. Use .value property for ETS complex objects Critical Learning: PowerShell ETS properties persist in memory independently of JSON serialization. Always use safe extraction methods for DateTime objects rather than assuming they are strings or pure DateTime types.</p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#133-powershell-51-sort-object-string-vs-numeric-comparison-critical","title":"133. PowerShell 5.1 Sort-Object String vs Numeric Comparison (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: Queue sorting failing because Sort-Object treats numbers as strings Discovery: PowerShell 5.1 Sort-Object performs string comparison on numeric properties Evidence: Debug logs show \"1, 10, 5\" sorted as \"10, 1, 5\" instead of \"10, 5, 1\" Location: CLIAutomation.psm1 Add-InputToQueue function Root Cause: Sort-Object -Property Priority treats values as strings where \"1\" &lt; \"5\" alphabetically Technical Details: - String sorting: \"1\" comes before \"5\" alphabetically, regardless of numeric value - PowerShell 5.1 lacks stable sort features available in PowerShell 7+ - JSON deserialization may convert numbers to strings in PSObjects Resolution: Cast property to correct type for sorting: <pre><code># Before (string sorting)\n$queue.Queue = $queueArray | Sort-Object -Property Priority -Descending\n\n# After (numeric sorting)  \n$queue.Queue = $queueArray | Sort-Object -Property { [int]$_.Priority } -Descending\n</code></pre> Alternative Solutions: 1. Version casting: <code>Sort-Object { [version] $_.Priority }</code> 2. Regex padding: <code>Sort-Object { [regex]::Replace($_.Priority, '\\d+', { $args[0].Value.PadLeft(20) }) }</code> 3. Custom comparison function using StrCmpLogicalW API Critical Learning: Always cast numeric properties to proper types when sorting in PowerShell 5.1 to avoid string comparison behavior</p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#powershell-version-feature-compatibility","title":"\ud83d\udd27 PowerShell Version Feature Compatibility","text":""},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#powershell-51-vs-powershell-7-feature-differences","title":"PowerShell 5.1 vs PowerShell 7+ Feature Differences","text":"<p>Features NOT available in PowerShell 5.1: - Null coalescing operator <code>??</code> - Ternary operator <code>? :</code> - <code>ForEach-Object -Parallel</code> - Pipeline chain operators <code>&amp;&amp;</code>, <code>||</code> - ConvertFrom-Json <code>-AsHashtable</code> parameter - ConvertFrom-Json <code>-DateKind</code> parameter</p> <p>PowerShell 5.1 Workarounds: <pre><code># Instead of ??\n$value = if ($null -eq $variable) { \"default\" } else { $variable }\n\n# Instead of ? :\n$result = if ($condition) { \"true\" } else { \"false\" }\n\n# Instead of ForEach-Object -Parallel\nInstall-Module ThreadJob -Scope CurrentUser\nStart-ThreadJob -ScriptBlock { ... }\n\n# Instead of ConvertFrom-Json -AsHashtable\nfunction ConvertTo-HashTable { \n    # Custom implementation using PSObject.Properties\n}\n</code></pre></p>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#powershell-debugging-and-error-analysis","title":"\ud83d\udd0d PowerShell Debugging and Error Analysis","text":""},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#error-location-investigation-patterns","title":"Error Location Investigation Patterns","text":"<ol> <li>Check encoding first - UTF-8 BOM requirement</li> <li>Expand error range - Check lines before reported location</li> <li>Look for Unicode contamination - Use detection tools</li> <li>Validate syntax separately - Test small code blocks</li> <li>Use ISE or VSCode - Better error highlighting than console</li> </ol>"},{"location":"LEARNINGS_POWERSHELL_COMPATIBILITY/#common-error-misleading-patterns","title":"Common Error Misleading Patterns","text":"<ul> <li>Unicode characters cause persistent syntax errors</li> <li>Encoding issues reported at wrong line numbers</li> <li>Escape sequence errors cascade to unrelated code</li> <li>Module import failures mask function export issues</li> <li>Automatic variable collisions appear as type errors</li> </ul> <p>This document focuses specifically on PowerShell 5.1 compatibility and syntax issues. For broader development patterns, see LEARNINGS_CRITICAL_REQUIREMENTS.md</p>"},{"location":"LEARNINGS_UNITY_AUTOMATION/","title":"LEARNINGS UNITY AUTOMATION","text":""},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-automation-unity-claude-automation","title":"Unity Automation - Unity-Claude Automation","text":"<p>Unity-specific automation patterns, compilation detection, and Unity Editor integration Last Updated: 2025-08-19</p>"},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-integration-learnings","title":"\ud83d\udd04 Unity Integration Learnings","text":""},{"location":"LEARNINGS_UNITY_AUTOMATION/#16-domain-reload-survival-critical","title":"16. Domain Reload Survival (\u26a0\ufe0f CRITICAL)","text":"<p>Issue: Unity reloads assemblies during compilation Discovery: Static state lost on domain reload Evidence: [InitializeOnLoadMethod] called after each reload Resolution: Use SessionState for persistence Critical Learning: Never rely on static state in Unity Editor scripts</p>"},{"location":"LEARNINGS_UNITY_AUTOMATION/#17-roslyn-version-conflicts-documented","title":"17. Roslyn Version Conflicts (\ud83d\udcdd DOCUMENTED)","text":"<p>Issue: Unity crashes with Roslyn version mismatches Discovery: Unity limited to Microsoft.CodeAnalysis v3.8 Evidence: Modern tools use v4.4+, causing conflicts Resolution: Isolate Roslyn dependencies; use Unity's version Critical Learning: Check assembly versions for Unity compatibility</p>"},{"location":"LEARNINGS_UNITY_AUTOMATION/#18-console-log-access-resolved","title":"18. Console Log Access (\u2705 RESOLVED)","text":"<p>Issue: LogEntries is internal Unity class Discovery: Reflection required for console access Evidence: typeof(EditorWindow).Assembly.GetType(\"UnityEditor.LogEntries\") Resolution: Use reflection with proper error handling Critical Learning: Unity internals change; add version checks</p>"},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-compilation-detection","title":"\ud83c\udfaf Unity Compilation Detection","text":""},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-batch-mode-compilation-best-practices","title":"Unity Batch Mode Compilation Best Practices","text":"<pre><code>// Proper Unity compilation detection\nusing UnityEditor;\nusing UnityEditor.Compilation;\n\n[InitializeOnLoadMethod]\nstatic void InitializeCompilationDetection()\n{\n    // Use CompilationPipeline events - reliable in batch mode\n    CompilationPipeline.compilationFinished += OnCompilationFinished;\n    CompilationPipeline.compilationStarted += OnCompilationStarted;\n\n    // Store state in SessionState for domain reload survival\n    SessionState.SetBool(\"AutomationEnabled\", true);\n}\n\nstatic void OnCompilationStarted(object obj)\n{\n    // Export compilation start signal\n    var startTime = System.DateTime.Now;\n    SessionState.SetString(\"CompilationStartTime\", startTime.ToString(\"O\"));\n\n    // Write signal file for PowerShell detection\n    File.WriteAllText(\"compilation_started.signal\", startTime.ToString(\"O\"));\n}\n\nstatic void OnCompilationFinished(object obj)\n{\n    // Only export if automation enabled\n    if (!SessionState.GetBool(\"AutomationEnabled\", false)) return;\n\n    var endTime = System.DateTime.Now;\n    var startTimeStr = SessionState.GetString(\"CompilationStartTime\", \"\");\n\n    // Export compilation results\n    ExportCompilationResults(startTimeStr, endTime.ToString(\"O\"));\n}\n</code></pre>"},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-error-pattern-detection","title":"Unity Error Pattern Detection","text":"<pre><code>// Unity error code patterns for automation\npublic static class UnityErrorPatterns\n{\n    public static readonly Dictionary&lt;string, string&gt; ErrorCodeMappings = new Dictionary&lt;string, string&gt;\n    {\n        {\"CS0246\", \"Type or namespace not found\"},\n        {\"CS0103\", \"Name does not exist in current context\"},\n        {\"CS1061\", \"Type does not contain definition\"},\n        {\"CS0029\", \"Cannot implicitly convert type\"},\n        {\"CS0117\", \"Type does not contain definition for member\"},\n        {\"CS0120\", \"Object reference required for non-static member\"}\n    };\n\n    public static string ClassifyError(string errorMessage)\n    {\n        foreach (var pattern in ErrorCodeMappings)\n        {\n            if (errorMessage.Contains(pattern.Key))\n            {\n                return pattern.Value;\n            }\n        }\n        return \"Unknown error type\";\n    }\n}\n</code></pre>"},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-log-export-for-powershell-processing","title":"Unity Log Export for PowerShell Processing","text":"<pre><code>using System.IO;\nusing System.Text.Json;\nusing UnityEngine;\n\npublic class UnityLogExporter\n{\n    public static void ExportCurrentErrors()\n    {\n        var logEntries = GetConsoleEntries();\n        var errorData = new\n        {\n            Timestamp = System.DateTime.Now.ToString(\"O\"),\n            ErrorCount = logEntries.errors.Count,\n            WarningCount = logEntries.warnings.Count,\n            Errors = logEntries.errors,\n            Warnings = logEntries.warnings,\n            UnityVersion = Application.unityVersion,\n            ProjectPath = Application.dataPath\n        };\n\n        var json = JsonSerializer.Serialize(errorData, new JsonSerializerOptions \n        { \n            WriteIndented = true \n        });\n\n        File.WriteAllText(\"current_errors.json\", json);\n        Debug.Log($\"Exported {logEntries.errors.Count} errors and {logEntries.warnings.Count} warnings\");\n    }\n\n    private static (List&lt;string&gt; errors, List&lt;string&gt; warnings) GetConsoleEntries()\n    {\n        // Use reflection to access Unity's internal LogEntries\n        var logEntriesType = typeof(EditorWindow).Assembly.GetType(\"UnityEditor.LogEntries\");\n        var getCountMethod = logEntriesType.GetMethod(\"GetCount\");\n        var getEntryInternalMethod = logEntriesType.GetMethod(\"GetEntryInternal\");\n\n        int totalCount = (int)getCountMethod.Invoke(null, null);\n        var errors = new List&lt;string&gt;();\n        var warnings = new List&lt;string&gt;();\n\n        for (int i = 0; i &lt; totalCount; i++)\n        {\n            // Extract log entry details using reflection\n            // This is Unity version-dependent and may need updates\n        }\n\n        return (errors, warnings);\n    }\n}\n</code></pre>"},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-editor-integration-patterns","title":"\ud83d\udd27 Unity Editor Integration Patterns","text":""},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-menu-integration-for-automation","title":"Unity Menu Integration for Automation","text":"<pre><code>public class UnityClaudeAutomationMenu\n{\n    [MenuItem(\"Tools/Claude Automation/Export Current Errors\")]\n    public static void ExportErrors()\n    {\n        UnityLogExporter.ExportCurrentErrors();\n    }\n\n    [MenuItem(\"Tools/Claude Automation/Force Compilation\")]\n    public static void ForceCompilation()\n    {\n        CompilationPipeline.RequestScriptCompilation();\n    }\n\n    [MenuItem(\"Tools/Claude Automation/Clear Console\")]\n    public static void ClearConsole()\n    {\n        var logEntriesType = typeof(EditorWindow).Assembly.GetType(\"UnityEditor.LogEntries\");\n        var clearMethod = logEntriesType.GetMethod(\"Clear\");\n        clearMethod?.Invoke(null, null);\n    }\n}\n</code></pre>"},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-build-automation","title":"Unity Build Automation","text":"<pre><code>public class UnityBuildAutomation\n{\n    public static void PerformBuild(BuildTarget target, string outputPath)\n    {\n        var scenes = EditorBuildSettings.scenes\n            .Where(scene =&gt; scene.enabled)\n            .Select(scene =&gt; scene.path)\n            .ToArray();\n\n        var buildOptions = BuildOptions.None;\n\n        var report = BuildPipeline.BuildPlayer(scenes, outputPath, target, buildOptions);\n\n        // Export build results for PowerShell processing\n        var buildResult = new\n        {\n            Success = report.summary.result == BuildResult.Succeeded,\n            Target = target.ToString(),\n            OutputPath = outputPath,\n            BuildTime = report.summary.buildEndedAt - report.summary.buildStartedAt,\n            Errors = report.steps.SelectMany(step =&gt; step.messages)\n                          .Where(msg =&gt; msg.type == LogType.Error)\n                          .Select(msg =&gt; msg.content)\n                          .ToArray()\n        };\n\n        File.WriteAllText(\"build_result.json\", JsonSerializer.Serialize(buildResult));\n    }\n}\n</code></pre>"},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-project-validation","title":"Unity Project Validation","text":"<pre><code>public class UnityProjectValidator\n{\n    public static ValidationResult ValidateProject()\n    {\n        var result = new ValidationResult();\n\n        // Check for missing references\n        var allPrefabs = AssetDatabase.FindAssets(\"t:Prefab\");\n        foreach (var guid in allPrefabs)\n        {\n            var path = AssetDatabase.GUIDToAssetPath(guid);\n            var prefab = AssetDatabase.LoadAssetAtPath&lt;GameObject&gt;(path);\n\n            if (HasMissingReferences(prefab))\n            {\n                result.MissingReferences.Add(path);\n            }\n        }\n\n        // Check for compilation errors\n        result.HasCompilationErrors = CompilationPipeline.codeOptimization == CodeOptimization.Debug;\n\n        // Export validation results\n        File.WriteAllText(\"validation_result.json\", JsonSerializer.Serialize(result));\n\n        return result;\n    }\n\n    private static bool HasMissingReferences(GameObject obj)\n    {\n        // Implement missing reference detection\n        return false;\n    }\n}\n\npublic class ValidationResult\n{\n    public List&lt;string&gt; MissingReferences { get; set; } = new List&lt;string&gt;();\n    public bool HasCompilationErrors { get; set; }\n    public List&lt;string&gt; WarningMessages { get; set; } = new List&lt;string&gt;();\n}\n</code></pre>"},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-performance-monitoring","title":"\ud83d\udcca Unity Performance Monitoring","text":""},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-editor-performance-tracking","title":"Unity Editor Performance Tracking","text":"<pre><code>public class UnityPerformanceMonitor\n{\n    private static DateTime lastCheck = DateTime.Now;\n\n    [InitializeOnLoadMethod]\n    static void StartMonitoring()\n    {\n        EditorApplication.update += CheckPerformance;\n    }\n\n    static void CheckPerformance()\n    {\n        if ((DateTime.Now - lastCheck).TotalSeconds &lt; 5) return;\n        lastCheck = DateTime.Now;\n\n        var memoryUsage = System.GC.GetTotalMemory(false) / 1024 / 1024; // MB\n        var performanceData = new\n        {\n            Timestamp = DateTime.Now.ToString(\"O\"),\n            MemoryUsageMB = memoryUsage,\n            IsCompiling = EditorApplication.isCompiling,\n            IsPlaying = EditorApplication.isPlaying,\n            CurrentScene = UnityEngine.SceneManagement.SceneManager.GetActiveScene().name\n        };\n\n        // Export for PowerShell monitoring\n        File.WriteAllText(\"unity_performance.json\", JsonSerializer.Serialize(performanceData));\n    }\n}\n</code></pre>"},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-safety-patterns","title":"\ud83d\udee1\ufe0f Unity Safety Patterns","text":""},{"location":"LEARNINGS_UNITY_AUTOMATION/#safe-unity-automation-guidelines","title":"Safe Unity Automation Guidelines","text":"<ol> <li>Always check Unity state before performing operations</li> <li>Use SessionState for persistence across domain reloads</li> <li>Implement timeout mechanisms for long-running operations</li> <li>Validate asset references before automation</li> <li>Backup project state before automated changes</li> </ol>"},{"location":"LEARNINGS_UNITY_AUTOMATION/#unity-editor-state-validation","title":"Unity Editor State Validation","text":"<pre><code>public static class UnityStateValidator\n{\n    public static bool IsSafeForAutomation()\n    {\n        // Don't automate during compilation\n        if (EditorApplication.isCompiling) return false;\n\n        // Don't automate during play mode\n        if (EditorApplication.isPlaying) return false;\n\n        // Check for unsaved scenes\n        if (UnityEngine.SceneManagement.SceneManager.GetActiveScene().isDirty)\n        {\n            Debug.LogWarning(\"Scene has unsaved changes - consider saving before automation\");\n        }\n\n        // Check for missing critical assets\n        var criticalAssets = new[] { \"ProjectSettings/ProjectSettings.asset\" };\n        foreach (var asset in criticalAssets)\n        {\n            if (!File.Exists(asset))\n            {\n                Debug.LogError($\"Critical asset missing: {asset}\");\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n</code></pre> <p>This document covers Unity-specific automation patterns. For broader system architecture, see IMPLEMENTATION_GUIDE.md</p>"},{"location":"about/changelog/","title":"Changelog","text":""},{"location":"about/changelog/#changelog","title":"Changelog","text":""},{"location":"about/changelog/#overview","title":"Overview","text":"<p>This page provides documentation for Changelog.</p>"},{"location":"about/changelog/#description","title":"Description","text":"<p>Changelog is a component of the Unity-Claude-Automation system.</p>"},{"location":"about/changelog/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"about/changelog/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"about/changelog/#examples","title":"Examples","text":""},{"location":"about/changelog/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"about/changelog/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"about/changelog/#api-reference","title":"API Reference","text":""},{"location":"about/changelog/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"about/changelog/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"about/changelog/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"about/license/","title":"License","text":""},{"location":"about/license/#license","title":"License","text":""},{"location":"about/license/#overview","title":"Overview","text":"<p>This page provides documentation for License.</p>"},{"location":"about/license/#description","title":"Description","text":"<p>License is a component of the Unity-Claude-Automation system.</p>"},{"location":"about/license/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"about/license/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"about/license/#examples","title":"Examples","text":""},{"location":"about/license/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"about/license/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"about/license/#api-reference","title":"API Reference","text":""},{"location":"about/license/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"about/license/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"about/license/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"about/roadmap/","title":"Roadmap","text":""},{"location":"about/roadmap/#roadmap","title":"Roadmap","text":""},{"location":"about/roadmap/#overview","title":"Overview","text":"<p>This page provides documentation for Roadmap.</p>"},{"location":"about/roadmap/#description","title":"Description","text":"<p>Roadmap is a component of the Unity-Claude-Automation system.</p>"},{"location":"about/roadmap/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"about/roadmap/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"about/roadmap/#examples","title":"Examples","text":""},{"location":"about/roadmap/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"about/roadmap/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"about/roadmap/#api-reference","title":"API Reference","text":""},{"location":"about/roadmap/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"about/roadmap/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"about/roadmap/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"about/team/","title":"Team","text":""},{"location":"about/team/#team","title":"Team","text":""},{"location":"about/team/#overview","title":"Overview","text":"<p>This page provides documentation for Team.</p>"},{"location":"about/team/#description","title":"Description","text":"<p>Team is a component of the Unity-Claude-Automation system.</p>"},{"location":"about/team/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"about/team/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"about/team/#examples","title":"Examples","text":""},{"location":"about/team/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"about/team/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"about/team/#api-reference","title":"API Reference","text":""},{"location":"about/team/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"about/team/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"about/team/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"advanced/event-driven/","title":"Event-Driven Patterns","text":""},{"location":"advanced/event-driven/#event-driven-patterns","title":"Event-Driven Patterns","text":""},{"location":"advanced/event-driven/#overview","title":"Overview","text":"<p>This page provides documentation for Event-Driven Patterns.</p>"},{"location":"advanced/event-driven/#description","title":"Description","text":"<p>Event-Driven Patterns is a component of the Unity-Claude-Automation system.</p>"},{"location":"advanced/event-driven/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"advanced/event-driven/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"advanced/event-driven/#examples","title":"Examples","text":""},{"location":"advanced/event-driven/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"advanced/event-driven/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"advanced/event-driven/#api-reference","title":"API Reference","text":""},{"location":"advanced/event-driven/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"advanced/event-driven/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"advanced/event-driven/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"advanced/multi-agent/","title":"Multi-Agent Architecture","text":""},{"location":"advanced/multi-agent/#multi-agent-architecture","title":"Multi-Agent Architecture","text":""},{"location":"advanced/multi-agent/#overview","title":"Overview","text":"<p>This page provides documentation for Multi-Agent Architecture.</p>"},{"location":"advanced/multi-agent/#description","title":"Description","text":"<p>Multi-Agent Architecture is a component of the Unity-Claude-Automation system.</p>"},{"location":"advanced/multi-agent/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"advanced/multi-agent/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"advanced/multi-agent/#examples","title":"Examples","text":""},{"location":"advanced/multi-agent/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"advanced/multi-agent/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"advanced/multi-agent/#api-reference","title":"API Reference","text":""},{"location":"advanced/multi-agent/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"advanced/multi-agent/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"advanced/multi-agent/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"advanced/parallel-processing/","title":"Parallel Processing","text":""},{"location":"advanced/parallel-processing/#parallel-processing","title":"Parallel Processing","text":""},{"location":"advanced/parallel-processing/#overview","title":"Overview","text":"<p>This page provides documentation for Parallel Processing.</p>"},{"location":"advanced/parallel-processing/#description","title":"Description","text":"<p>Parallel Processing is a component of the Unity-Claude-Automation system.</p>"},{"location":"advanced/parallel-processing/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"advanced/parallel-processing/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"advanced/parallel-processing/#examples","title":"Examples","text":""},{"location":"advanced/parallel-processing/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"advanced/parallel-processing/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"advanced/parallel-processing/#api-reference","title":"API Reference","text":""},{"location":"advanced/parallel-processing/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"advanced/parallel-processing/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"advanced/parallel-processing/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"advanced/performance/","title":"Performance Optimization","text":""},{"location":"advanced/performance/#performance-optimization","title":"Performance Optimization","text":""},{"location":"advanced/performance/#overview","title":"Overview","text":"<p>This page provides documentation for Performance Optimization.</p>"},{"location":"advanced/performance/#description","title":"Description","text":"<p>Performance Optimization is a component of the Unity-Claude-Automation system.</p>"},{"location":"advanced/performance/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"advanced/performance/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"advanced/performance/#examples","title":"Examples","text":""},{"location":"advanced/performance/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"advanced/performance/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"advanced/performance/#api-reference","title":"API Reference","text":""},{"location":"advanced/performance/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"advanced/performance/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"advanced/performance/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"advanced/security/","title":"Security","text":""},{"location":"advanced/security/#security","title":"Security","text":""},{"location":"advanced/security/#overview","title":"Overview","text":"<p>This page provides documentation for Security.</p>"},{"location":"advanced/security/#description","title":"Description","text":"<p>Security is a component of the Unity-Claude-Automation system.</p>"},{"location":"advanced/security/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"advanced/security/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"advanced/security/#examples","title":"Examples","text":""},{"location":"advanced/security/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"advanced/security/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"advanced/security/#api-reference","title":"API Reference","text":""},{"location":"advanced/security/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"advanced/security/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"advanced/security/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"api/powershell/configuration/","title":"Configuration","text":""},{"location":"api/powershell/configuration/#configuration-api","title":"Configuration API","text":""},{"location":"api/powershell/configuration/#overview","title":"Overview","text":"<p>This page provides documentation for Configuration API.</p>"},{"location":"api/powershell/configuration/#description","title":"Description","text":"<p>Configuration API is a component of the Unity-Claude-Automation system.</p>"},{"location":"api/powershell/configuration/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"api/powershell/configuration/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"api/powershell/configuration/#examples","title":"Examples","text":""},{"location":"api/powershell/configuration/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"api/powershell/configuration/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"api/powershell/configuration/#api-reference","title":"API Reference","text":""},{"location":"api/powershell/configuration/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"api/powershell/configuration/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"api/powershell/configuration/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"api/powershell/core/","title":"Core Functions","text":""},{"location":"api/powershell/core/#core-functions","title":"Core Functions","text":""},{"location":"api/powershell/core/#overview","title":"Overview","text":"<p>This page provides documentation for Core Functions.</p>"},{"location":"api/powershell/core/#description","title":"Description","text":"<p>Core Functions is a component of the Unity-Claude-Automation system.</p>"},{"location":"api/powershell/core/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"api/powershell/core/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"api/powershell/core/#examples","title":"Examples","text":""},{"location":"api/powershell/core/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"api/powershell/core/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"api/powershell/core/#api-reference","title":"API Reference","text":""},{"location":"api/powershell/core/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"api/powershell/core/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"api/powershell/core/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"api/powershell/monitoring/","title":"Monitoring","text":""},{"location":"api/powershell/monitoring/#monitoring-api","title":"Monitoring API","text":""},{"location":"api/powershell/monitoring/#overview","title":"Overview","text":"<p>This page provides documentation for Monitoring API.</p>"},{"location":"api/powershell/monitoring/#description","title":"Description","text":"<p>Monitoring API is a component of the Unity-Claude-Automation system.</p>"},{"location":"api/powershell/monitoring/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"api/powershell/monitoring/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"api/powershell/monitoring/#examples","title":"Examples","text":""},{"location":"api/powershell/monitoring/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"api/powershell/monitoring/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"api/powershell/monitoring/#api-reference","title":"API Reference","text":""},{"location":"api/powershell/monitoring/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"api/powershell/monitoring/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"api/powershell/monitoring/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"api/powershell/system-status/","title":"System Status","text":""},{"location":"api/powershell/system-status/#system-status-api","title":"System Status API","text":""},{"location":"api/powershell/system-status/#overview","title":"Overview","text":"<p>This page provides documentation for System Status API.</p>"},{"location":"api/powershell/system-status/#description","title":"Description","text":"<p>System Status API is a component of the Unity-Claude-Automation system.</p>"},{"location":"api/powershell/system-status/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"api/powershell/system-status/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"api/powershell/system-status/#examples","title":"Examples","text":""},{"location":"api/powershell/system-status/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"api/powershell/system-status/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"api/powershell/system-status/#api-reference","title":"API Reference","text":""},{"location":"api/powershell/system-status/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"api/powershell/system-status/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"api/powershell/system-status/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"api/powershell/unity-commands/","title":"Unity Commands","text":""},{"location":"api/powershell/unity-commands/#unity-commands","title":"Unity Commands","text":""},{"location":"api/powershell/unity-commands/#overview","title":"Overview","text":"<p>This page provides documentation for Unity Commands.</p>"},{"location":"api/powershell/unity-commands/#description","title":"Description","text":"<p>Unity Commands is a component of the Unity-Claude-Automation system.</p>"},{"location":"api/powershell/unity-commands/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"api/powershell/unity-commands/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"api/powershell/unity-commands/#examples","title":"Examples","text":""},{"location":"api/powershell/unity-commands/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"api/powershell/unity-commands/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"api/powershell/unity-commands/#api-reference","title":"API Reference","text":""},{"location":"api/powershell/unity-commands/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"api/powershell/unity-commands/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"api/powershell/unity-commands/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"api/python/doc-parser/","title":"Documentation Parser","text":""},{"location":"api/python/doc-parser/#documentation-parser","title":"Documentation Parser","text":""},{"location":"api/python/doc-parser/#overview","title":"Overview","text":"<p>This page provides documentation for Documentation Parser.</p>"},{"location":"api/python/doc-parser/#description","title":"Description","text":"<p>Documentation Parser is a component of the Unity-Claude-Automation system.</p>"},{"location":"api/python/doc-parser/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"api/python/doc-parser/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"api/python/doc-parser/#examples","title":"Examples","text":""},{"location":"api/python/doc-parser/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"api/python/doc-parser/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"api/python/doc-parser/#api-reference","title":"API Reference","text":""},{"location":"api/python/doc-parser/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"api/python/doc-parser/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"api/python/doc-parser/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"api/python/static-analysis/","title":"Static Analysis","text":""},{"location":"api/python/static-analysis/#static-analysis","title":"Static Analysis","text":""},{"location":"api/python/static-analysis/#overview","title":"Overview","text":"<p>This page provides documentation for Static Analysis.</p>"},{"location":"api/python/static-analysis/#description","title":"Description","text":"<p>Static Analysis is a component of the Unity-Claude-Automation system.</p>"},{"location":"api/python/static-analysis/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"api/python/static-analysis/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"api/python/static-analysis/#examples","title":"Examples","text":""},{"location":"api/python/static-analysis/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"api/python/static-analysis/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"api/python/static-analysis/#api-reference","title":"API Reference","text":""},{"location":"api/python/static-analysis/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"api/python/static-analysis/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"api/python/static-analysis/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"api/rest/endpoints/","title":"Endpoints","text":""},{"location":"api/rest/endpoints/#rest-api-endpoints","title":"REST API Endpoints","text":""},{"location":"api/rest/endpoints/#overview","title":"Overview","text":"<p>This page provides documentation for REST API Endpoints.</p>"},{"location":"api/rest/endpoints/#description","title":"Description","text":"<p>REST API Endpoints is a component of the Unity-Claude-Automation system.</p>"},{"location":"api/rest/endpoints/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"api/rest/endpoints/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"api/rest/endpoints/#examples","title":"Examples","text":""},{"location":"api/rest/endpoints/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"api/rest/endpoints/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"api/rest/endpoints/#api-reference","title":"API Reference","text":""},{"location":"api/rest/endpoints/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"api/rest/endpoints/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"api/rest/endpoints/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"api/rest/websocket/","title":"WebSocket","text":""},{"location":"api/rest/websocket/#websocket-api","title":"WebSocket API","text":""},{"location":"api/rest/websocket/#overview","title":"Overview","text":"<p>This page provides documentation for WebSocket API.</p>"},{"location":"api/rest/websocket/#description","title":"Description","text":"<p>WebSocket API is a component of the Unity-Claude-Automation system.</p>"},{"location":"api/rest/websocket/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"api/rest/websocket/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"api/rest/websocket/#examples","title":"Examples","text":""},{"location":"api/rest/websocket/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"api/rest/websocket/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"api/rest/websocket/#api-reference","title":"API Reference","text":""},{"location":"api/rest/websocket/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"api/rest/websocket/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"api/rest/websocket/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"api/typescript/","title":"Index","text":""},{"location":"api/typescript/#typescript-api-documentation","title":"TypeScript API Documentation","text":"<p>No TypeScript files found in the project yet.</p> <p>TypeDoc will automatically generate documentation here when TypeScript files are added to the scripts/ directory.</p>"},{"location":"development/ci-cd/","title":"CI/CD","text":""},{"location":"development/ci-cd/#cicd","title":"CI/CD","text":""},{"location":"development/ci-cd/#overview","title":"Overview","text":"<p>This page provides documentation for CI/CD.</p>"},{"location":"development/ci-cd/#description","title":"Description","text":"<p>CI/CD is a component of the Unity-Claude-Automation system.</p>"},{"location":"development/ci-cd/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"development/ci-cd/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"development/ci-cd/#examples","title":"Examples","text":""},{"location":"development/ci-cd/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"development/ci-cd/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"development/ci-cd/#api-reference","title":"API Reference","text":""},{"location":"development/ci-cd/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"development/ci-cd/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"development/ci-cd/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"development/code-style/","title":"Code Style","text":""},{"location":"development/code-style/#code-style","title":"Code Style","text":""},{"location":"development/code-style/#overview","title":"Overview","text":"<p>This page provides documentation for Code Style.</p>"},{"location":"development/code-style/#description","title":"Description","text":"<p>Code Style is a component of the Unity-Claude-Automation system.</p>"},{"location":"development/code-style/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"development/code-style/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"development/code-style/#examples","title":"Examples","text":""},{"location":"development/code-style/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"development/code-style/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"development/code-style/#api-reference","title":"API Reference","text":""},{"location":"development/code-style/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"development/code-style/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"development/code-style/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"development/contributing/","title":"Contributing","text":""},{"location":"development/contributing/#contributing-guide","title":"Contributing Guide","text":""},{"location":"development/contributing/#overview","title":"Overview","text":"<p>This page provides documentation for Contributing Guide.</p>"},{"location":"development/contributing/#description","title":"Description","text":"<p>Contributing Guide is a component of the Unity-Claude-Automation system.</p>"},{"location":"development/contributing/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"development/contributing/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"development/contributing/#examples","title":"Examples","text":""},{"location":"development/contributing/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"development/contributing/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"development/contributing/#api-reference","title":"API Reference","text":""},{"location":"development/contributing/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"development/contributing/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"development/contributing/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"development/testing/","title":"Testing","text":""},{"location":"development/testing/#testing","title":"Testing","text":""},{"location":"development/testing/#overview","title":"Overview","text":"<p>This page provides documentation for Testing.</p>"},{"location":"development/testing/#description","title":"Description","text":"<p>Testing is a component of the Unity-Claude-Automation system.</p>"},{"location":"development/testing/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"development/testing/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"development/testing/#examples","title":"Examples","text":""},{"location":"development/testing/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"development/testing/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"development/testing/#api-reference","title":"API Reference","text":""},{"location":"development/testing/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"development/testing/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"development/testing/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"getting-started/architecture/","title":"Architecture","text":""},{"location":"getting-started/architecture/#system-architecture","title":"System Architecture","text":"<p>Unity-Claude-Automation follows a modular, event-driven architecture designed for scalability and maintainability.</p>"},{"location":"getting-started/architecture/#overview","title":"Overview","text":"<pre><code>graph TB\n    subgraph \"Unity Environment\"\n        U[Unity Editor]\n        UL[Unity Logs]\n        UP[Unity Project]\n    end\n\n    subgraph \"Core System\"\n        M[Monitor Service]\n        E[Event Processor]\n        O[Orchestrator]\n    end\n\n    subgraph \"AI Layer\"\n        C[Claude API]\n        P[Prompt Engine]\n        R[Response Parser]\n    end\n\n    subgraph \"Integration Layer\"\n        G[GitHub API]\n        N[Notification Hub]\n        D[Dashboard]\n    end\n\n    U --&gt; UL\n    UL --&gt; M\n    M --&gt; E\n    E --&gt; O\n    O --&gt; P\n    P --&gt; C\n    C --&gt; R\n    R --&gt; O\n    O --&gt; G\n    O --&gt; N\n    O --&gt; D</code></pre>"},{"location":"getting-started/architecture/#core-components","title":"Core Components","text":""},{"location":"getting-started/architecture/#1-bootstrap-orchestrator","title":"1. Bootstrap Orchestrator","text":"<p>The central coordination system that manages all subsystems:</p> <ul> <li>Manifest-based initialization: Loads modules based on dependency order</li> <li>State management: Maintains global system state</li> <li>Event routing: Distributes events to appropriate handlers</li> <li>Lifecycle management: Handles startup, shutdown, and recovery</li> </ul>"},{"location":"getting-started/architecture/#2-monitor-service","title":"2. Monitor Service","text":"<p>Watches Unity and system events:</p> <ul> <li>FileSystemWatcher: Monitors Unity Editor logs and project files</li> <li>Log Parser: Extracts errors, warnings, and compilation status</li> <li>Change Detection: Identifies code changes and build triggers</li> <li>Performance Metrics: Tracks build times and error frequencies</li> </ul>"},{"location":"getting-started/architecture/#3-event-processing-pipeline","title":"3. Event Processing Pipeline","text":"<p>Handles all system events asynchronously:</p> <pre><code>Event Flow:\n1. Event Detection (FileSystemWatcher)\n2. Event Classification (Error/Warning/Info)\n3. Event Enrichment (Add context)\n4. Event Routing (To appropriate handler)\n5. Event Processing (Action execution)\n6. Event Logging (Audit trail)\n</code></pre>"},{"location":"getting-started/architecture/#4-ai-integration-layer","title":"4. AI Integration Layer","text":"<p>Interfaces with Claude API for intelligent assistance:</p> <ul> <li>Prompt Generation: Creates context-aware prompts</li> <li>Response Processing: Parses and validates AI responses</li> <li>Code Generation: Produces fix suggestions</li> <li>Learning System: Improves based on feedback</li> </ul>"},{"location":"getting-started/architecture/#module-system","title":"Module System","text":""},{"location":"getting-started/architecture/#module-structure","title":"Module Structure","text":"<p>Each module follows this structure:</p> <pre><code>Unity-Claude-ModuleName/\n\u251c\u2500\u2500 Unity-Claude-ModuleName.psd1  # Module manifest\n\u251c\u2500\u2500 Unity-Claude-ModuleName.psm1  # Module script\n\u251c\u2500\u2500 Public/                        # Exported functions\n\u251c\u2500\u2500 Private/                       # Internal functions\n\u251c\u2500\u2500 Config/                        # Configuration files\n\u2514\u2500\u2500 Tests/                         # Pester tests\n</code></pre>"},{"location":"getting-started/architecture/#core-modules","title":"Core Modules","text":""},{"location":"getting-started/architecture/#unity-claude-systemstatus","title":"Unity-Claude-SystemStatus","text":"<ul> <li>System health monitoring</li> <li>Resource usage tracking</li> <li>Performance metrics</li> <li>Status reporting</li> </ul>"},{"location":"getting-started/architecture/#unity-claude-configuration","title":"Unity-Claude-Configuration","text":"<ul> <li>Settings management</li> <li>Configuration validation</li> <li>Environment setup</li> <li>Credential storage</li> </ul>"},{"location":"getting-started/architecture/#unity-claude-eventlog","title":"Unity-Claude-EventLog","text":"<ul> <li>Event logging</li> <li>Audit trails</li> <li>Error tracking</li> <li>Analytics</li> </ul>"},{"location":"getting-started/architecture/#unity-claude-github","title":"Unity-Claude-GitHub","text":"<ul> <li>Issue creation</li> <li>PR management</li> <li>Repository integration</li> <li>CODEOWNERS support</li> </ul>"},{"location":"getting-started/architecture/#unity-claude-notificationhub","title":"Unity-Claude-NotificationHub","text":"<ul> <li>Email notifications</li> <li>Webhook integration</li> <li>Slack/Discord alerts</li> <li>Custom notifications</li> </ul>"},{"location":"getting-started/architecture/#unity-claude-repoanalyst","title":"Unity-Claude-RepoAnalyst","text":"<ul> <li>Code analysis</li> <li>Documentation generation</li> <li>Dependency mapping</li> <li>Quality metrics</li> </ul>"},{"location":"getting-started/architecture/#communication-patterns","title":"Communication Patterns","text":""},{"location":"getting-started/architecture/#event-driven-architecture","title":"Event-Driven Architecture","text":"<pre><code># Event emission\nNew-Event -SourceIdentifier \"Unity.Error.Detected\" `\n          -MessageData @{\n              Error = $errorDetails\n              File = $filePath\n              Line = $lineNumber\n          }\n\n# Event handling\nRegister-EngineEvent -SourceIdentifier \"Unity.Error.Detected\" `\n                    -Action { \n                        Process-UnityError $Event.MessageData \n                    }\n</code></pre>"},{"location":"getting-started/architecture/#message-queue","title":"Message Queue","text":"<p>Uses PowerShell runspaces for async processing:</p> <pre><code>$RunspacePool = [RunspaceFactory]::CreateRunspacePool(1, 10)\n$RunspacePool.Open()\n\n$Jobs = @()\nforeach ($task in $tasks) {\n    $PowerShell = [PowerShell]::Create()\n    $PowerShell.RunspacePool = $RunspacePool\n    $PowerShell.AddScript($ScriptBlock).AddArgument($task)\n    $Jobs += $PowerShell.BeginInvoke()\n}\n</code></pre>"},{"location":"getting-started/architecture/#inter-process-communication","title":"Inter-Process Communication","text":"<p>For Python integration:</p> <pre><code># Named pipe for IPC\n$PipeName = \"Unity-Claude-IPC\"\n$Pipe = New-Object System.IO.Pipes.NamedPipeServerStream($PipeName)\n</code></pre>"},{"location":"getting-started/architecture/#data-flow","title":"Data Flow","text":""},{"location":"getting-started/architecture/#error-detection-to-resolution","title":"Error Detection to Resolution","text":"<ol> <li>Detection: FileSystemWatcher detects change in Editor.log</li> <li>Parsing: Extract error details (file, line, message)</li> <li>Context: Gather surrounding code and project info</li> <li>AI Analysis: Send to Claude for analysis</li> <li>Solution: Receive and parse fix suggestions</li> <li>Action: Apply fix or create GitHub issue</li> <li>Verification: Monitor for resolution</li> </ol>"},{"location":"getting-started/architecture/#state-management","title":"State Management","text":"<pre><code># Global state stored in synchronized hashtable\n$Global:UnityClaudeState = [hashtable]::Synchronized(@{\n    Status = \"Running\"\n    Errors = @()\n    ActiveBuilds = @()\n    Metrics = @{}\n})\n</code></pre>"},{"location":"getting-started/architecture/#security-architecture","title":"Security Architecture","text":""},{"location":"getting-started/architecture/#credential-management","title":"Credential Management","text":"<ul> <li>Windows Credential Manager for API keys</li> <li>Encrypted configuration files</li> <li>Environment variable fallbacks</li> <li>No hardcoded secrets</li> </ul>"},{"location":"getting-started/architecture/#access-control","title":"Access Control","text":"<ul> <li>PowerShell execution policies</li> <li>Module signing</li> <li>Restricted runspaces</li> <li>Audit logging</li> </ul>"},{"location":"getting-started/architecture/#performance-considerations","title":"Performance Considerations","text":""},{"location":"getting-started/architecture/#optimization-strategies","title":"Optimization Strategies","text":"<ol> <li>Lazy Loading: Modules loaded on-demand</li> <li>Caching: Results cached with TTL</li> <li>Throttling: Rate limiting for API calls</li> <li>Parallel Processing: Runspace pools for concurrency</li> <li>Debouncing: Prevent duplicate event processing</li> </ol>"},{"location":"getting-started/architecture/#resource-management","title":"Resource Management","text":"<pre><code># Memory management\n[System.GC]::Collect()\n[System.GC]::WaitForPendingFinalizers()\n\n# Runspace cleanup\n$RunspacePool.Close()\n$RunspacePool.Dispose()\n</code></pre>"},{"location":"getting-started/architecture/#deployment-architecture","title":"Deployment Architecture","text":""},{"location":"getting-started/architecture/#local-deployment","title":"Local Deployment","text":"<p>Single machine setup: - PowerShell modules in PSModulePath - Configuration in %APPDATA% - Logs in designated directory</p>"},{"location":"getting-started/architecture/#distributed-deployment","title":"Distributed Deployment","text":"<p>Multi-machine setup: - Central configuration server - Distributed agents - Shared state via Redis/SQL - Message queue (RabbitMQ/Azure Service Bus)</p>"},{"location":"getting-started/architecture/#extensibility","title":"Extensibility","text":""},{"location":"getting-started/architecture/#plugin-system","title":"Plugin System","text":"<p>Create custom modules:</p> <pre><code># Custom module manifest\n@{\n    ModuleVersion = '1.0.0'\n    RequiredModules = @('Unity-Claude-Core')\n    FunctionsToExport = @('Start-CustomProcessor')\n    PrivateData = @{\n        PSData = @{\n            Tags = @('Unity', 'Automation', 'Custom')\n        }\n    }\n}\n</code></pre>"},{"location":"getting-started/architecture/#hooks-and-filters","title":"Hooks and Filters","text":"<pre><code># Register custom hook\nRegister-UnityClaudeHook -Name \"PreProcess\" `\n                        -Action { \n                            # Custom preprocessing \n                        }\n\n# Add filter\nAdd-UnityClaudeFilter -Type \"Error\" `\n                     -Pattern \"CustomPattern\" `\n                     -Action { \n                         # Custom handling \n                     }\n</code></pre>"},{"location":"getting-started/architecture/#monitoring-and-observability","title":"Monitoring and Observability","text":""},{"location":"getting-started/architecture/#metrics-collection","title":"Metrics Collection","text":"<ul> <li>Performance counters</li> <li>Custom metrics</li> <li>Event statistics</li> <li>Resource usage</li> </ul>"},{"location":"getting-started/architecture/#health-checks","title":"Health Checks","text":"<pre><code>Test-UnityClaudeHealth -Components @(\n    \"FileWatcher\",\n    \"EventProcessor\", \n    \"AIConnection\",\n    \"GitHubIntegration\"\n)\n</code></pre>"},{"location":"getting-started/architecture/#logging-strategy","title":"Logging Strategy","text":"<ul> <li>Structured logging (JSON)</li> <li>Log aggregation</li> <li>Centralized logging</li> <li>Log rotation</li> </ul>"},{"location":"getting-started/architecture/#disaster-recovery","title":"Disaster Recovery","text":""},{"location":"getting-started/architecture/#backup-strategy","title":"Backup Strategy","text":"<ul> <li>Configuration backups</li> <li>State snapshots</li> <li>Log archives</li> <li>Recovery points</li> </ul>"},{"location":"getting-started/architecture/#failover-mechanisms","title":"Failover Mechanisms","text":"<ul> <li>Automatic restart</li> <li>State recovery</li> <li>Queue persistence</li> <li>Transaction logs</li> </ul>"},{"location":"getting-started/architecture/#next-steps","title":"Next Steps","text":"<ul> <li>Explore Modules Overview for detailed module documentation</li> <li>Read Advanced Topics for complex scenarios</li> <li>Check Development Guide to extend the system</li> </ul>"},{"location":"getting-started/configuration/","title":"Configuration","text":""},{"location":"getting-started/configuration/#configuration-guide","title":"Configuration Guide","text":"<p>This guide covers all configuration options for Unity-Claude-Automation.</p>"},{"location":"getting-started/configuration/#configuration-files","title":"Configuration Files","text":"<p>The system uses multiple configuration files:</p> <ul> <li><code>config.json</code> - Main configuration</li> <li><code>unity-settings.json</code> - Unity-specific settings</li> <li><code>claude-config.json</code> - Claude API settings</li> <li><code>github-config.json</code> - GitHub integration settings</li> </ul>"},{"location":"getting-started/configuration/#main-configuration","title":"Main Configuration","text":""},{"location":"getting-started/configuration/#location","title":"Location","text":"<p>Configuration files are stored in: <pre><code>%APPDATA%\\Unity-Claude-Automation\\Config\\\n</code></pre></p>"},{"location":"getting-started/configuration/#basic-settings","title":"Basic Settings","text":"<pre><code>{\n  \"system\": {\n    \"logLevel\": \"Information\",\n    \"maxLogFiles\": 30,\n    \"enableTelemetry\": false,\n    \"parallelProcessing\": true\n  },\n  \"unity\": {\n    \"projectPath\": \"C:\\\\UnityProjects\\\\YourProject\",\n    \"editorPath\": \"C:\\\\Program Files\\\\Unity\\\\Hub\\\\Editor\\\\2021.3.16f1\\\\Editor\\\\Unity.exe\",\n    \"logPath\": \"%LOCALAPPDATA%\\\\Unity\\\\Editor\\\\Editor.log\",\n    \"buildTimeout\": 3600\n  },\n  \"monitoring\": {\n    \"pollInterval\": 5000,\n    \"enableFileWatcher\": true,\n    \"autoRestartOnCrash\": true\n  }\n}\n</code></pre>"},{"location":"getting-started/configuration/#environment-variables","title":"Environment Variables","text":"<p>Set these environment variables to override defaults:</p> Variable Description Default <code>UNITY_CLAUDE_CONFIG</code> Config directory path <code>%APPDATA%\\Unity-Claude-Automation</code> <code>UNITY_PROJECT_PATH</code> Unity project location Current directory <code>UNITY_EDITOR_LOG</code> Unity Editor log path Auto-detected <code>CLAUDE_API_KEY</code> Claude API key Required for AI features <code>GITHUB_PAT</code> GitHub Personal Access Token Required for GitHub integration"},{"location":"getting-started/configuration/#powershell-module-configuration","title":"PowerShell Module Configuration","text":""},{"location":"getting-started/configuration/#import-modules","title":"Import Modules","text":"<pre><code>Import-Module Unity-Claude-SystemStatus\nImport-Module Unity-Claude-Configuration\nImport-Module Unity-Claude-GitHub\n</code></pre>"},{"location":"getting-started/configuration/#set-configuration-values","title":"Set Configuration Values","text":"<pre><code># Set Unity project path\nSet-UnityClaudeConfig -Key \"UnityProjectPath\" -Value \"C:\\MyProject\"\n\n# Configure monitoring interval\nSet-UnityClaudeConfig -Key \"MonitoringInterval\" -Value 10\n\n# Enable auto-fix mode\nSet-UnityClaudeConfig -Key \"AutoFixEnabled\" -Value $true\n</code></pre>"},{"location":"getting-started/configuration/#claude-integration-settings","title":"Claude Integration Settings","text":""},{"location":"getting-started/configuration/#api-configuration","title":"API Configuration","text":"<pre><code># Set Claude API key\nSet-ClaudeAPIKey -Key \"your-api-key-here\"\n\n# Configure Claude model\nSet-ClaudeConfig -Model \"claude-3-opus-20240229\" `\n                -MaxTokens 4096 `\n                -Temperature 0.7\n</code></pre>"},{"location":"getting-started/configuration/#prompt-templates","title":"Prompt Templates","text":"<p>Customize AI prompts in <code>prompt-templates.json</code>:</p> <pre><code>{\n  \"errorAnalysis\": \"Analyze this Unity error and suggest a fix: {error}\",\n  \"codeReview\": \"Review this Unity C# code for best practices: {code}\",\n  \"optimization\": \"Suggest performance optimizations for: {context}\"\n}\n</code></pre>"},{"location":"getting-started/configuration/#github-integration","title":"GitHub Integration","text":""},{"location":"getting-started/configuration/#repository-settings","title":"Repository Settings","text":"<pre><code># Configure GitHub repository\nSet-GitHubConfig -Owner \"your-org\" `\n                 -Repo \"your-repo\" `\n                 -PAT $env:GITHUB_PAT\n\n# Set issue labels\nSet-GitHubLabels -ErrorLabel \"unity-error\" `\n                 -AutoLabel \"auto-generated\" `\n                 -PriorityLabels @(\"critical\", \"high\", \"medium\", \"low\")\n</code></pre>"},{"location":"getting-started/configuration/#issue-templates","title":"Issue Templates","text":"<p>Configure issue templates in <code>.github/ISSUE_TEMPLATE/</code>:</p> <pre><code>name: Unity Compilation Error\nabout: Auto-generated from Unity compilation errors\ntitle: '[Unity Error] {error_type}'\nlabels: ['unity-error', 'auto-generated']\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        ## Error Details\n        **File**: {file_path}\n        **Line**: {line_number}\n        **Error**: {error_message}\n</code></pre>"},{"location":"getting-started/configuration/#notification-settings","title":"Notification Settings","text":""},{"location":"getting-started/configuration/#email-notifications","title":"Email Notifications","text":"<pre><code>Set-NotificationConfig -EnableEmail $true `\n                       -SmtpServer \"smtp.gmail.com\" `\n                       -SmtpPort 587 `\n                       -FromEmail \"automation@example.com\" `\n                       -ToEmail \"team@example.com\"\n</code></pre>"},{"location":"getting-started/configuration/#webhook-notifications","title":"Webhook Notifications","text":"<pre><code># Configure Slack webhook\nSet-WebhookConfig -Type \"Slack\" `\n                  -Url \"https://hooks.slack.com/services/YOUR/WEBHOOK/URL\"\n\n# Configure Discord webhook\nSet-WebhookConfig -Type \"Discord\" `\n                  -Url \"https://discord.com/api/webhooks/YOUR/WEBHOOK\"\n</code></pre>"},{"location":"getting-started/configuration/#dashboard-configuration","title":"Dashboard Configuration","text":""},{"location":"getting-started/configuration/#web-dashboard-settings","title":"Web Dashboard Settings","text":"<pre><code>{\n  \"dashboard\": {\n    \"port\": 8080,\n    \"host\": \"localhost\",\n    \"enableAuth\": false,\n    \"refreshInterval\": 5000,\n    \"theme\": \"dark\"\n  }\n}\n</code></pre>"},{"location":"getting-started/configuration/#start-dashboard","title":"Start Dashboard","text":"<pre><code>Start-UnityClaudeDashboard -Port 8080 -Theme \"dark\"\n</code></pre>"},{"location":"getting-started/configuration/#performance-tuning","title":"Performance Tuning","text":""},{"location":"getting-started/configuration/#parallel-processing","title":"Parallel Processing","text":"<pre><code># Configure parallel processing\nSet-ParallelConfig -MaxDegreeOfParallelism 4 `\n                   -ThrottleLimit 10\n</code></pre>"},{"location":"getting-started/configuration/#memory-management","title":"Memory Management","text":"<pre><code># Set memory limits\nSet-MemoryConfig -MaxMemoryGB 8 `\n                 -GCMode \"Workstation\"\n</code></pre>"},{"location":"getting-started/configuration/#security-configuration","title":"Security Configuration","text":""},{"location":"getting-started/configuration/#api-key-storage","title":"API Key Storage","text":"<p>Store API keys securely:</p> <pre><code># Store API key in Windows Credential Manager\nSet-SecureCredential -Name \"ClaudeAPIKey\" -Value \"your-key\"\nSet-SecureCredential -Name \"GitHubPAT\" -Value \"your-pat\"\n</code></pre>"},{"location":"getting-started/configuration/#access-control","title":"Access Control","text":"<pre><code># Restrict access to configuration\nSet-ConfigAccess -ReadOnly $false `\n                 -RequireElevation $true\n</code></pre>"},{"location":"getting-started/configuration/#logging-configuration","title":"Logging Configuration","text":""},{"location":"getting-started/configuration/#log-levels","title":"Log Levels","text":"<ul> <li><code>Verbose</code> - All messages</li> <li><code>Debug</code> - Debug and above</li> <li><code>Information</code> - Info and above</li> <li><code>Warning</code> - Warnings and errors</li> <li><code>Error</code> - Only errors</li> </ul>"},{"location":"getting-started/configuration/#configure-logging","title":"Configure Logging","text":"<pre><code>Set-LogConfig -Level \"Information\" `\n              -MaxFiles 30 `\n              -MaxSizeMB 100 `\n              -ArchivePath \".\\Logs\\Archive\"\n</code></pre>"},{"location":"getting-started/configuration/#validation","title":"Validation","text":"<p>Validate your configuration:</p> <pre><code>Test-UnityClaudeConfiguration -Verbose\n</code></pre> <p>This will check: - File paths exist - API keys are valid - Network connectivity - Required permissions</p>"},{"location":"getting-started/configuration/#backup-and-restore","title":"Backup and Restore","text":""},{"location":"getting-started/configuration/#backup-configuration","title":"Backup Configuration","text":"<pre><code>Backup-UnityClaudeConfig -Path \".\\Backups\\config-backup.zip\"\n</code></pre>"},{"location":"getting-started/configuration/#restore-configuration","title":"Restore Configuration","text":"<pre><code>Restore-UnityClaudeConfig -Path \".\\Backups\\config-backup.zip\"\n</code></pre>"},{"location":"getting-started/configuration/#next-steps","title":"Next Steps","text":"<ul> <li>Review Architecture to understand system design</li> <li>Check User Guide for usage examples</li> <li>See Troubleshooting for common issues</li> </ul>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#installation-guide","title":"Installation Guide","text":""},{"location":"getting-started/installation/#prerequisites","title":"Prerequisites","text":"<p>Before installing Unity-Claude-Automation, ensure you have the following:</p>"},{"location":"getting-started/installation/#required-software","title":"Required Software","text":"<ul> <li>PowerShell: Version 5.1 or later (PowerShell 7.5+ recommended)</li> <li>Python: Version 3.10 or later (for documentation generation)</li> <li>Git: For repository management</li> <li>Unity: 2021.3 LTS or later</li> </ul>"},{"location":"getting-started/installation/#development-tools","title":"Development Tools","text":"<ul> <li> <p>ripgrep: Fast search tool   <pre><code>choco install ripgrep\n</code></pre></p> </li> <li> <p>universal-ctags (Optional): For code indexing   <pre><code>choco install universal-ctags\n</code></pre></p> </li> </ul>"},{"location":"getting-started/installation/#installation-steps","title":"Installation Steps","text":""},{"location":"getting-started/installation/#1-clone-the-repository","title":"1. Clone the Repository","text":"<pre><code>git clone https://github.com/Unity-Claude-Automation/Unity-Claude-Automation.git\ncd Unity-Claude-Automation\n</code></pre>"},{"location":"getting-started/installation/#2-set-powershell-execution-policy","title":"2. Set PowerShell Execution Policy","text":"<pre><code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser\n</code></pre>"},{"location":"getting-started/installation/#3-install-powershell-modules","title":"3. Install PowerShell Modules","text":"<pre><code># Import the main module\nImport-Module .\\Modules\\Unity-Claude-SystemStatus\\Unity-Claude-SystemStatus.psd1\n\n# Import additional modules\nImport-Module .\\Modules\\Unity-Claude-Configuration\\Unity-Claude-Configuration.psd1\nImport-Module .\\Modules\\Unity-Claude-GitHub\\Unity-Claude-GitHub.psd1\n</code></pre>"},{"location":"getting-started/installation/#4-configure-unity-project-path","title":"4. Configure Unity Project Path","text":"<pre><code># Set your Unity project path\n$env:UNITY_PROJECT_PATH = \"C:\\Path\\To\\Your\\Unity\\Project\"\n\n# Register Unity project\nRegister-UnityProject -ProjectPath $env:UNITY_PROJECT_PATH\n</code></pre>"},{"location":"getting-started/installation/#5-install-documentation-tools-optional","title":"5. Install Documentation Tools (Optional)","text":"<p>For documentation generation:</p> <pre><code># Create Python virtual environment\npython -m venv .venv\n.\\.venv\\Scripts\\Activate.ps1\n\n# Install MkDocs and dependencies\npip install -r requirements.txt\n</code></pre>"},{"location":"getting-started/installation/#configuration","title":"Configuration","text":""},{"location":"getting-started/installation/#basic-configuration","title":"Basic Configuration","text":"<p>Create a configuration file:</p> <pre><code># Initialize configuration\nInitialize-UnityClaudeConfig\n\n# Set basic parameters\nSet-UnityClaudeParameter -Key \"MonitoringInterval\" -Value 30\nSet-UnityClaudeParameter -Key \"EnableNotifications\" -Value $true\n</code></pre>"},{"location":"getting-started/installation/#github-integration-optional","title":"GitHub Integration (Optional)","text":"<pre><code># Set GitHub PAT\n$pat = Read-Host \"Enter GitHub PAT\" -AsSecureString\nSet-GitHubIntegrationConfig -PAT $pat -Owner \"YourGitHubOrg\" -Repo \"YourRepo\"\n</code></pre>"},{"location":"getting-started/installation/#email-notifications-optional","title":"Email Notifications (Optional)","text":"<pre><code># Configure email settings\n.\\Configure-NotificationSettings.ps1\n</code></pre>"},{"location":"getting-started/installation/#verification","title":"Verification","text":"<p>Verify the installation:</p> <pre><code># Test system status module\nTest-SystemStatusModule\n\n# Check all modules\nGet-Module Unity-Claude-* | Format-Table Name, Version\n\n# Run basic health check\nGet-SystemHealthScore\n</code></pre>"},{"location":"getting-started/installation/#quick-start","title":"Quick Start","text":"<p>Start the automation system:</p> <pre><code># Start autonomous monitoring\n.\\Start-UnityClaudeAutomation.ps1\n\n# Or start with dashboard\n.\\Start-EnhancedDashboard.ps1\n</code></pre>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#common-issues","title":"Common Issues","text":"<ol> <li> <p>Module Import Errors <pre><code># Reload modules\nRemove-Module Unity-Claude-* -Force\nImport-Module .\\Modules\\Unity-Claude-SystemStatus\\Unity-Claude-SystemStatus.psd1 -Force\n</code></pre></p> </li> <li> <p>Unity Path Not Found <pre><code># Verify Unity installation\nTest-Path $env:UNITY_PROJECT_PATH\n</code></pre></p> </li> <li> <p>Python Environment Issues <pre><code># Recreate virtual environment\nRemove-Item .venv -Recurse -Force\npython -m venv .venv\n</code></pre></p> </li> </ol>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<ul> <li>Quick Start Tutorial</li> <li>Configuration Guide</li> <li>User Guide</li> </ul>"},{"location":"getting-started/quick-start/","title":"Quick Start","text":""},{"location":"getting-started/quick-start/#quick-start-guide","title":"Quick Start Guide","text":"<p>Welcome to Unity-Claude-Automation! This guide will help you get up and running quickly.</p>"},{"location":"getting-started/quick-start/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have:</p> <ul> <li>Windows 10/11 or Windows Server 2019+</li> <li>PowerShell 7.5+ installed</li> <li>Unity 2021.3 LTS or newer</li> <li>Git for version control</li> <li>Python 3.10+ (for documentation and analysis tools)</li> </ul>"},{"location":"getting-started/quick-start/#installation","title":"Installation","text":"<p>If you haven't already, follow our Installation Guide to set up the system.</p>"},{"location":"getting-started/quick-start/#basic-setup","title":"Basic Setup","text":""},{"location":"getting-started/quick-start/#1-clone-the-repository","title":"1. Clone the Repository","text":"<pre><code>git clone https://github.com/your-org/Unity-Claude-Automation.git\ncd Unity-Claude-Automation\n</code></pre>"},{"location":"getting-started/quick-start/#2-initialize-the-system","title":"2. Initialize the System","text":"<p>Run the initialization script:</p> <pre><code>.\\Initialize-UnityClaudeAutomation.ps1\n</code></pre> <p>This will: - Check system requirements - Install required PowerShell modules - Configure initial settings - Set up logging directories</p>"},{"location":"getting-started/quick-start/#3-configure-unity-path","title":"3. Configure Unity Path","text":"<p>Set your Unity project path:</p> <pre><code>Set-UnityProjectPath -Path \"C:\\UnityProjects\\YourProject\"\n</code></pre>"},{"location":"getting-started/quick-start/#your-first-automation","title":"Your First Automation","text":""},{"location":"getting-started/quick-start/#monitor-unity-errors","title":"Monitor Unity Errors","text":"<p>Start monitoring Unity compilation errors:</p> <pre><code>Start-UnityErrorMonitor\n</code></pre> <p>The system will: - Watch the Unity Editor log - Detect compilation errors - Generate fix suggestions - Optionally create GitHub issues</p>"},{"location":"getting-started/quick-start/#run-a-test-build","title":"Run a Test Build","text":"<p>Execute an automated Unity build:</p> <pre><code>Invoke-UnityBuild -BuildTarget StandaloneWindows64 -OutputPath \".\\Builds\"\n</code></pre>"},{"location":"getting-started/quick-start/#key-commands","title":"Key Commands","text":"Command Description <code>Start-UnityClaudeAutomation</code> Start the main automation system <code>Get-UnityProjectStatus</code> Check current project status <code>Start-UnityErrorMonitor</code> Monitor Unity errors in real-time <code>Get-ClaudeResponse</code> Get AI suggestions for errors <code>New-GitHubIssue</code> Create issue from Unity error"},{"location":"getting-started/quick-start/#next-steps","title":"Next Steps","text":"<ul> <li>Read the Configuration Guide to customize settings</li> <li>Explore the User Guide for detailed features</li> <li>Check Architecture to understand the system design</li> </ul>"},{"location":"getting-started/quick-start/#getting-help","title":"Getting Help","text":"<ul> <li>Check our FAQ</li> <li>Visit Troubleshooting for common issues</li> <li>Open an issue on GitHub for bugs or feature requests</li> </ul>"},{"location":"getting-started/quick-start/#quick-tips","title":"Quick Tips","text":"<p>Enable Auto-Fix</p> <p>Set <code>$env:UNITY_CLAUDE_AUTOFIX = \"true\"</code> to automatically apply suggested fixes.</p> <p>Dashboard Access</p> <p>Access the web dashboard at <code>http://localhost:8080</code> after starting the system.</p> <p>First Run</p> <p>The first run may take longer as the system indexes your project structure.</p>"},{"location":"modules/configuration/","title":"Unity-Claude-Configuration","text":""},{"location":"modules/configuration/#unity-claude-configuration-module","title":"Unity-Claude-Configuration Module","text":""},{"location":"modules/configuration/#overview","title":"Overview","text":"<p>This page provides documentation for Unity-Claude-Configuration Module.</p>"},{"location":"modules/configuration/#description","title":"Description","text":"<p>Unity-Claude-Configuration Module is a component of the Unity-Claude-Automation system.</p>"},{"location":"modules/configuration/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"modules/configuration/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"modules/configuration/#examples","title":"Examples","text":""},{"location":"modules/configuration/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"modules/configuration/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"modules/configuration/#api-reference","title":"API Reference","text":""},{"location":"modules/configuration/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"modules/configuration/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"modules/configuration/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"modules/event-log/","title":"Unity-Claude-EventLog","text":""},{"location":"modules/event-log/#unity-claude-eventlog-module","title":"Unity-Claude-EventLog Module","text":""},{"location":"modules/event-log/#overview","title":"Overview","text":"<p>This page provides documentation for Unity-Claude-EventLog Module.</p>"},{"location":"modules/event-log/#description","title":"Description","text":"<p>Unity-Claude-EventLog Module is a component of the Unity-Claude-Automation system.</p>"},{"location":"modules/event-log/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"modules/event-log/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"modules/event-log/#examples","title":"Examples","text":""},{"location":"modules/event-log/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"modules/event-log/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"modules/event-log/#api-reference","title":"API Reference","text":""},{"location":"modules/event-log/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"modules/event-log/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"modules/event-log/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"modules/github/","title":"Unity-Claude-GitHub","text":""},{"location":"modules/github/#unity-claude-github-module","title":"Unity-Claude-GitHub Module","text":""},{"location":"modules/github/#overview","title":"Overview","text":"<p>This page provides documentation for Unity-Claude-GitHub Module.</p>"},{"location":"modules/github/#description","title":"Description","text":"<p>Unity-Claude-GitHub Module is a component of the Unity-Claude-Automation system.</p>"},{"location":"modules/github/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"modules/github/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"modules/github/#examples","title":"Examples","text":""},{"location":"modules/github/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"modules/github/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"modules/github/#api-reference","title":"API Reference","text":""},{"location":"modules/github/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"modules/github/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"modules/github/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"modules/notification-hub/","title":"Unity-Claude-NotificationHub","text":""},{"location":"modules/notification-hub/#unity-claude-notificationhub-module","title":"Unity-Claude-NotificationHub Module","text":""},{"location":"modules/notification-hub/#overview","title":"Overview","text":"<p>This page provides documentation for Unity-Claude-NotificationHub Module.</p>"},{"location":"modules/notification-hub/#description","title":"Description","text":"<p>Unity-Claude-NotificationHub Module is a component of the Unity-Claude-Automation system.</p>"},{"location":"modules/notification-hub/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"modules/notification-hub/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"modules/notification-hub/#examples","title":"Examples","text":""},{"location":"modules/notification-hub/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"modules/notification-hub/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"modules/notification-hub/#api-reference","title":"API Reference","text":""},{"location":"modules/notification-hub/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"modules/notification-hub/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"modules/notification-hub/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"modules/overview/","title":"Overview","text":""},{"location":"modules/overview/#modules-overview","title":"Modules Overview","text":""},{"location":"modules/overview/#overview","title":"Overview","text":"<p>This page provides documentation for Modules Overview.</p>"},{"location":"modules/overview/#description","title":"Description","text":"<p>Modules Overview is a component of the Unity-Claude-Automation system.</p>"},{"location":"modules/overview/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"modules/overview/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"modules/overview/#examples","title":"Examples","text":""},{"location":"modules/overview/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"modules/overview/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"modules/overview/#api-reference","title":"API Reference","text":""},{"location":"modules/overview/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"modules/overview/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"modules/overview/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"modules/repo-analyst/","title":"Unity-Claude-RepoAnalyst","text":""},{"location":"modules/repo-analyst/#unity-claude-repoanalyst-module","title":"Unity-Claude-RepoAnalyst Module","text":""},{"location":"modules/repo-analyst/#overview","title":"Overview","text":"<p>This page provides documentation for Unity-Claude-RepoAnalyst Module.</p>"},{"location":"modules/repo-analyst/#description","title":"Description","text":"<p>Unity-Claude-RepoAnalyst Module is a component of the Unity-Claude-Automation system.</p>"},{"location":"modules/repo-analyst/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"modules/repo-analyst/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"modules/repo-analyst/#examples","title":"Examples","text":""},{"location":"modules/repo-analyst/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"modules/repo-analyst/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"modules/repo-analyst/#api-reference","title":"API Reference","text":""},{"location":"modules/repo-analyst/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"modules/repo-analyst/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"modules/repo-analyst/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"modules/system-status/","title":"Unity-Claude-SystemStatus","text":""},{"location":"modules/system-status/#unity-claude-systemstatus-module","title":"Unity-Claude-SystemStatus Module","text":""},{"location":"modules/system-status/#overview","title":"Overview","text":"<p>This page provides documentation for Unity-Claude-SystemStatus Module.</p>"},{"location":"modules/system-status/#description","title":"Description","text":"<p>Unity-Claude-SystemStatus Module is a component of the Unity-Claude-Automation system.</p>"},{"location":"modules/system-status/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"modules/system-status/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"modules/system-status/#examples","title":"Examples","text":""},{"location":"modules/system-status/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"modules/system-status/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"modules/system-status/#api-reference","title":"API Reference","text":""},{"location":"modules/system-status/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"modules/system-status/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"modules/system-status/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"resources/faq/","title":"FAQ","text":""},{"location":"resources/faq/#faq","title":"FAQ","text":""},{"location":"resources/faq/#overview","title":"Overview","text":"<p>This page provides documentation for FAQ.</p>"},{"location":"resources/faq/#description","title":"Description","text":"<p>FAQ is a component of the Unity-Claude-Automation system.</p>"},{"location":"resources/faq/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"resources/faq/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"resources/faq/#examples","title":"Examples","text":""},{"location":"resources/faq/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"resources/faq/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"resources/faq/#api-reference","title":"API Reference","text":""},{"location":"resources/faq/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"resources/faq/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"resources/faq/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"resources/glossary/","title":"Glossary","text":""},{"location":"resources/glossary/#glossary","title":"Glossary","text":""},{"location":"resources/glossary/#overview","title":"Overview","text":"<p>This page provides documentation for Glossary.</p>"},{"location":"resources/glossary/#description","title":"Description","text":"<p>Glossary is a component of the Unity-Claude-Automation system.</p>"},{"location":"resources/glossary/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"resources/glossary/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"resources/glossary/#examples","title":"Examples","text":""},{"location":"resources/glossary/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"resources/glossary/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"resources/glossary/#api-reference","title":"API Reference","text":""},{"location":"resources/glossary/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"resources/glossary/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"resources/glossary/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"resources/learnings/","title":"Learnings","text":""},{"location":"resources/learnings/#important-learnings","title":"Important Learnings","text":""},{"location":"resources/learnings/#overview","title":"Overview","text":"<p>This page provides documentation for Important Learnings.</p>"},{"location":"resources/learnings/#description","title":"Description","text":"<p>Important Learnings is a component of the Unity-Claude-Automation system.</p>"},{"location":"resources/learnings/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"resources/learnings/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"resources/learnings/#examples","title":"Examples","text":""},{"location":"resources/learnings/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"resources/learnings/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"resources/learnings/#api-reference","title":"API Reference","text":""},{"location":"resources/learnings/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"resources/learnings/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"resources/learnings/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"resources/troubleshooting/","title":"Troubleshooting","text":""},{"location":"resources/troubleshooting/#troubleshooting-guide","title":"Troubleshooting Guide","text":""},{"location":"resources/troubleshooting/#overview","title":"Overview","text":"<p>This comprehensive troubleshooting guide helps you resolve common issues with Unity-Claude-Automation system.</p>"},{"location":"resources/troubleshooting/#common-issues","title":"Common Issues","text":""},{"location":"resources/troubleshooting/#unity-connection-problems","title":"Unity Connection Problems","text":""},{"location":"resources/troubleshooting/#unity-editor-not-detected","title":"Unity Editor Not Detected","text":"<pre><code># Check if Unity is running\nGet-Process Unity -ErrorAction SilentlyContinue\n\n# Verify Unity path configuration\nGet-UnityEditorPath\n\n# Test Unity connection\nTest-UnityConnection -Verbose\n</code></pre>"},{"location":"resources/troubleshooting/#log-file-access-denied","title":"Log File Access Denied","text":"<ul> <li>Ensure PowerShell runs with appropriate permissions</li> <li>Check file permissions on <code>Editor.log</code></li> <li>Verify no other process is locking the file</li> </ul>"},{"location":"resources/troubleshooting/#claude-api-issues","title":"Claude API Issues","text":""},{"location":"resources/troubleshooting/#authentication-failed","title":"Authentication Failed","text":"<pre><code># Test API key\nTest-ClaudeAPIKey\n\n# Verify environment variable\n$env:CLAUDE_API_KEY\n\n# Re-set API key\nSet-ClaudeAPIKey -Key \"your-key-here\"\n</code></pre>"},{"location":"resources/troubleshooting/#rate-limiting","title":"Rate Limiting","text":"<ul> <li>Implement exponential backoff</li> <li>Check daily/hourly limits</li> <li>Use caching for repeated queries</li> </ul>"},{"location":"resources/troubleshooting/#error-codes","title":"Error Codes","text":"Code Description Solution E001 Unity not found Install Unity or update path E002 API key invalid Set valid Claude API key E003 Module not loaded Import required modules E004 Permission denied Run as Administrator E005 Network timeout Check internet connection E006 GitHub token invalid Update GitHub PAT E007 Dashboard port in use Change port or stop conflicting service E008 Cache corruption Clear cache with <code>Clear-SystemCache</code> E009 Event log full Archive old events E010 Webhook failed Verify webhook URL and credentials"},{"location":"resources/troubleshooting/#performance","title":"Performance Issues","text":""},{"location":"resources/troubleshooting/#slow-response-times","title":"Slow Response Times","text":""},{"location":"resources/troubleshooting/#diagnosis","title":"Diagnosis","text":"<pre><code># Check system performance\nGet-SystemPerformanceMetrics\n\n# Monitor resource usage\nStart-PerformanceMonitor -Duration 60\n\n# Analyze bottlenecks\nGet-PerformanceBottlenecks\n</code></pre>"},{"location":"resources/troubleshooting/#solutions","title":"Solutions","text":"<ol> <li> <p>Enable Parallel Processing <pre><code>Set-SystemConfiguration -EnableParallel $true\n</code></pre></p> </li> <li> <p>Increase Cache Size <pre><code>Set-CacheConfiguration -MaxSize 1GB\n</code></pre></p> </li> <li> <p>Optimize Log Monitoring <pre><code>Set-MonitoringInterval -Seconds 5\n</code></pre></p> </li> </ol>"},{"location":"resources/troubleshooting/#high-memory-usage","title":"High Memory Usage","text":"<ul> <li>Clear old logs: <code>Clear-OldLogs -DaysOld 30</code></li> <li>Reduce cache size: <code>Set-CacheSize -MB 500</code></li> <li>Disable verbose logging: <code>Set-LogLevel -Level Warning</code></li> </ul>"},{"location":"resources/troubleshooting/#cpu-spikes","title":"CPU Spikes","text":"<ul> <li>Limit concurrent operations: <code>Set-MaxConcurrency -Limit 4</code></li> <li>Enable throttling: <code>Enable-Throttling -MaxCPU 70</code></li> <li>Schedule intensive tasks: <code>Set-MaintenanceWindow -Time \"02:00\"</code></li> </ul>"},{"location":"resources/troubleshooting/#connectivity","title":"Connectivity Problems","text":""},{"location":"resources/troubleshooting/#network-issues","title":"Network Issues","text":""},{"location":"resources/troubleshooting/#firewall-configuration","title":"Firewall Configuration","text":"<pre><code># Required ports\n# - 443: HTTPS (Claude API, GitHub)\n# - 8080: Dashboard (configurable)\n# - 9090: WebSocket (optional)\n\n# Test connectivity\nTest-NetConnection api.anthropic.com -Port 443\nTest-NetConnection api.github.com -Port 443\n</code></pre>"},{"location":"resources/troubleshooting/#proxy-settings","title":"Proxy Settings","text":"<pre><code># Configure proxy\nSet-SystemProxy -Server \"proxy.company.com\" -Port 8080\n\n# Test through proxy\nTest-ProxyConnection\n</code></pre>"},{"location":"resources/troubleshooting/#github-integration","title":"GitHub Integration","text":""},{"location":"resources/troubleshooting/#authentication-issues","title":"Authentication Issues","text":"<pre><code># Test GitHub token\nTest-GitHubPAT\n\n# Verify permissions\nGet-GitHubTokenPermissions\n\n# Re-authenticate\nSet-GitHubToken -Token \"ghp_xxxxxxxxxxxx\"\n</code></pre>"},{"location":"resources/troubleshooting/#repository-access","title":"Repository Access","text":"<ul> <li>Verify repository exists and is accessible</li> <li>Check branch protection rules</li> <li>Ensure workflow permissions</li> </ul>"},{"location":"resources/troubleshooting/#module-specific-issues","title":"Module-Specific Issues","text":""},{"location":"resources/troubleshooting/#unity-claude-systemstatus","title":"Unity-Claude-SystemStatus","text":""},{"location":"resources/troubleshooting/#monitoring-not-starting","title":"Monitoring Not Starting","text":"<pre><code># Check service status\nGet-MonitoringStatus\n\n# Restart monitoring\nRestart-Monitoring -Force\n\n# View logs\nGet-MonitoringLogs -Last 50\n</code></pre>"},{"location":"resources/troubleshooting/#unity-claude-eventlog","title":"Unity-Claude-EventLog","text":""},{"location":"resources/troubleshooting/#events-not-logging","title":"Events Not Logging","text":"<pre><code># Verify event log configuration\nTest-EventLogConfiguration\n\n# Recreate event source\nRegister-EventSource -Force\n\n# Test event writing\nWrite-TestEvent\n</code></pre>"},{"location":"resources/troubleshooting/#unity-claude-github","title":"Unity-Claude-GitHub","text":""},{"location":"resources/troubleshooting/#issue-creation-failing","title":"Issue Creation Failing","text":"<pre><code># Test issue creation\nTest-GitHubIssueCreation -DryRun\n\n# Check rate limits\nGet-GitHubRateLimit\n\n# Verify templates\nGet-GitHubIssueTemplates\n</code></pre>"},{"location":"resources/troubleshooting/#installation-problems","title":"Installation Problems","text":""},{"location":"resources/troubleshooting/#powershell-version","title":"PowerShell Version","text":"<pre><code># Check version (requires 7.5+)\n$PSVersionTable.PSVersion\n\n# Install PowerShell 7\nwinget install --id Microsoft.Powershell --source winget\n</code></pre>"},{"location":"resources/troubleshooting/#missing-dependencies","title":"Missing Dependencies","text":"<pre><code># Install all dependencies\nInstall-SystemDependencies\n\n# Verify installation\nTest-Dependencies -Verbose\n</code></pre>"},{"location":"resources/troubleshooting/#module-import-errors","title":"Module Import Errors","text":"<pre><code># Force module reload\nRemove-Module Unity-Claude-* -Force\nImport-Module Unity-Claude-SystemStatus -Force\n\n# Check module path\n$env:PSModulePath -split ';'\n</code></pre>"},{"location":"resources/troubleshooting/#dashboard-issues","title":"Dashboard Issues","text":""},{"location":"resources/troubleshooting/#dashboard-not-loading","title":"Dashboard Not Loading","text":"<ol> <li>Check if port is available: <code>Test-NetConnection localhost -Port 8080</code></li> <li>Verify Universal Dashboard module: <code>Get-Module UniversalDashboard</code></li> <li>Check browser console for errors</li> <li>Try different browser or incognito mode</li> </ol>"},{"location":"resources/troubleshooting/#data-not-updating","title":"Data Not Updating","text":"<ul> <li>Verify WebSocket connection</li> <li>Check refresh intervals</li> <li>Clear browser cache</li> <li>Restart dashboard service</li> </ul>"},{"location":"resources/troubleshooting/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"resources/troubleshooting/#debug-mode","title":"Debug Mode","text":"<pre><code># Enable debug output\n$DebugPreference = \"Continue\"\n\n# Run with verbose output\nStart-Monitoring -Verbose -Debug\n\n# Capture detailed logs\nStart-Transcript -Path \"debug.log\"\n</code></pre>"},{"location":"resources/troubleshooting/#log-analysis","title":"Log Analysis","text":"<pre><code># Search error patterns\nSelect-String -Path \"*.log\" -Pattern \"ERROR|FAIL|Exception\"\n\n# Analyze log frequency\nGet-LogFrequencyAnalysis -Path \"system.log\"\n\n# Export for analysis\nExport-Logs -Format CSV -OutputPath \"logs_export.csv\"\n</code></pre>"},{"location":"resources/troubleshooting/#system-diagnostics","title":"System Diagnostics","text":"<pre><code># Run full diagnostics\nInvoke-SystemDiagnostics -Full\n\n# Generate report\nNew-DiagnosticsReport -OutputPath \"diagnostics.html\"\n\n# Send to support\nSend-DiagnosticsReport -Email \"support@unity-claude.dev\"\n</code></pre>"},{"location":"resources/troubleshooting/#getting-help","title":"Getting Help","text":""},{"location":"resources/troubleshooting/#self-service-resources","title":"Self-Service Resources","text":"<ul> <li>FAQ - Frequently asked questions</li> <li>API Reference - Detailed documentation</li> <li>GitHub Issues</li> </ul>"},{"location":"resources/troubleshooting/#community-support","title":"Community Support","text":"<ul> <li>Discord: Join Server</li> <li>Forum: Community Forum</li> <li>Stack Overflow: Tag <code>unity-claude-automation</code></li> </ul>"},{"location":"resources/troubleshooting/#professional-support","title":"Professional Support","text":"<ul> <li>Email: support@unity-claude.dev</li> <li>Priority Support (Pro/Enterprise)</li> <li>Phone: +1-555-UNITY-AI (Enterprise only)</li> </ul>"},{"location":"resources/troubleshooting/#related-documentation","title":"Related Documentation","text":"<ul> <li>Installation Guide</li> <li>Configuration</li> <li>Best Practices</li> <li>Security Guidelines</li> </ul> <p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"user-guide/claude-integration/","title":"Claude Integration","text":""},{"location":"user-guide/claude-integration/#claude-integration","title":"Claude Integration","text":""},{"location":"user-guide/claude-integration/#overview","title":"Overview","text":"<p>This page provides documentation for Claude Integration.</p>"},{"location":"user-guide/claude-integration/#description","title":"Description","text":"<p>Claude Integration is a component of the Unity-Claude-Automation system.</p>"},{"location":"user-guide/claude-integration/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"user-guide/claude-integration/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"user-guide/claude-integration/#examples","title":"Examples","text":""},{"location":"user-guide/claude-integration/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"user-guide/claude-integration/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"user-guide/claude-integration/#api-reference","title":"API Reference","text":""},{"location":"user-guide/claude-integration/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"user-guide/claude-integration/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"user-guide/claude-integration/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"user-guide/dashboard/","title":"Dashboard","text":""},{"location":"user-guide/dashboard/#dashboard","title":"Dashboard","text":""},{"location":"user-guide/dashboard/#overview","title":"Overview","text":"<p>This page provides documentation for Dashboard.</p>"},{"location":"user-guide/dashboard/#description","title":"Description","text":"<p>Dashboard is a component of the Unity-Claude-Automation system.</p>"},{"location":"user-guide/dashboard/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"user-guide/dashboard/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"user-guide/dashboard/#examples","title":"Examples","text":""},{"location":"user-guide/dashboard/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"user-guide/dashboard/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"user-guide/dashboard/#api-reference","title":"API Reference","text":""},{"location":"user-guide/dashboard/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"user-guide/dashboard/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"user-guide/dashboard/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"user-guide/notifications/","title":"Notifications","text":""},{"location":"user-guide/notifications/#notifications","title":"Notifications","text":""},{"location":"user-guide/notifications/#overview","title":"Overview","text":"<p>This page provides documentation for Notifications.</p>"},{"location":"user-guide/notifications/#description","title":"Description","text":"<p>Notifications is a component of the Unity-Claude-Automation system.</p>"},{"location":"user-guide/notifications/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"user-guide/notifications/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"user-guide/notifications/#examples","title":"Examples","text":""},{"location":"user-guide/notifications/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"user-guide/notifications/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"user-guide/notifications/#api-reference","title":"API Reference","text":""},{"location":"user-guide/notifications/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"user-guide/notifications/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"user-guide/notifications/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"user-guide/overview/","title":"Overview","text":""},{"location":"user-guide/overview/#user-guide-overview","title":"User Guide Overview","text":"<p>Welcome to the Unity-Claude-Automation User Guide. This comprehensive guide will help you master all features of the system.</p>"},{"location":"user-guide/overview/#what-is-unity-claude-automation","title":"What is Unity-Claude-Automation?","text":"<p>Unity-Claude-Automation is an intelligent automation system that:</p> <ul> <li>Monitors Unity Editor for compilation errors and warnings</li> <li>Analyzes errors using Claude AI for intelligent suggestions</li> <li>Automates common Unity development tasks</li> <li>Integrates with GitHub for issue tracking and CI/CD</li> <li>Provides real-time monitoring and notifications</li> </ul>"},{"location":"user-guide/overview/#key-features","title":"Key Features","text":""},{"location":"user-guide/overview/#ai-powered-error-resolution","title":"\ud83e\udd16 AI-Powered Error Resolution","text":"<ul> <li>Automatic error detection and analysis</li> <li>Intelligent fix suggestions from Claude AI</li> <li>Context-aware code generation</li> <li>Learning from past resolutions</li> </ul>"},{"location":"user-guide/overview/#unity-automation","title":"\ud83d\udd04 Unity Automation","text":"<ul> <li>Automated builds and testing</li> <li>Asset processing automation</li> <li>Scene validation</li> <li>Prefab management</li> </ul>"},{"location":"user-guide/overview/#real-time-monitoring","title":"\ud83d\udcca Real-Time Monitoring","text":"<ul> <li>Live Unity Editor log monitoring</li> <li>Compilation status tracking</li> <li>Performance metrics</li> <li>Resource usage monitoring</li> </ul>"},{"location":"user-guide/overview/#smart-notifications","title":"\ud83d\udd14 Smart Notifications","text":"<ul> <li>Email alerts for critical errors</li> <li>Slack/Discord integration</li> <li>Webhook support</li> <li>Customizable notification rules</li> </ul>"},{"location":"user-guide/overview/#analytics-dashboard","title":"\ud83d\udcc8 Analytics Dashboard","text":"<ul> <li>Web-based monitoring dashboard</li> <li>Historical error trends</li> <li>Build success rates</li> <li>Team productivity metrics</li> </ul>"},{"location":"user-guide/overview/#quick-navigation","title":"Quick Navigation","text":""},{"location":"user-guide/overview/#for-new-users","title":"For New Users","text":"<ol> <li>Start with Unity Automation to understand Unity integration</li> <li>Learn about Claude Integration for AI features</li> <li>Explore System Monitoring for real-time tracking</li> </ol>"},{"location":"user-guide/overview/#for-administrators","title":"For Administrators","text":"<ol> <li>Configure Dashboard for team visibility</li> <li>Set up Notifications for alerts</li> <li>Review Security Best Practices</li> </ol>"},{"location":"user-guide/overview/#for-developers","title":"For Developers","text":"<ol> <li>Understand Architecture</li> <li>Learn API Reference</li> <li>Contribute via Development Guide</li> </ol>"},{"location":"user-guide/overview/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user-guide/overview/#1-automated-error-resolution","title":"1. Automated Error Resolution","text":"<p>When Unity encounters a compilation error:</p> <pre><code># System automatically:\n1. Detects error in Unity Editor log\n2. Extracts error context and code\n3. Sends to Claude for analysis\n4. Receives fix suggestions\n5. Optionally applies fix or creates GitHub issue\n</code></pre>"},{"location":"user-guide/overview/#2-continuous-integration","title":"2. Continuous Integration","text":"<p>Integrate with your CI/CD pipeline:</p> <pre><code># GitHub Actions example\n- name: Unity Build\n  run: |\n    pwsh -Command \"Start-UnityBuild -Target StandaloneWindows64\"\n\n- name: Check Errors\n  run: |\n    pwsh -Command \"Get-UnityErrors | Export-GitHubIssues\"\n</code></pre>"},{"location":"user-guide/overview/#3-team-collaboration","title":"3. Team Collaboration","text":"<p>Share error resolutions across team:</p> <pre><code># Create knowledge base entry\nNew-ErrorResolution -Error $error `\n                   -Solution $solution `\n                   -ShareWithTeam $true\n</code></pre>"},{"location":"user-guide/overview/#system-requirements","title":"System Requirements","text":""},{"location":"user-guide/overview/#minimum-requirements","title":"Minimum Requirements","text":"<ul> <li>Windows 10/11 or Server 2019+</li> <li>PowerShell 7.5+</li> <li>Unity 2021.3 LTS+</li> <li>8GB RAM</li> <li>10GB free disk space</li> </ul>"},{"location":"user-guide/overview/#recommended-setup","title":"Recommended Setup","text":"<ul> <li>Windows 11 or Server 2022</li> <li>PowerShell 7.5.2+</li> <li>Unity 2022.3 LTS</li> <li>16GB RAM</li> <li>SSD with 50GB free space</li> <li>Multi-core processor</li> </ul>"},{"location":"user-guide/overview/#getting-started-workflow","title":"Getting Started Workflow","text":"<pre><code>graph LR\n    A[Install System] --&gt; B[Configure Unity Path]\n    B --&gt; C[Set API Keys]\n    C --&gt; D[Start Monitoring]\n    D --&gt; E[View Dashboard]\n    E --&gt; F[Receive Notifications]</code></pre>"},{"location":"user-guide/overview/#feature-comparison","title":"Feature Comparison","text":"Feature Free Pro Enterprise Unity Error Monitoring \u2705 \u2705 \u2705 Basic AI Analysis \u2705 \u2705 \u2705 GitHub Integration \u274c \u2705 \u2705 Dashboard Basic Advanced Custom Notifications Email All Types Custom Support Community Priority Dedicated"},{"location":"user-guide/overview/#best-practices","title":"Best Practices","text":""},{"location":"user-guide/overview/#1-configuration","title":"1. Configuration","text":"<ul> <li>Keep configuration files in version control</li> <li>Use environment variables for sensitive data</li> <li>Regular backup of configuration</li> </ul>"},{"location":"user-guide/overview/#2-monitoring","title":"2. Monitoring","text":"<ul> <li>Set appropriate log levels</li> <li>Configure notification thresholds</li> <li>Review metrics regularly</li> </ul>"},{"location":"user-guide/overview/#3-performance","title":"3. Performance","text":"<ul> <li>Enable parallel processing for large projects</li> <li>Configure appropriate cache sizes</li> <li>Regular cleanup of old logs</li> </ul>"},{"location":"user-guide/overview/#4-security","title":"4. Security","text":"<ul> <li>Rotate API keys regularly</li> <li>Use secure credential storage</li> <li>Enable audit logging</li> </ul>"},{"location":"user-guide/overview/#troubleshooting-quick-links","title":"Troubleshooting Quick Links","text":"<ul> <li>Common Issues</li> <li>Error Codes</li> <li>Performance Issues</li> <li>Connection Problems</li> </ul>"},{"location":"user-guide/overview/#getting-help","title":"Getting Help","text":""},{"location":"user-guide/overview/#documentation","title":"Documentation","text":"<ul> <li>FAQ - Frequently asked questions</li> <li>Glossary - Term definitions</li> <li>API Reference - Detailed API docs</li> </ul>"},{"location":"user-guide/overview/#community","title":"Community","text":"<ul> <li>GitHub Issues - Bug reports and feature requests</li> <li>Discord Server - Real-time help</li> <li>Stack Overflow - Tagged questions</li> </ul>"},{"location":"user-guide/overview/#professional-support","title":"Professional Support","text":"<ul> <li>Email: support@unity-claude.dev</li> <li>Priority Support (Pro/Enterprise)</li> <li>Training and consulting available</li> </ul>"},{"location":"user-guide/overview/#whats-next","title":"What's Next?","text":"<p>Ready to dive deeper? Here's your learning path:</p> <ol> <li>Basic Setup \u279c Unity Automation</li> <li>AI Features \u279c Claude Integration</li> <li>Monitoring \u279c System Monitoring</li> <li>Visualization \u279c Dashboard</li> <li>Alerts \u279c Notifications</li> </ol>"},{"location":"user-guide/overview/#version-information","title":"Version Information","text":"<p>Current Version: 3.0.0 - PowerShell Modules: 12 - Supported Unity: 2021.3+ - Claude API: v3 - Last Updated: 2025-08-23</p> <p>Continue to Unity Automation to begin using the system.</p>"},{"location":"user-guide/system-monitoring/","title":"System Status Monitoring","text":""},{"location":"user-guide/system-monitoring/#system-status-monitoring","title":"System Status Monitoring","text":""},{"location":"user-guide/system-monitoring/#overview","title":"Overview","text":"<p>This page provides documentation for System Status Monitoring.</p>"},{"location":"user-guide/system-monitoring/#description","title":"Description","text":"<p>System Status Monitoring is a component of the Unity-Claude-Automation system.</p>"},{"location":"user-guide/system-monitoring/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"user-guide/system-monitoring/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"user-guide/system-monitoring/#examples","title":"Examples","text":""},{"location":"user-guide/system-monitoring/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"user-guide/system-monitoring/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"user-guide/system-monitoring/#api-reference","title":"API Reference","text":""},{"location":"user-guide/system-monitoring/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"user-guide/system-monitoring/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"user-guide/system-monitoring/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"},{"location":"user-guide/unity-automation/","title":"Unity Automation","text":""},{"location":"user-guide/unity-automation/#unity-automation","title":"Unity Automation","text":""},{"location":"user-guide/unity-automation/#overview","title":"Overview","text":"<p>This page provides documentation for Unity Automation.</p>"},{"location":"user-guide/unity-automation/#description","title":"Description","text":"<p>Unity Automation is a component of the Unity-Claude-Automation system.</p>"},{"location":"user-guide/unity-automation/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"user-guide/unity-automation/#usage","title":"Usage","text":"<pre><code># Example usage\n</code></pre>"},{"location":"user-guide/unity-automation/#examples","title":"Examples","text":""},{"location":"user-guide/unity-automation/#example-1","title":"Example 1","text":"<pre><code># Code example\n</code></pre>"},{"location":"user-guide/unity-automation/#configuration","title":"Configuration","text":"<p>Configuration options for this component.</p>"},{"location":"user-guide/unity-automation/#api-reference","title":"API Reference","text":""},{"location":"user-guide/unity-automation/#functions","title":"Functions","text":"Function Description Function1 Description Function2 Description"},{"location":"user-guide/unity-automation/#related-documentation","title":"Related Documentation","text":"<ul> <li>Home</li> <li>User Guide</li> <li>Getting Started</li> </ul>"},{"location":"user-guide/unity-automation/#notes","title":"Notes","text":"<p>Info</p> <p>This is placeholder documentation. Content will be updated with actual implementation details.</p> <p>Last updated: 2025-08-23</p>"}]}