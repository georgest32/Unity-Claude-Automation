# Start-UnifiedSystem-Fixed.ps1
# Fixed version - starts SystemStatusMonitoring in separate window

# PowerShell 7 Self-Elevation

param([switch])

if ($PSVersionTable.PSVersion.Major -lt 7) {
    $pwsh7 = "C:\Program Files\PowerShell\7\pwsh.exe"
    if (Test-Path $pwsh7) {
        Write-Host "Upgrading to PowerShell 7..." -ForegroundColor Yellow
        $arguments = @("-NoProfile", "-ExecutionPolicy", "Bypass", "-File", $MyInvocation.MyCommand.Path) + $args
        Start-Process -FilePath $pwsh7 -ArgumentList $arguments -NoNewWindow -Wait
        exit
    } else {
        Write-Warning "PowerShell 7 not found. Running in PowerShell $($PSVersionTable.PSVersion)"
    }
}

Clear-Host
Write-Host '==================================================' -ForegroundColor Cyan
Write-Host 'Unity-Claude Unified System Startup (Fixed)' -ForegroundColor Yellow
Write-Host '==================================================' -ForegroundColor Cyan

) { 

# Step 1: Load SystemStatus module
Write-Host 'Loading SystemStatus module...' -ForegroundColor Yellow
 'Modules\Unity-Claude-SystemStatus\Unity-Claude-SystemStatus-Complete.psm1'
if (Test-Path  -Force -Global
    Initialize-SystemStatusMonitoring
    Write-Host '  Module loaded and initialized' -ForegroundColor Green
}

# Step 2: Start monitoring in new window
Write-Host 'Starting SystemStatusMonitoring...' -ForegroundColor Yellow
 'Start-SystemStatusMonitoring-Persistent.ps1'
if (Test-Path  -WorkingDirectory  = Join-Path ) {
    Start-Sleep -Seconds 2
    Start-Process pwsh -ArgumentList '-NoExit', '-ExecutionPolicy', 'Bypass', '-File', 
    Write-Host '  Started in new window' -ForegroundColor Green
}

Write-Host ''
Write-Host 'All systems launched!' -ForegroundColor Green

# SIG # Begin signature block
# MIIFzgYJKoZIhvcNAQcCoIIFvzCCBbsCAQExDzANBglghkgBZQMEAgEFADB5Bgor
# BgEEAYI3AgEEoGswaTA0BgorBgEEAYI3AgEeMCYCAwEAAAQQH8w7YFlLCE63JNLG
# KX7zUQIBAAIBAAIBAAIBAAIBADAxMA0GCWCGSAFlAwQCAQUABCA3WvtLq0joVHr8
# g5OI/QdLdichK4INP59yx6Zzm2NKaaCCAzAwggMsMIICFKADAgECAhB1HRbZIqgr
# lUTwkh3hnGtFMA0GCSqGSIb3DQEBCwUAMC4xLDAqBgNVBAMMI1VuaXR5LUNsYXVk
# ZS1BdXRvbWF0aW9uLURldmVsb3BtZW50MB4XDTI1MDgyMDIxMTUxN1oXDTI2MDgy
# MDIxMzUxN1owLjEsMCoGA1UEAwwjVW5pdHktQ2xhdWRlLUF1dG9tYXRpb24tRGV2
# ZWxvcG1lbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCx4feqKdUQ
# 6GufY4umNzlM1Pi8aHUGR8HlfhIWFjsrRAxCxhieRlWbHe0Hw+pVBeX76X57e5Pu
# 4Kxxzu+MxMry0NJYf3yOLRTfhYskHBcLraXUCtrMwqnhPKvul6Sx6Lu8vilk605W
# ADJNifl3WFuexVCYJJM9G2mfuYIDN+rZ5zmpn0qCXum49bm629h+HyJ205Zrn9aB
# hIrA4i/JlrAh1kosWnCo62psl7ixbNVqFqwWEt+gAqSeIo4ChwkOQl7GHmk78Q5I
# oRneY4JTVlKzhdZEYhJGFXeoZml/5jcmUcox4UNYrKdokE7z8ZTmyowBOUNS+sHI
# G1TY5DZSb8vdAgMBAAGjRjBEMA4GA1UdDwEB/wQEAwIHgDATBgNVHSUEDDAKBggr
# BgEFBQcDAzAdBgNVHQ4EFgQUfDms7LrGVboHjmwlSyIjYD/JLQwwDQYJKoZIhvcN
# AQELBQADggEBABRMsfT7DzKy+aFi4HDg0MpxmbjQxOH1lzUzanaECRiyA0sn7+sA
# /4jvis1+qC5NjDGkLKOTCuDzIXnBWLCCBugukXbIO7g392ANqKdHjBHw1WlLvMVk
# 4WSmY096lzpvDd3jJApr/Alcp4KmRGNLnQ3vv+F9Uj58Uo1qjs85vt6fl9xe5lo3
# rFahNHL4ngjgyF8emNm7FItJeNtVe08PhFn0caOX0FTzXrZxGGO6Ov8tzf91j/qK
# QdBifG7Fx3FF7DifNqoBBo55a7q0anz30k8p+V0zllrLkgGXfOzXmA1L37Qmt3QB
# FCdJVigjQMuHcrJsWd8rg857Og0un91tfZIxggH0MIIB8AIBATBCMC4xLDAqBgNV
# BAMMI1VuaXR5LUNsYXVkZS1BdXRvbWF0aW9uLURldmVsb3BtZW50AhB1HRbZIqgr
# lUTwkh3hnGtFMA0GCWCGSAFlAwQCAQUAoIGEMBgGCisGAQQBgjcCAQwxCjAIoAKA
# AKECgAAwGQYJKoZIhvcNAQkDMQwGCisGAQQBgjcCAQQwHAYKKwYBBAGCNwIBCzEO
# MAwGCisGAQQBgjcCARUwLwYJKoZIhvcNAQkEMSIEII9t5rJRM2QXZVzWln8lUdEB
# SxRBIsjn266grUKKzADgMA0GCSqGSIb3DQEBAQUABIIBAFuHV0qBTzaX2SdRWPzZ
# T65Asp/Na3BISbw/XwEmfCJ6CLcyMlvoKkSdkbJ6bkO2V38SBYl9A1w3qv5yP1kH
# +WD1whUIp2c/+ndQ9t50Gne7bA/tNh3XTyyH7DZhhjONNpqqKipDiFLCkOKBm/kG
# 2IW/BZLt24Z9bbqp222r6ZCfZuvQmn+uQlgGW5CzUNRKUrtYKG2qBvbVjuGU+sC0
# CF64+4nl6K4CQ7RS9chreI+J0kCxMsyEgpRNy0wYfWgg9fHvyV4aw0V7kQ+Ue9DG
# Sr5f9E9BjjG8UXhYmN/2QLFut8H5mF7DbkipqFUI2yby8gyH90g8c9V/R12WgDGi
# H8A=
# SIG # End signature block
