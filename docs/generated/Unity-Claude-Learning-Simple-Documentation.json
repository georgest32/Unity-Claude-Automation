{
  "Path": "C:\\UnityProjects\\Sound-and-Shoal\\Unity-Claude-Automation\\Modules\\Unity-Claude-Learning-Simple",
  "Commands": [
    {
      "Parameters": [
        "ErrorMessage",
        "ErrorType",
        "Fix",
        "Context",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Add-ErrorPattern",
      "Synopsis": "Adds a new error pattern to the learning system",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ErrorMessage",
        "FilePath",
        "DryRun",
        "Force",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Apply-AutoFix",
      "Synopsis": "Automatically applies a fix based on learned patterns",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Clear-LevenshteinCache",
      "Synopsis": "Clears the Levenshtein distance cache",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Path",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Export-LearningReport",
      "Synopsis": "Exports learning report to HTML",
      "CommandType": 2
    },
    {
      "Parameters": [
        "AST",
        "PatternType",
        "Predicate",
        "ErrorMessage",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Find-CodePattern",
      "Synopsis": "Searches AST for specific code patterns",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ErrorMessage",
        "MinSimilarity",
        "MaxResults",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Find-SimilarPatterns",
      "Synopsis": "Finds patterns similar to the given error message",
      "CommandType": 2
    },
    {
      "Parameters": [
        "AST",
        "ElementTypes",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-ASTElements",
      "Synopsis": "Extracts specific elements from AST",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Code",
        "FilePath",
        "Language",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-CodeAST",
      "Synopsis": "Parses PowerShell code and returns the Abstract Syntax Tree",
      "CommandType": 2
    },
    {
      "Parameters": [],
      "Name": "Get-LearningConfig",
      "Synopsis": "\r\nGet-LearningConfig \r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-LearningReport",
      "Synopsis": "Generates a learning system performance report",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-LevenshteinCacheInfo",
      "Synopsis": "Gets information about the Levenshtein cache",
      "CommandType": 2
    },
    {
      "Parameters": [
        "String1",
        "String2",
        "CaseSensitive",
        "UseCache",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-LevenshteinDistance",
      "Synopsis": "Calculates the Levenshtein distance between two strings",
      "CommandType": 2
    },
    {
      "Parameters": [
        "String1",
        "String2",
        "CaseSensitive",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-StringSimilarity",
      "Synopsis": "Calculates similarity percentage between two strings",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ErrorMessage",
        "MinConfidence",
        "UseFuzzyMatching",
        "MinSimilarity",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-SuggestedFixes",
      "Synopsis": "Gets suggested fixes for an error based on learned patterns",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ErrorCode",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-UnityErrorPattern",
      "Synopsis": "Gets Unity-specific error patterns",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Initialize-LearningStorage",
      "Synopsis": "Initializes the JSON-based learning storage",
      "CommandType": 2
    },
    {
      "Parameters": [
        "MaxPatternAge",
        "MinConfidence",
        "EnableAutoFix",
        "EnableFuzzyMatching",
        "MinSimilarity",
        "MaxCacheSize",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Set-LearningConfig",
      "Synopsis": "Configures the learning system",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Code",
        "FilePath",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-CodeSyntax",
      "Synopsis": "Validates PowerShell code syntax",
      "CommandType": 2
    },
    {
      "Parameters": [
        "String1",
        "String2",
        "MinSimilarity",
        "CaseSensitive",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-FuzzyMatch",
      "Synopsis": "Tests if two strings match within a similarity threshold",
      "CommandType": 2
    },
    {
      "Parameters": [
        "PatternId",
        "FixId",
        "Success",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Update-FixSuccess",
      "Synopsis": "Updates success metrics for a fix",
      "CommandType": 2
    }
  ],
  "Name": "Unity-Claude-Learning-Simple",
  "ExportedFunctions": [
    "Add-ErrorPattern",
    "Apply-AutoFix",
    "Clear-LevenshteinCache",
    "Export-LearningReport",
    "Find-CodePattern",
    "Find-SimilarPatterns",
    "Get-ASTElements",
    "Get-CodeAST",
    "Get-LearningConfig",
    "Get-LearningReport",
    "Get-LevenshteinCacheInfo",
    "Get-LevenshteinDistance",
    "Get-StringSimilarity",
    "Get-SuggestedFixes",
    "Get-UnityErrorPattern",
    "Initialize-LearningStorage",
    "Set-LearningConfig",
    "Test-CodeSyntax",
    "Test-FuzzyMatch",
    "Update-FixSuccess"
  ],
  "Version": {
    "Major": 1,
    "Minor": 1,
    "Build": 0,
    "Revision": -1,
    "MajorRevision": -1,
    "MinorRevision": -1
  }
}
