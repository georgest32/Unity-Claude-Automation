{
  "Path": "C:\\UnityProjects\\Sound-and-Shoal\\Unity-Claude-Automation\\Modules\\Unity-Claude-GitHub",
  "Commands": [
    {
      "Parameters": [
        "Owner",
        "Repository",
        "IssueNumber",
        "Comment",
        "IncludeTimestamp",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Add-GitHubIssueComment",
      "Synopsis": "Adds a comment to a GitHub issue",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Force",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable",
        "WhatIf",
        "Confirm"
      ],
      "Name": "Clear-GitHubPAT",
      "Synopsis": "Clears the stored GitHub Personal Access Token",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Owner",
        "Repository",
        "IssueNumber",
        "ErrorSignature",
        "MinConfidence",
        "AddResolvedLabel",
        "DryRun",
        "ReopenIfRecurring",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Close-GitHubIssueIfResolved",
      "Synopsis": "Automatically closes a GitHub issue if the associated Unity error has been resolved",
      "CommandType": 2
    },
    {
      "Parameters": [
        "UnityError",
        "IncludeContext",
        "IncludeSystemInfo",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Format-UnityErrorAsIssue",
      "Synopsis": "Formats Unity compilation errors as GitHub issues",
      "CommandType": 2
    },
    {
      "Parameters": [
        "IncludeHistory",
        "Since",
        "GroupBy",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-GitHubAPIUsageStats",
      "Synopsis": "Gets GitHub API usage statistics and rate limit information",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Owner",
        "Repository",
        "Branch",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-GitHubBranchProtection",
      "Synopsis": "Retrieves branch protection rules for a GitHub repository.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Environment",
        "ConfigPath",
        "Validate",
        "UnityProject",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-GitHubIntegrationConfig",
      "Synopsis": "Retrieves the GitHub integration configuration with environment overrides",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Owner",
        "Repository",
        "IssueNumber",
        "IncludeComments",
        "IncludeEvents",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-GitHubIssueStatus",
      "Synopsis": "Gets the current status and lifecycle information for a GitHub issue",
      "CommandType": 2
    },
    {
      "Parameters": [
        "UnityError",
        "TemplateType",
        "Config",
        "IncludeCodeContext",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-GitHubIssueTemplate",
      "Synopsis": "Retrieves and processes GitHub issue templates for Unity errors",
      "CommandType": 2
    },
    {
      "Parameters": [
        "AsCredential",
        "AsPlainText",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-GitHubPAT",
      "Synopsis": "Retrieves the stored GitHub Personal Access Token",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ShowAll",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-GitHubRateLimit",
      "Synopsis": "Gets the current GitHub API rate limit status",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ConfigPath",
        "IncludeMetadata",
        "TestAccess",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-GitHubRepositories",
      "Synopsis": "Gets configured GitHub repositories for Unity projects",
      "CommandType": 2
    },
    {
      "Parameters": [
        "UnityError",
        "IncludeLineNumber",
        "Algorithm",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-UnityErrorSignature",
      "Synopsis": "Generates a unique signature hash for Unity errors",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ProjectPath",
        "ProjectName",
        "ErrorContext",
        "ConfigPath",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-UnityProjectCategory",
      "Synopsis": "Gets the category and repository mapping for a Unity project",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Uri",
        "Method",
        "Body",
        "Headers",
        "MaxAttempts",
        "BaseDelay",
        "NoRetry",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Invoke-GitHubAPIWithRetry",
      "Synopsis": "Invokes GitHub API with exponential backoff retry logic",
      "CommandType": 2
    },
    {
      "Parameters": [
        "RepositoryPath",
        "OutputPath",
        "OwnershipRules",
        "DefaultOwners",
        "AnalyzeStructure",
        "IncludeComments",
        "Validate",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable",
        "WhatIf",
        "Confirm"
      ],
      "Name": "New-GitHubCodeOwnersFile",
      "Synopsis": "Creates or updates a CODEOWNERS file for GitHub repository governance.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Owner",
        "Repository",
        "Title",
        "Body",
        "Labels",
        "Assignees",
        "Milestone",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "New-GitHubIssue",
      "Synopsis": "Creates a new issue in a GitHub repository",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Owner",
        "Repository",
        "Title",
        "Body",
        "Head",
        "Base",
        "Draft",
        "Labels",
        "Reviewers",
        "TeamReviewers",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "New-GitHubPullRequest",
      "Synopsis": "Creates a new GitHub pull request",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Query",
        "Owner",
        "Repository",
        "State",
        "Labels",
        "Sort",
        "Order",
        "PerPage",
        "MaxResults",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Search-GitHubIssues",
      "Synopsis": "Searches for issues in GitHub repositories",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Repositories",
        "Query",
        "State",
        "Labels",
        "Sort",
        "Order",
        "MaxPerRepo",
        "IncludePullRequests",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Search-GitHubIssuesMultiRepo",
      "Synopsis": "Searches for issues across multiple GitHub repositories",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Owner",
        "Repository",
        "Branch",
        "RequiredReviews",
        "RequireCodeOwnerReviews",
        "DismissStaleReviews",
        "RequiredStatusChecks",
        "StrictStatusChecks",
        "EnforceAdmins",
        "AllowForcePushes",
        "AllowDeletions",
        "RequireLinearHistory",
        "RequireConversationResolution",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable",
        "WhatIf",
        "Confirm"
      ],
      "Name": "Set-GitHubBranchProtection",
      "Synopsis": "Configures branch protection rules for a GitHub repository.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Owner",
        "Repository",
        "ConfigurationProfile",
        "RepositoryPath",
        "BranchesToProtect",
        "RequiredReviews",
        "RequireCodeOwnerReviews",
        "RequiredStatusChecks",
        "OwnershipRules",
        "DefaultOwners",
        "EnableHITLIntegration",
        "DryRun",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable",
        "WhatIf",
        "Confirm"
      ],
      "Name": "Set-GitHubGovernanceConfiguration",
      "Synopsis": "Configures comprehensive GitHub governance policies for a repository.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Config",
        "ConfigPath",
        "DefaultOwner",
        "DefaultRepository",
        "CreateIssues",
        "CheckDuplicates",
        "Environment",
        "BackupExisting",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Set-GitHubIntegrationConfig",
      "Synopsis": "Sets GitHub integration configuration with validation",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Token",
        "SecureToken",
        "Credential",
        "ExpirationDate",
        "Force",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Set-GitHubPAT",
      "Synopsis": "Sets and securely stores a GitHub Personal Access Token",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Owner",
        "Repository",
        "Branch",
        "ExpectedReviews",
        "RequireCodeOwners",
        "RequireStatusChecks",
        "CheckEnforcement",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-GitHubBranchProtection",
      "Synopsis": "Tests and validates GitHub branch protection rules enforcement.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Config",
        "ConfigPath",
        "SchemaPath",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-GitHubIntegrationConfig",
      "Synopsis": "Validates GitHub integration configuration against schema",
      "CommandType": 2
    },
    {
      "Parameters": [
        "UnityError",
        "Owner",
        "Repository",
        "IncludeClosedIssues",
        "SimilarityThreshold",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-GitHubIssueDuplicate",
      "Synopsis": "Tests if a Unity error already has an open GitHub issue",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Token",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-GitHubPAT",
      "Synopsis": "Tests the validity of the stored GitHub Personal Access Token",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Owner",
        "Repository",
        "TestIssueOperations",
        "TestLabelOperations",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-GitHubRepositoryAccess",
      "Synopsis": "Tests API access to a GitHub repository",
      "CommandType": 2
    },
    {
      "Parameters": [
        "IssueNumber",
        "ErrorSignature",
        "UnityLogPath",
        "CurrentErrorsPath",
        "CheckCompilationSuccess",
        "Owner",
        "Repository",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-UnityErrorResolved",
      "Synopsis": "Tests if a Unity error associated with a GitHub issue has been resolved",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Owner",
        "Repository",
        "IssueNumber",
        "Title",
        "Body",
        "State",
        "Labels",
        "Assignees",
        "Milestone",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Update-GitHubIssue",
      "Synopsis": "Updates an existing GitHub issue",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Owner",
        "Repository",
        "IssueNumber",
        "State",
        "StateReason",
        "Labels",
        "AddLabels",
        "RemoveLabels",
        "Milestone",
        "Comment",
        "Assignees",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Update-GitHubIssueState",
      "Synopsis": "Updates the state of a GitHub issue with lifecycle tracking",
      "CommandType": 2
    }
  ],
  "Name": "Unity-Claude-GitHub",
  "ExportedFunctions": [
    "Add-GitHubIssueComment",
    "Clear-GitHubPAT",
    "Close-GitHubIssueIfResolved",
    "Format-UnityErrorAsIssue",
    "Get-GitHubAPIUsageStats",
    "Get-GitHubBranchProtection",
    "Get-GitHubIntegrationConfig",
    "Get-GitHubIssueStatus",
    "Get-GitHubIssueTemplate",
    "Get-GitHubPAT",
    "Get-GitHubRateLimit",
    "Get-GitHubRepositories",
    "Get-UnityErrorSignature",
    "Get-UnityProjectCategory",
    "Invoke-GitHubAPIWithRetry",
    "New-GitHubCodeOwnersFile",
    "New-GitHubIssue",
    "New-GitHubPullRequest",
    "Search-GitHubIssues",
    "Search-GitHubIssuesMultiRepo",
    "Set-GitHubBranchProtection",
    "Set-GitHubGovernanceConfiguration",
    "Set-GitHubIntegrationConfig",
    "Set-GitHubPAT",
    "Test-GitHubBranchProtection",
    "Test-GitHubIntegrationConfig",
    "Test-GitHubIssueDuplicate",
    "Test-GitHubPAT",
    "Test-GitHubRepositoryAccess",
    "Test-UnityErrorResolved",
    "Update-GitHubIssue",
    "Update-GitHubIssueState"
  ],
  "Version": {
    "Major": 2,
    "Minor": 1,
    "Build": 0,
    "Revision": -1,
    "MajorRevision": -1,
    "MinorRevision": -1
  }
}
