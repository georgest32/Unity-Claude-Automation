{
  "Path": "C:\\UnityProjects\\Sound-and-Shoal\\Unity-Claude-Automation\\Modules\\Unity-Claude-SystemStatus",
  "Commands": [
    {
      "Parameters": [
        "InputObject",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "ConvertTo-HashTable",
      "Synopsis": "\r\nConvertTo-HashTable [-InputObject] <Object> [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Force",
        "GenerateReport",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Disable-DiagnosticMode",
      "Synopsis": "Disables diagnostic mode and restores normal operation",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Disable-TraceLogging",
      "Synopsis": "Disables trace logging",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Level",
        "TraceFile",
        "IncludePerformanceCounters",
        "Duration",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Enable-DiagnosticMode",
      "Synopsis": "Enables diagnostic mode for comprehensive system troubleshooting",
      "CommandType": 2
    },
    {
      "Parameters": [
        "TraceFile",
        "Level",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Enable-TraceLogging",
      "Synopsis": "Enables trace logging outside of diagnostic mode",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Hours",
        "SubsystemName",
        "AlertLevel",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-AlertHistory",
      "Synopsis": "Gets health alert history for monitoring and analysis",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-CriticalSubsystems",
      "Synopsis": "Gets the list of critical subsystems for monitoring",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ProcessId",
        "InstanceName",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-ProcessPerformanceCounters",
      "Synopsis": "Gets process performance counters using enterprise-validated Get-Counter patterns",
      "CommandType": 2
    },
    {
      "Parameters": [
        "StatusData",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-RegisteredSubsystems",
      "Synopsis": "\r\nGet-RegisteredSubsystems [[-StatusData] <hashtable>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ServiceName",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-ServiceDependencyGraph",
      "Synopsis": "\r\nGet-ServiceDependencyGraph [-ServiceName] <string> [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemName",
        "BaseConfig",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-SubsystemCircuitBreakerConfig",
      "Synopsis": "Gets circuit breaker configuration for a specific subsystem with override support",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Path",
        "Force",
        "IncludeInvalid",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-SubsystemManifests",
      "Synopsis": "Discovers and loads subsystem manifest files.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemName",
        "ProcessNamePattern",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-SubsystemProcessId",
      "Synopsis": "\r\nGet-SubsystemProcessId [-SubsystemName] <string> [[-ProcessNamePattern] <string>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Manifests",
        "EnableParallelExecution",
        "Algorithm",
        "IncludeValidation",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-SubsystemStartupOrder",
      "Synopsis": "Creates an optimized startup sequence for subsystems based on manifest dependencies.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ComputerName",
        "CounterPaths",
        "SampleInterval",
        "MaxSamples",
        "Continuous",
        "OutputFormat",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-SystemPerformanceMetrics",
      "Synopsis": "Collects system performance metrics using Get-Counter with enhanced error handling",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ConfigPath",
        "ForceRefresh",
        "Overrides",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-SystemStatusConfiguration",
      "Synopsis": "Loads and validates SystemStatus configuration with layered override support",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-SystemUptime",
      "Synopsis": "\r\nGet-SystemUptime [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "DependencyGraph",
        "EnableParallelGroups",
        "Algorithm",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Get-TopologicalSort",
      "Synopsis": "Enhanced topological sorting with parallel execution detection and robust cycle validation.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Initialize-CommunicationState",
      "Synopsis": "Initializes the script-level CommunicationState object with all required properties.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Initialize-CrossModuleEvents",
      "Synopsis": "\r\nInitialize-CrossModuleEvents [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "CounterPaths",
        "SampleInterval",
        "EnableBackground",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Initialize-DiagnosticPerformanceMonitoring",
      "Synopsis": "Initializes performance counter monitoring for diagnostic mode",
      "CommandType": 2
    },
    {
      "Parameters": [
        "PipeName",
        "MaxConnections",
        "TimeoutSeconds",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Initialize-NamedPipeServer",
      "Synopsis": "\r\nInitialize-NamedPipeServer [[-PipeName] <string>] [[-MaxConnections] <int>] [[-TimeoutSeconds] <int>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "MinRunspaces",
        "MaxRunspaces",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Initialize-SubsystemRunspaces",
      "Synopsis": "\r\nInitialize-SubsystemRunspaces [[-MinRunspaces] <int>] [[-MaxRunspaces] <int>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Initialize-SystemStatusConfig",
      "Synopsis": "\r\nInitialize-SystemStatusConfig [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ProjectPath",
        "EnableCommunication",
        "EnableFileWatcher",
        "UseManifestDrivenStartup",
        "EnableParallelStartup",
        "StartupAlgorithm",
        "LegacyCompatibility",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Initialize-SystemStatusMonitoring",
      "Synopsis": "Initializes system status monitoring with manifest-driven subsystem discovery and dependency resolution.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemName",
        "TestResult",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Invoke-CircuitBreakerCheck",
      "Synopsis": "Implements circuit breaker pattern for subsystem failure detection",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Alert",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Invoke-EscalationProcedure",
      "Synopsis": "Implements escalation procedure for critical health alerts",
      "CommandType": 2
    },
    {
      "Parameters": [
        "LogPath",
        "MaxSizeMB",
        "MaxLogFiles",
        "CompressOldLogs",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Invoke-LogRotation",
      "Synopsis": "Performs size-based log rotation with compression and archive management",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Message",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Invoke-MessageHandler",
      "Synopsis": "\r\nInvoke-MessageHandler [-Message] <hashtable> [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Manifests",
        "ThrottleLimit",
        "TimeoutSeconds",
        "IncludePerformanceData",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Invoke-ParallelHealthCheck",
      "Synopsis": "Performs parallel health checks for independent subsystems",
      "CommandType": 2
    },
    {
      "Parameters": [
        "TestMessageId",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Measure-CommunicationPerformance",
      "Synopsis": "\r\nMeasure-CommunicationPerformance [[-TestMessageId] <string>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "OutputPath",
        "IncludePerformanceData",
        "IncludeLogAnalysis",
        "ReportPeriod",
        "LogPath",
        "Template",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "New-DiagnosticReport",
      "Synopsis": "Generates comprehensive diagnostic report with performance analysis and log trends",
      "CommandType": 2
    },
    {
      "Parameters": [
        "MutexName",
        "InitialOwner",
        "StrictSecurity",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "New-SecureMutex",
      "Synopsis": "Creates a mutex with secure permissions for subsystem singleton enforcement.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemName",
        "MutexName",
        "TimeoutMs",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "New-SubsystemMutex",
      "Synopsis": "Creates or acquires a mutex for a subsystem to ensure singleton operation.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "MessageType",
        "Source",
        "Target",
        "Payload",
        "CorrelationId",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "New-SystemStatusMessage",
      "Synopsis": "\r\nNew-SystemStatusMessage [-MessageType] <string> [-Source] <string> [-Target] <string> [[-Payload] <hashtable>] [[-CorrelationId] <string>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Read-SystemStatus",
      "Synopsis": "\r\nRead-SystemStatus [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "TimeoutMs",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Receive-SystemStatusMessage",
      "Synopsis": "\r\nReceive-SystemStatusMessage [[-TimeoutMs] <int>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Duration",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Register-DiagnosticTimeout",
      "Synopsis": "Registers a timer to automatically disable diagnostic mode after timeout",
      "CommandType": 2
    },
    {
      "Parameters": [
        "MessageType",
        "Handler",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Register-MessageHandler",
      "Synopsis": "\r\nRegister-MessageHandler [-MessageType] <string> [-Handler] <scriptblock> [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemName",
        "ModulePath",
        "Dependencies",
        "HealthCheckLevel",
        "RestartPriority",
        "StatusData",
        "ProcessId",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Register-Subsystem",
      "Synopsis": "\r\nRegister-Subsystem [-SubsystemName] <string> [-ModulePath] <string> [[-Dependencies] <string[]>] [[-HealthCheckLevel] <string>] [[-RestartPriority] <int>] [[-StatusData] <hashtable>] [[-ProcessId] <int>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ManifestPath",
        "Manifest",
        "ProcessId",
        "Force",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Register-SubsystemFromManifest",
      "Synopsis": "Registers a subsystem using configuration from a manifest file.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "MutexObject",
        "SubsystemName",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Remove-SubsystemMutex",
      "Synopsis": "Releases and disposes a subsystem mutex.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Force",
        "NoEventLog",
        "CorrelationId",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Restart-AutonomousAgent",
      "Synopsis": "Restarts the AutonomousAgent with event logging",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ServiceName",
        "Force",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Restart-ServiceWithDependencies",
      "Synopsis": "\r\nRestart-ServiceWithDependencies [-ServiceName] <string> [-Force] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Pattern",
        "LogPath",
        "StartTime",
        "EndTime",
        "LogLevels",
        "MaxResults",
        "Context",
        "OutputFormat",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Search-SystemStatusLogs",
      "Synopsis": "Performs efficient searching and analysis of SystemStatus log files",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SourceIdentifier",
        "MessageData",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Send-EngineEvent",
      "Synopsis": "\r\nSend-EngineEvent [-SourceIdentifier] <string> [-MessageData] <Object> [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "AlertLevel",
        "SubsystemName",
        "Message",
        "NotificationMethods",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Send-HealthAlert",
      "Synopsis": "Sends health alerts using enterprise notification methods",
      "CommandType": 2
    },
    {
      "Parameters": [
        "TargetSubsystems",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Send-HealthCheckRequest",
      "Synopsis": "\r\nSend-HealthCheckRequest [[-TargetSubsystems] <string[]>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemName",
        "StatusData",
        "HealthScore",
        "AdditionalData",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Send-Heartbeat",
      "Synopsis": "\r\nSend-Heartbeat [-SubsystemName] <string> [[-StatusData] <hashtable>] [[-HealthScore] <double>] [[-AdditionalData] <hashtable>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "TargetSubsystem",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Send-HeartbeatRequest",
      "Synopsis": "\r\nSend-HeartbeatRequest [-TargetSubsystem] <string> [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Message",
        "UseNamedPipe",
        "RetryAttempts",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Send-SystemStatusMessage",
      "Synopsis": "\r\nSend-SystemStatusMessage [-Message] <hashtable> [[-RetryAttempts] <int>] [-UseNamedPipe] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Start-AutonomousAgentSafe",
      "Synopsis": "Safely starts or restarts the AutonomousAgent",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Start-CLIOrchestratorSafe",
      "Synopsis": "Safely starts the CLIOrchestrator, checking if it's already running",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ProcessingIntervalMs",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Start-MessageProcessor",
      "Synopsis": "\r\nStart-MessageProcessor [[-ProcessingIntervalMs] <int>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ServiceName",
        "FailureReason",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Start-ServiceRecoveryAction",
      "Synopsis": "\r\nStart-ServiceRecoveryAction [-ServiceName] <string> [-FailureReason] <string> [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemName",
        "Manifest",
        "TimeoutSeconds",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Start-SubsystemSafe",
      "Synopsis": "Generic subsystem startup with mutex-based singleton enforcement",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemType",
        "ScriptBlock",
        "RunspaceContext",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Start-SubsystemSession",
      "Synopsis": "\r\nStart-SubsystemSession [-SubsystemType] <string> [-ScriptBlock] <scriptblock> [-RunspaceContext] <hashtable> [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Start-SystemStatusFileWatcher",
      "Synopsis": "\r\nStart-SystemStatusFileWatcher [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Operation",
        "Context",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Start-TraceOperation",
      "Synopsis": "Starts tracing an operation and returns a trace context object",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Stop-DiagnosticPerformanceMonitoring",
      "Synopsis": "Stops diagnostic performance monitoring and cleans up resources",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Stop-MessageProcessor",
      "Synopsis": "\r\nStop-MessageProcessor [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Stop-NamedPipeServer",
      "Synopsis": "\r\nStop-NamedPipeServer [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Force",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Stop-SubsystemRunspaces",
      "Synopsis": "\r\nStop-SubsystemRunspaces [-Force] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Stop-SystemStatusFileWatcher",
      "Synopsis": "\r\nStop-SystemStatusFileWatcher [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Stop-SystemStatusMonitoring",
      "Synopsis": "\r\nStop-SystemStatusMonitoring [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "TraceContext",
        "Message",
        "Success",
        "Error",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Stop-TraceOperation",
      "Synopsis": "Stops tracing an operation and logs the completion",
      "CommandType": 2
    },
    {
      "Parameters": [
        "StatusData",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-AllSubsystemHeartbeats",
      "Synopsis": "\r\nTest-AllSubsystemHeartbeats [[-StatusData] <hashtable>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-AutonomousAgentStatus",
      "Synopsis": "Tests if the AutonomousAgent is running",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-CLIOrchestratorStatus",
      "Synopsis": "Tests if the CLIOrchestrator is running",
      "CommandType": 2
    },
    {
      "Parameters": [
        "HealthLevel",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-CriticalSubsystemHealth",
      "Synopsis": "Tests health of all critical subsystems",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-DiagnosticMode",
      "Synopsis": "Checks if diagnostic mode is currently enabled and returns status",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemName",
        "StatusData",
        "TimeoutSeconds",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-HeartbeatResponse",
      "Synopsis": "\r\nTest-HeartbeatResponse [-SubsystemName] <string> [[-StatusData] <hashtable>] [[-TimeoutSeconds] <int>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Manifest",
        "StrictMode",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-ManifestSecurity",
      "Synopsis": "Validates manifest security and prevents path traversal and injection attacks.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Mutex",
        "DetailedReport",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-MutexSecurity",
      "Synopsis": "Tests the security configuration of an existing mutex.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ProcessId",
        "HealthLevel",
        "ServiceName",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-ProcessHealth",
      "Synopsis": "Comprehensive process health validation with dual PID + service responsiveness detection",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ProcessId",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-ProcessPerformanceHealth",
      "Synopsis": "Tests process performance health against enterprise thresholds",
      "CommandType": 2
    },
    {
      "Parameters": [
        "ServiceName",
        "ProcessId",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-ServiceResponsiveness",
      "Synopsis": "Tests service responsiveness using WMI Win32_Service integration",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Path",
        "Manifest",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-SubsystemManifest",
      "Synopsis": "Validates a subsystem manifest file against the schema.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemName",
        "MutexName",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-SubsystemMutex",
      "Synopsis": "Tests if a mutex for a subsystem exists and is currently held.",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemName",
        "MutexName",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-SubsystemRunning",
      "Synopsis": "Tests if a subsystem is already running by checking mutex and process status",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemName",
        "Manifest",
        "IncludePerformanceData",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-SubsystemStatus",
      "Synopsis": "Generic health checking function for any subsystem type",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Config"
      ],
      "Name": "Test-SystemStatusConfiguration",
      "Synopsis": "Validates system status configuration",
      "CommandType": 2
    },
    {
      "Parameters": [
        "StatusData",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Test-SystemStatusSchema",
      "Synopsis": "\r\nTest-SystemStatusSchema [-StatusData] <hashtable> [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemName",
        "StatusData",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Unregister-Subsystem",
      "Synopsis": "\r\nUnregister-Subsystem [-SubsystemName] <string> [[-StatusData] <hashtable>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "SubsystemName",
        "StatusData",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Update-SubsystemProcessInfo",
      "Synopsis": "\r\nUpdate-SubsystemProcessInfo [-SubsystemName] <string> [[-StatusData] <hashtable>] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "StatusData",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Write-SystemStatus",
      "Synopsis": "\r\nWrite-SystemStatus [-StatusData] <hashtable> [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Message",
        "Level",
        "Source",
        "Operation",
        "Context",
        "Timer",
        "StructuredLogging",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Write-SystemStatusLog",
      "Synopsis": "\r\nWrite-SystemStatusLog [-Message] <string> [[-Level] <string>] [[-Source] <string>] [[-Operation] <string>] [[-Context] <hashtable>] [[-Timer] <Stopwatch>] [-StructuredLogging] [<CommonParameters>]\r\n",
      "CommandType": 2
    },
    {
      "Parameters": [
        "Message",
        "Operation",
        "Context",
        "Timer",
        "TraceLevel",
        "CallDepth",
        "Verbose",
        "Debug",
        "ErrorAction",
        "WarningAction",
        "InformationAction",
        "ProgressAction",
        "ErrorVariable",
        "WarningVariable",
        "InformationVariable",
        "OutVariable",
        "OutBuffer",
        "PipelineVariable"
      ],
      "Name": "Write-TraceLog",
      "Synopsis": "Writes detailed trace logging for execution flow analysis",
      "CommandType": 2
    }
  ],
  "Name": "Unity-Claude-SystemStatus",
  "ExportedFunctions": [
    "ConvertTo-HashTable",
    "Disable-DiagnosticMode",
    "Disable-TraceLogging",
    "Enable-DiagnosticMode",
    "Enable-TraceLogging",
    "Get-AlertHistory",
    "Get-CriticalSubsystems",
    "Get-ProcessPerformanceCounters",
    "Get-RegisteredSubsystems",
    "Get-ServiceDependencyGraph",
    "Get-SubsystemCircuitBreakerConfig",
    "Get-SubsystemManifests",
    "Get-SubsystemProcessId",
    "Get-SubsystemStartupOrder",
    "Get-SystemPerformanceMetrics",
    "Get-SystemStatusConfiguration",
    "Get-SystemUptime",
    "Get-TopologicalSort",
    "Initialize-CommunicationState",
    "Initialize-CrossModuleEvents",
    "Initialize-DiagnosticPerformanceMonitoring",
    "Initialize-NamedPipeServer",
    "Initialize-SubsystemRunspaces",
    "Initialize-SystemStatusConfig",
    "Initialize-SystemStatusMonitoring",
    "Invoke-CircuitBreakerCheck",
    "Invoke-EscalationProcedure",
    "Invoke-LogRotation",
    "Invoke-MessageHandler",
    "Invoke-ParallelHealthCheck",
    "Measure-CommunicationPerformance",
    "New-DiagnosticReport",
    "New-SecureMutex",
    "New-SubsystemMutex",
    "New-SystemStatusMessage",
    "Read-SystemStatus",
    "Receive-SystemStatusMessage",
    "Register-DiagnosticTimeout",
    "Register-MessageHandler",
    "Register-Subsystem",
    "Register-SubsystemFromManifest",
    "Remove-SubsystemMutex",
    "Restart-AutonomousAgent",
    "Restart-ServiceWithDependencies",
    "Search-SystemStatusLogs",
    "Send-EngineEvent",
    "Send-HealthAlert",
    "Send-HealthCheckRequest",
    "Send-Heartbeat",
    "Send-HeartbeatRequest",
    "Send-SystemStatusMessage",
    "Start-AutonomousAgentSafe",
    "Start-CLIOrchestratorSafe",
    "Start-MessageProcessor",
    "Start-ServiceRecoveryAction",
    "Start-SubsystemSafe",
    "Start-SubsystemSession",
    "Start-SystemStatusFileWatcher",
    "Start-TraceOperation",
    "Stop-DiagnosticPerformanceMonitoring",
    "Stop-MessageProcessor",
    "Stop-NamedPipeServer",
    "Stop-SubsystemRunspaces",
    "Stop-SystemStatusFileWatcher",
    "Stop-SystemStatusMonitoring",
    "Stop-TraceOperation",
    "Test-AllSubsystemHeartbeats",
    "Test-AutonomousAgentStatus",
    "Test-CLIOrchestratorStatus",
    "Test-CriticalSubsystemHealth",
    "Test-DiagnosticMode",
    "Test-HeartbeatResponse",
    "Test-ManifestSecurity",
    "Test-MutexSecurity",
    "Test-ProcessHealth",
    "Test-ProcessPerformanceHealth",
    "Test-ServiceResponsiveness",
    "Test-SubsystemManifest",
    "Test-SubsystemMutex",
    "Test-SubsystemRunning",
    "Test-SubsystemStatus",
    "Test-SystemStatusConfiguration",
    "Test-SystemStatusSchema",
    "Unregister-Subsystem",
    "Update-SubsystemProcessInfo",
    "Write-SystemStatus",
    "Write-SystemStatusLog",
    "Write-TraceLog"
  ],
  "Version": {
    "Major": 1,
    "Minor": 1,
    "Build": 0,
    "Revision": -1,
    "MajorRevision": -1,
    "MinorRevision": -1
  }
}
