# Load-MailKitAssemblies-Fixed.ps1
# Fixed MailKit assembly loading for PowerShell 5.1 .NET Framework compatibility
# Uses .NET Framework assemblies instead of .NET 8.0 assemblies
# Auto-generated by Fix-MailKitAssemblyCompatibility.ps1
# Date: 2025-08-21 13:56:21

function Load-MailKitAssemblies {
    [CmdletBinding()]
    param()
    
    try {
        # Check if assemblies are already loaded
        if ([System.AppDomain]::CurrentDomain.GetAssemblies() | Where-Object { $_.GetName().Name -eq "MimeKit" }) {
            Write-Host "[DEBUG] [MailKit] Assemblies already loaded" -ForegroundColor Gray
            return $true
        }
        
        # Load .NET Framework compatible assemblies
        Write-Host "[DEBUG] [MailKit] Loading MimeKit assembly (.NET Framework net48)..." -ForegroundColor Gray
        Add-Type -Path "C:\Program Files\PackageManagement\NuGet\Packages\MimeKit.4.13.0\lib\net48\MimeKit.dll" -ErrorAction Stop
        
        Write-Host "[DEBUG] [MailKit] Loading MailKit assembly (.NET Framework net48)..." -ForegroundColor Gray
        Add-Type -Path "C:\Program Files\PackageManagement\NuGet\Packages\MailKit.4.13.0\lib\net48\MailKit.dll" -ErrorAction Stop
        
        Write-Host "[SUCCESS] [MailKit] .NET Framework compatible assemblies loaded successfully" -ForegroundColor Green
        return $true
        
    } catch {
        Write-Warning "[MailKit] Failed to load .NET Framework assemblies: $($_.Exception.Message)"
        return $false
    }
}

# Test loading assemblies immediately
if (Load-MailKitAssemblies) {
    Write-Host "[INFO] [MailKit] Email notification assemblies ready (.NET Framework compatible)" -ForegroundColor White
    
    # Test creating MailKit objects
    try {
        $testClient = New-Object MailKit.Net.Smtp.SmtpClient
        $testMessage = New-Object MimeKit.MimeMessage
        
        if ($testClient -and $testMessage) {
            Write-Host "[SUCCESS] [MailKit] MailKit objects created successfully" -ForegroundColor Green
            $testClient.Dispose()
        }
    } catch {
        Write-Warning "[MailKit] Object creation test failed: $($_.Exception.Message)"
    }
} else {
    Write-Warning "[MailKit] Email notification assemblies not available"
}

# SIG # Begin signature block
# MIIFqQYJKoZIhvcNAQcCoIIFmjCCBZYCAQExCzAJBgUrDgMCGgUAMGkGCisGAQQB
# gjcCAQSgWzBZMDQGCisGAQQBgjcCAR4wJgIDAQAABBAfzDtgWUsITrck0sYpfvNR
# AgEAAgEAAgEAAgEAAgEAMCEwCQYFKw4DAhoFAAQUcdXMlDX+x8t+f6Ue96vt6oam
# +HCgggMwMIIDLDCCAhSgAwIBAgIQdR0W2SKoK5VE8JId4ZxrRTANBgkqhkiG9w0B
# AQsFADAuMSwwKgYDVQQDDCNVbml0eS1DbGF1ZGUtQXV0b21hdGlvbi1EZXZlbG9w
# bWVudDAeFw0yNTA4MjAyMTE1MTdaFw0yNjA4MjAyMTM1MTdaMC4xLDAqBgNVBAMM
# I1VuaXR5LUNsYXVkZS1BdXRvbWF0aW9uLURldmVsb3BtZW50MIIBIjANBgkqhkiG
# 9w0BAQEFAAOCAQ8AMIIBCgKCAQEAseH3qinVEOhrn2OLpjc5TNT4vGh1BkfB5X4S
# FhY7K0QMQsYYnkZVmx3tB8PqVQXl++l+e3uT7uCscc7vjMTK8tDSWH98ji0U34WL
# JBwXC62l1ArazMKp4Tyr7peksei7vL4pZOtOVgAyTYn5d1hbnsVQmCSTPRtpn7mC
# Azfq2ec5qZ9Kgl7puPW5utvYfh8idtOWa5/WgYSKwOIvyZawIdZKLFpwqOtqbJe4
# sWzVahasFhLfoAKkniKOAocJDkJexh5pO/EOSKEZ3mOCU1ZSs4XWRGISRhV3qGZp
# f+Y3JlHKMeFDWKynaJBO8/GU5sqMATlDUvrByBtU2OQ2Um/L3QIDAQABo0YwRDAO
# BgNVHQ8BAf8EBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUHAwMwHQYDVR0OBBYEFHw5
# rOy6xlW6B45sJUsiI2A/yS0MMA0GCSqGSIb3DQEBCwUAA4IBAQAUTLH0+w8ysvmh
# YuBw4NDKcZm40MTh9Zc1M2p2hAkYsgNLJ+/rAP+I74rNfqguTYwxpCyjkwrg8yF5
# wViwggboLpF2yDu4N/dgDainR4wR8NVpS7zFZOFkpmNPepc6bw3d4yQKa/wJXKeC
# pkRjS50N77/hfVI+fFKNao7POb7en5fcXuZaN6xWoTRy+J4I4MhfHpjZuxSLSXjb
# VXtPD4RZ9HGjl9BU8162cRhjujr/Lc3/dY/6ikHQYnxuxcdxRew4nzaqAQaOeWu6
# tGp899JPKfldM5Zay5IBl3zs15gNS9+0Jrd0ARQnSVYoI0DLh3KybFnfK4POezoN
# Lp/dbX2SMYIB4zCCAd8CAQEwQjAuMSwwKgYDVQQDDCNVbml0eS1DbGF1ZGUtQXV0
# b21hdGlvbi1EZXZlbG9wbWVudAIQdR0W2SKoK5VE8JId4ZxrRTAJBgUrDgMCGgUA
# oHgwGAYKKwYBBAGCNwIBDDEKMAigAoAAoQKAADAZBgkqhkiG9w0BCQMxDAYKKwYB
# BAGCNwIBBDAcBgorBgEEAYI3AgELMQ4wDAYKKwYBBAGCNwIBFTAjBgkqhkiG9w0B
# CQQxFgQUq2HCPuUiKfvDp0jG7XBvq/DJV6wwDQYJKoZIhvcNAQEBBQAEggEAMJbh
# WJ3LUefdJKVEgG5WMNpheRIE5CfG7AV1rCT3IrQdfgPbA0QqV1Niu2fZaFjuh2yQ
# rf/kn1vXz7tsUamuq2XxMAKGs5pf0UOhhJBkhssRsQYrFpMSZIfbF4hdeWO5xmh6
# sAO3jz8Gl/oRdCAOSXYX2diys9TQJvJjaZCXwN8PMZbilVYVla8+H3evkNtgpFgn
# 3gPkZE0Sbr2+d7s1Ou80Z1m81yv+02Eef2i+LY9P7fFHTxYIUVotM7crHFn6xFaQ
# GM0NzTV94xZxAA4ISx1RaVN2++iBNDeg2n9JPAMwIuCZH30fnFicSqRg3UnmmVsB
# uso+azNRKIw+xg6Zqg==
# SIG # End signature block
